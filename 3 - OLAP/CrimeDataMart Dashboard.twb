<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20201.20.0219.0753                               -->
<workbook original-version='18.1' source-build='2020.1.0 (20201.20.0219.0753)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='CrimeDataMart' inline='true' name='federated.0xxzh3n1ngww291cy2y771tzroj8' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='web0.eecs.uottawa.ca' name='postgres.0z4v9lv0bmvflk12du7ry0m7ye2e'>
            <connection authentication='username-password' class='postgres' dbname='group_42' odbc-native-protocol='' one-time-sql='' port='15432' server='web0.eecs.uottawa.ca' sslmode='require' username='qdo086' />
          </named-connection>
        </named-connections>
        <relation join='inner' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[crime_fact].[location_dim_key]' />
              <expression op='[location_dimension].[location_dim_key]' />
            </expression>
          </clause>
          <relation join='inner' type='join'>
            <clause type='join'>
              <expression op='='>
                <expression op='[crime_fact].[date_dim_key]' />
                <expression op='[date_dimension].[date_dim_key]' />
              </expression>
            </clause>
            <relation join='inner' type='join'>
              <clause type='join'>
                <expression op='='>
                  <expression op='[crime_fact].[event_dim_key]' />
                  <expression op='[event_dimension].[event_dim_key]' />
                </expression>
              </clause>
              <relation join='inner' type='join'>
                <clause type='join'>
                  <expression op='='>
                    <expression op='[crime_fact].[crime_dim_key]' />
                    <expression op='[crime_dimension].[crime_dim_key]' />
                  </expression>
                </clause>
                <relation connection='postgres.0z4v9lv0bmvflk12du7ry0m7ye2e' name='crime_fact' table='[CrimeDataMart].[crime_fact]' type='table' />
                <relation connection='postgres.0z4v9lv0bmvflk12du7ry0m7ye2e' name='crime_dimension' table='[CrimeDataMart].[crime_dimension]' type='table' />
              </relation>
              <relation connection='postgres.0z4v9lv0bmvflk12du7ry0m7ye2e' name='event_dimension' table='[CrimeDataMart].[event_dimension]' type='table' />
            </relation>
            <relation connection='postgres.0z4v9lv0bmvflk12du7ry0m7ye2e' name='date_dimension' table='[CrimeDataMart].[date_dimension]' type='table' />
          </relation>
          <relation connection='postgres.0z4v9lv0bmvflk12du7ry0m7ye2e' name='location_dimension' table='[CrimeDataMart].[location_dimension]' type='table' />
        </relation>
        <cols>
          <map key='[can_holiday_name]' value='[date_dimension].[can_holiday_name]' />
          <map key='[city (location_dimension)]' value='[location_dimension].[city]' />
          <map key='[city]' value='[event_dimension].[city]' />
          <map key='[crime_dim_key (crime_dimension)]' value='[crime_dimension].[crime_dim_key]' />
          <map key='[crime_dim_key]' value='[crime_fact].[crime_dim_key]' />
          <map key='[crime_rate]' value='[location_dimension].[crime_rate]' />
          <map key='[date_dim_key (date_dimension)]' value='[date_dimension].[date_dim_key]' />
          <map key='[date_dim_key]' value='[crime_fact].[date_dim_key]' />
          <map key='[day]' value='[date_dimension].[day]' />
          <map key='[day_of_year]' value='[date_dimension].[day_of_year]' />
          <map key='[event_dim_key (event_dimension)]' value='[event_dimension].[event_dim_key]' />
          <map key='[event_dim_key]' value='[crime_fact].[event_dim_key]' />
          <map key='[first_occurrence_time]' value='[crime_dimension].[first_occurrence_time]' />
          <map key='[full_date]' value='[date_dimension].[full_date]' />
          <map key='[is_can_holiday]' value='[date_dimension].[is_can_holiday]' />
          <map key='[is_fatal]' value='[crime_fact].[is_fatal]' />
          <map key='[is_month_end]' value='[date_dimension].[is_month_end]' />
          <map key='[is_month_start]' value='[date_dimension].[is_month_start]' />
          <map key='[is_nighttime]' value='[crime_fact].[is_nighttime]' />
          <map key='[is_traffic]' value='[crime_fact].[is_traffic]' />
          <map key='[is_us_holiday]' value='[date_dimension].[is_us_holiday]' />
          <map key='[is_violent]' value='[crime_dimension].[is_violent]' />
          <map key='[is_weekend]' value='[date_dimension].[is_weekend]' />
          <map key='[is_year_end]' value='[date_dimension].[is_year_end]' />
          <map key='[is_year_start]' value='[date_dimension].[is_year_start]' />
          <map key='[last_occurrence_time]' value='[crime_dimension].[last_occurrence_time]' />
          <map key='[latitude]' value='[location_dimension].[latitude]' />
          <map key='[location (location_dimension)]' value='[location_dimension].[location]' />
          <map key='[location]' value='[event_dimension].[location]' />
          <map key='[location_dim_key (location_dimension)]' value='[location_dimension].[location_dim_key]' />
          <map key='[location_dim_key]' value='[crime_fact].[location_dim_key]' />
          <map key='[location_size]' value='[event_dimension].[location_size]' />
          <map key='[longitude]' value='[location_dimension].[longitude]' />
          <map key='[month]' value='[date_dimension].[month]' />
          <map key='[name]' value='[event_dimension].[name]' />
          <map key='[neighborhood]' value='[location_dimension].[neighborhood]' />
          <map key='[offense_category]' value='[crime_dimension].[offense_category]' />
          <map key='[offense_type]' value='[crime_dimension].[offense_type]' />
          <map key='[quarter]' value='[date_dimension].[quarter]' />
          <map key='[reported_time]' value='[crime_dimension].[reported_time]' />
          <map key='[type]' value='[event_dimension].[type]' />
          <map key='[us_holiday_name]' value='[date_dimension].[us_holiday_name]' />
          <map key='[week_of_year]' value='[date_dimension].[week_of_year]' />
          <map key='[weekday]' value='[date_dimension].[weekday]' />
          <map key='[year]' value='[date_dimension].[year]' />
        </cols>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>date_dim_key</remote-name>
            <remote-type>3</remote-type>
            <local-name>[date_dim_key]</local-name>
            <parent-name>[crime_fact]</parent-name>
            <remote-alias>date_dim_key</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location_dim_key</remote-name>
            <remote-type>3</remote-type>
            <local-name>[location_dim_key]</local-name>
            <parent-name>[crime_fact]</parent-name>
            <remote-alias>location_dim_key</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>crime_dim_key</remote-name>
            <remote-type>3</remote-type>
            <local-name>[crime_dim_key]</local-name>
            <parent-name>[crime_fact]</parent-name>
            <remote-alias>crime_dim_key</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>event_dim_key</remote-name>
            <remote-type>3</remote-type>
            <local-name>[event_dim_key]</local-name>
            <parent-name>[crime_fact]</parent-name>
            <remote-alias>event_dim_key</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>is_traffic</remote-name>
            <remote-type>11</remote-type>
            <local-name>[is_traffic]</local-name>
            <parent-name>[crime_fact]</parent-name>
            <remote-alias>is_traffic</remote-alias>
            <ordinal>5</ordinal>
            <local-type>boolean</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_BIT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_BIT&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>is_fatal</remote-name>
            <remote-type>11</remote-type>
            <local-name>[is_fatal]</local-name>
            <parent-name>[crime_fact]</parent-name>
            <remote-alias>is_fatal</remote-alias>
            <ordinal>6</ordinal>
            <local-type>boolean</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_BIT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_BIT&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>is_nighttime</remote-name>
            <remote-type>11</remote-type>
            <local-name>[is_nighttime]</local-name>
            <parent-name>[crime_fact]</parent-name>
            <remote-alias>is_nighttime</remote-alias>
            <ordinal>7</ordinal>
            <local-type>boolean</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_BIT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_BIT&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>crime_dim_key</remote-name>
            <remote-type>3</remote-type>
            <local-name>[crime_dim_key (crime_dimension)]</local-name>
            <parent-name>[crime_dimension]</parent-name>
            <remote-alias>crime_dim_key</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>first_occurrence_time</remote-name>
            <remote-type>134</remote-type>
            <local-name>[first_occurrence_time]</local-name>
            <parent-name>[crime_dimension]</parent-name>
            <remote-alias>first_occurrence_time</remote-alias>
            <ordinal>10</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Hour</aggregation>
            <precision>6</precision>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_TYPE_TIME&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_TYPE_TIME&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>last_occurrence_time</remote-name>
            <remote-type>134</remote-type>
            <local-name>[last_occurrence_time]</local-name>
            <parent-name>[crime_dimension]</parent-name>
            <remote-alias>last_occurrence_time</remote-alias>
            <ordinal>11</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Hour</aggregation>
            <precision>6</precision>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_TYPE_TIME&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_TYPE_TIME&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>reported_time</remote-name>
            <remote-type>134</remote-type>
            <local-name>[reported_time]</local-name>
            <parent-name>[crime_dimension]</parent-name>
            <remote-alias>reported_time</remote-alias>
            <ordinal>12</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Hour</aggregation>
            <precision>6</precision>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_TYPE_TIME&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_TYPE_TIME&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>offense_type</remote-name>
            <remote-type>130</remote-type>
            <local-name>[offense_type]</local-name>
            <parent-name>[crime_dimension]</parent-name>
            <remote-alias>offense_type</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>255</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>offense_category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[offense_category]</local-name>
            <parent-name>[crime_dimension]</parent-name>
            <remote-alias>offense_category</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>255</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>is_violent</remote-name>
            <remote-type>11</remote-type>
            <local-name>[is_violent]</local-name>
            <parent-name>[crime_dimension]</parent-name>
            <remote-alias>is_violent</remote-alias>
            <ordinal>15</ordinal>
            <local-type>boolean</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_BIT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_BIT&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>event_dim_key</remote-name>
            <remote-type>3</remote-type>
            <local-name>[event_dim_key (event_dimension)]</local-name>
            <parent-name>[event_dimension]</parent-name>
            <remote-alias>event_dim_key</remote-alias>
            <ordinal>17</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[location]</local-name>
            <parent-name>[event_dimension]</parent-name>
            <remote-alias>location</remote-alias>
            <ordinal>18</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>255</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>city</remote-name>
            <remote-type>130</remote-type>
            <local-name>[city]</local-name>
            <parent-name>[event_dimension]</parent-name>
            <remote-alias>city</remote-alias>
            <ordinal>19</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>255</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[name]</local-name>
            <parent-name>[event_dimension]</parent-name>
            <remote-alias>name</remote-alias>
            <ordinal>20</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>255</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>type</remote-name>
            <remote-type>130</remote-type>
            <local-name>[type]</local-name>
            <parent-name>[event_dimension]</parent-name>
            <remote-alias>type</remote-alias>
            <ordinal>21</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>255</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location_size</remote-name>
            <remote-type>3</remote-type>
            <local-name>[location_size]</local-name>
            <parent-name>[event_dimension]</parent-name>
            <remote-alias>location_size</remote-alias>
            <ordinal>22</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date_dim_key</remote-name>
            <remote-type>3</remote-type>
            <local-name>[date_dim_key (date_dimension)]</local-name>
            <parent-name>[date_dimension]</parent-name>
            <remote-alias>date_dim_key</remote-alias>
            <ordinal>24</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>full_date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[full_date]</local-name>
            <parent-name>[date_dimension]</parent-name>
            <remote-alias>full_date</remote-alias>
            <ordinal>25</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_TYPE_DATE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_TYPE_DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>day</remote-name>
            <remote-type>3</remote-type>
            <local-name>[day]</local-name>
            <parent-name>[date_dimension]</parent-name>
            <remote-alias>day</remote-alias>
            <ordinal>26</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>month</remote-name>
            <remote-type>3</remote-type>
            <local-name>[month]</local-name>
            <parent-name>[date_dimension]</parent-name>
            <remote-alias>month</remote-alias>
            <ordinal>27</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>year</remote-name>
            <remote-type>3</remote-type>
            <local-name>[year]</local-name>
            <parent-name>[date_dimension]</parent-name>
            <remote-alias>year</remote-alias>
            <ordinal>28</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>day_of_year</remote-name>
            <remote-type>3</remote-type>
            <local-name>[day_of_year]</local-name>
            <parent-name>[date_dimension]</parent-name>
            <remote-alias>day_of_year</remote-alias>
            <ordinal>29</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>week_of_year</remote-name>
            <remote-type>3</remote-type>
            <local-name>[week_of_year]</local-name>
            <parent-name>[date_dimension]</parent-name>
            <remote-alias>week_of_year</remote-alias>
            <ordinal>30</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>weekday</remote-name>
            <remote-type>3</remote-type>
            <local-name>[weekday]</local-name>
            <parent-name>[date_dimension]</parent-name>
            <remote-alias>weekday</remote-alias>
            <ordinal>31</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>is_weekend</remote-name>
            <remote-type>11</remote-type>
            <local-name>[is_weekend]</local-name>
            <parent-name>[date_dimension]</parent-name>
            <remote-alias>is_weekend</remote-alias>
            <ordinal>32</ordinal>
            <local-type>boolean</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_BIT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_BIT&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>quarter</remote-name>
            <remote-type>3</remote-type>
            <local-name>[quarter]</local-name>
            <parent-name>[date_dimension]</parent-name>
            <remote-alias>quarter</remote-alias>
            <ordinal>33</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>is_month_start</remote-name>
            <remote-type>11</remote-type>
            <local-name>[is_month_start]</local-name>
            <parent-name>[date_dimension]</parent-name>
            <remote-alias>is_month_start</remote-alias>
            <ordinal>34</ordinal>
            <local-type>boolean</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_BIT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_BIT&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>is_month_end</remote-name>
            <remote-type>11</remote-type>
            <local-name>[is_month_end]</local-name>
            <parent-name>[date_dimension]</parent-name>
            <remote-alias>is_month_end</remote-alias>
            <ordinal>35</ordinal>
            <local-type>boolean</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_BIT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_BIT&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>is_year_start</remote-name>
            <remote-type>11</remote-type>
            <local-name>[is_year_start]</local-name>
            <parent-name>[date_dimension]</parent-name>
            <remote-alias>is_year_start</remote-alias>
            <ordinal>36</ordinal>
            <local-type>boolean</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_BIT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_BIT&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>is_year_end</remote-name>
            <remote-type>11</remote-type>
            <local-name>[is_year_end]</local-name>
            <parent-name>[date_dimension]</parent-name>
            <remote-alias>is_year_end</remote-alias>
            <ordinal>37</ordinal>
            <local-type>boolean</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_BIT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_BIT&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>is_can_holiday</remote-name>
            <remote-type>11</remote-type>
            <local-name>[is_can_holiday]</local-name>
            <parent-name>[date_dimension]</parent-name>
            <remote-alias>is_can_holiday</remote-alias>
            <ordinal>38</ordinal>
            <local-type>boolean</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_BIT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_BIT&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>can_holiday_name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[can_holiday_name]</local-name>
            <parent-name>[date_dimension]</parent-name>
            <remote-alias>can_holiday_name</remote-alias>
            <ordinal>39</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>255</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>is_us_holiday</remote-name>
            <remote-type>11</remote-type>
            <local-name>[is_us_holiday]</local-name>
            <parent-name>[date_dimension]</parent-name>
            <remote-alias>is_us_holiday</remote-alias>
            <ordinal>40</ordinal>
            <local-type>boolean</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_BIT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_BIT&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>us_holiday_name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[us_holiday_name]</local-name>
            <parent-name>[date_dimension]</parent-name>
            <remote-alias>us_holiday_name</remote-alias>
            <ordinal>41</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>255</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location_dim_key</remote-name>
            <remote-type>3</remote-type>
            <local-name>[location_dim_key (location_dimension)]</local-name>
            <parent-name>[location_dimension]</parent-name>
            <remote-alias>location_dim_key</remote-alias>
            <ordinal>43</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[location (location_dimension)]</local-name>
            <parent-name>[location_dimension]</parent-name>
            <remote-alias>location</remote-alias>
            <ordinal>44</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>255</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>neighborhood</remote-name>
            <remote-type>130</remote-type>
            <local-name>[neighborhood]</local-name>
            <parent-name>[location_dimension]</parent-name>
            <remote-alias>neighborhood</remote-alias>
            <ordinal>45</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>255</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>latitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[latitude]</local-name>
            <parent-name>[location_dimension]</parent-name>
            <remote-alias>latitude</remote-alias>
            <ordinal>46</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_FLOAT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>longitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[longitude]</local-name>
            <parent-name>[location_dimension]</parent-name>
            <remote-alias>longitude</remote-alias>
            <ordinal>47</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_FLOAT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>city</remote-name>
            <remote-type>130</remote-type>
            <local-name>[city (location_dimension)]</local-name>
            <parent-name>[location_dimension]</parent-name>
            <remote-alias>city</remote-alias>
            <ordinal>48</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>255</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>crime_rate</remote-name>
            <remote-type>5</remote-type>
            <local-name>[crime_rate]</local-name>
            <parent-name>[location_dimension]</parent-name>
            <remote-alias>crime_rate</remote-alias>
            <ordinal>49</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_FLOAT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='string' name='[can_holiday_name]' role='dimension' type='nominal' />
      <column datatype='string' name='[city (location_dimension)]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column datatype='string' name='[city]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column aggregation='Sum' datatype='integer' name='[crime_dim_key (crime_dimension)]' role='dimension' type='ordinal' />
      <column aggregation='Sum' datatype='integer' name='[crime_dim_key]' role='dimension' type='ordinal' />
      <column aggregation='Sum' datatype='integer' name='[date_dim_key (date_dimension)]' role='dimension' type='ordinal' />
      <column aggregation='Sum' datatype='integer' name='[date_dim_key]' role='dimension' type='ordinal' />
      <column datatype='integer' name='[day]' role='dimension' type='quantitative' />
      <column datatype='integer' name='[day_of_year]' role='dimension' type='quantitative' />
      <column aggregation='Sum' datatype='integer' name='[event_dim_key (event_dimension)]' role='dimension' type='ordinal' />
      <column aggregation='Sum' datatype='integer' name='[event_dim_key]' role='dimension' type='ordinal' />
      <column aggregation='Hour' datatype='datetime' name='[first_occurrence_time]' role='dimension' type='ordinal' />
      <column datatype='date' name='[full_date]' role='dimension' type='ordinal' />
      <column datatype='boolean' name='[is_fatal]' role='dimension' type='nominal' />
      <column datatype='boolean' name='[is_nighttime]' role='dimension' type='nominal' />
      <column datatype='boolean' name='[is_traffic]' role='dimension' type='nominal' />
      <column aggregation='Hour' datatype='datetime' name='[last_occurrence_time]' role='dimension' type='ordinal' />
      <column aggregation='Avg' datatype='real' name='[latitude]' role='dimension' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column aggregation='Sum' datatype='integer' name='[location_dim_key (location_dimension)]' role='dimension' type='ordinal' />
      <column aggregation='Sum' datatype='integer' name='[location_dim_key]' role='dimension' type='ordinal' />
      <column aggregation='Avg' datatype='real' name='[longitude]' role='dimension' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column datatype='integer' name='[month]' role='dimension' type='quantitative' />
      <column datatype='string' name='[neighborhood]' role='dimension' type='nominal' />
      <column datatype='string' name='[offense_category]' role='dimension' type='nominal' />
      <column datatype='integer' name='[quarter]' role='dimension' type='quantitative' />
      <column aggregation='Hour' datatype='datetime' name='[reported_time]' role='dimension' type='ordinal' />
      <column datatype='integer' name='[week_of_year]' role='dimension' type='quantitative' />
      <column datatype='integer' name='[year]' role='dimension' type='quantitative' />
      <column-instance column='[can_holiday_name]' derivation='None' name='[none:can_holiday_name:nk]' pivot='key' type='nominal' />
      <column-instance column='[city (location_dimension)]' derivation='None' name='[none:city (location_dimension):nk]' pivot='key' type='nominal' />
      <column-instance column='[day_of_year]' derivation='None' name='[none:day_of_year:qk]' pivot='key' type='quantitative' />
      <column-instance column='[is_fatal]' derivation='None' name='[none:is_fatal:nk]' pivot='key' type='nominal' />
      <column-instance column='[is_traffic]' derivation='None' name='[none:is_traffic:nk]' pivot='key' type='nominal' />
      <column-instance column='[latitude]' derivation='None' name='[none:latitude:ok]' pivot='key' type='ordinal' />
      <column-instance column='[longitude]' derivation='None' name='[none:longitude:ok]' pivot='key' type='ordinal' />
      <column-instance column='[neighborhood]' derivation='None' name='[none:neighborhood:nk]' pivot='key' type='nominal' />
      <column-instance column='[offense_category]' derivation='None' name='[none:offense_category:nk]' pivot='key' type='nominal' />
      <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
      <column-instance column='[full_date]' derivation='Week-Trunc' name='[twk:full_date:ok]' pivot='key' type='ordinal' />
      <group caption='Action (WEEK(full_date),offense_category)' hidden='true' name='[Action (WEEK(full_date),offense_category)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[twk:full_date:ok]' />
          <groupfilter function='level-members' level='[offense_category]' />
        </groupfilter>
      </group>
      <group caption='Action (city (location_dimension))' hidden='true' name='[Action (city (location_dimension))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[city (location_dimension)]' />
        </groupfilter>
      </group>
      <group caption='Action (is_fatal)' hidden='true' name='[Action (is_fatal)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[is_fatal]' />
        </groupfilter>
      </group>
      <group caption='Action (is_nighttime)' hidden='true' name='[Action (is_nighttime)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[is_nighttime]' />
        </groupfilter>
      </group>
      <group caption='Action (is_traffic)' hidden='true' name='[Action (is_traffic)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[is_traffic]' />
        </groupfilter>
      </group>
      <group caption='Action (latitude,longitude,offense_category)' hidden='true' name='[Action (latitude,longitude,offense_category)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:latitude:ok]' />
          <groupfilter function='level-members' level='[none:longitude:ok]' />
          <groupfilter function='level-members' level='[offense_category]' />
        </groupfilter>
      </group>
      <group caption='Action (offense_category)' hidden='true' name='[Action (offense_category)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[offense_category]' />
        </groupfilter>
      </group>
      <layout dim-ordering='alphabetic' dim-percentage='0.735516' measure-ordering='alphabetic' measure-percentage='0.264484' show-structure='true' user-set-layout='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0xxzh3n1ngww291cy2y771tzroj8]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:day_of_year:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0xxzh3n1ngww291cy2y771tzroj8].[sum:Number of Records:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:city (location_dimension):nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Denver&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Vancouver&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:can_holiday_name:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Good Friday&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Boxing Day&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Christmas Day&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Thanksgiving&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Labour Day&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Christmas Day (Observed)&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Boxing Day (Observed)&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Civic Holiday&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Victoria Day&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;New Year&apos;s Day&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Family Day&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Canada Day&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;New Year&apos;s Day (Observed)&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Canada Day (Observed)&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:neighborhood:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Chaffee Park&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Civic Center&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;College View South Platte&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Kensington-Cedar Cottage&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Sloan Lake&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Barnum West&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Central Business District&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Five Points&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Jefferson Park&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;South Cambie&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Speer&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Mar Lee&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Montbello&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Musqueam&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Strathcona&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Washington Park West&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Whittier&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Cole&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Harvey Park&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Kennedy&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Marpole&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;West Colfax&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Hastings-Sunrise&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Lowry Field&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Southmoor Park&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Sunnyside&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Union Station&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;City Park&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Grandview-Woodland&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Lincoln Park&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Montclair&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Villa Park&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Hampden&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Overland&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Shaughnessy&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Valverde&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Arbutus Ridge&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Elyria Swansea&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Goldsmith&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Platt Park&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Stapleton&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;West End&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Auraria&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Dunbar-Southlands&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Northeast Park Hill&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;University Park&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Wellshire&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Athmar Park&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Baker&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Cory Merrill&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Renfrew-Collingwood&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;University&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Barnum&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;North Capitol Hill&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Skyland&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Victoria-Fraserview&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Windsor&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Highland&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Killarney&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;North Park Hill&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Rosedale&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Virginia Village&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Berkeley&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Clayton&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;DIA&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Indian Creek&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Kerrisdale&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Bear Valley&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Globeville&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;West Highland&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;West Point Grey&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Belcaro&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cherry Creek&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Marston&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Sunset&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Westwood&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;City Park West&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;East Colfax&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Harvey Park South&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Kitsilano&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Regis&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;CBD&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Cheesman Park&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Mount Pleasant&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Stanley Park&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Sun Valley&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Washington Park&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Congress Park&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Country Club&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Hale&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Hampden South&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Oakridge&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Fort Logan&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Gateway Green Valley Ranch&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Riley Park&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Ruby Hill&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;South Park Hill&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>%null%</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Capitol Hill&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Fairview&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Hilltop&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;University Hills&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Washington Virginia Vale&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:is_fatal:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>false</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>true</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:is_traffic:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>false</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>true</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:offense_category:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Other Crimes Against Persons&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Aggravated Assault&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Burglary&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Theft from Motor Vehicle&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Public Disorder&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Drug &amp; Alcohol&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;All Other Crimes&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Larceny&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Traffic Accident&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;White Collar Crime&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Robbery&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Murder&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Arson&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Sexual Assault&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Auto Theft&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Canada&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Filter 1 (generated)' name='[Action1]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='CrimeDataMart Overview' type='sheet' worksheet='Map' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='CrimeDataMart Overview' />
      </command>
    </action>
    <action caption='Filter 2 (generated)' name='[Action2]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='CrimeDataMart Overview' type='sheet' worksheet='City' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='CrimeDataMart Overview' />
      </command>
    </action>
    <action caption='Filter 3 (generated)' name='[Action3]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='CrimeDataMart Overview' type='sheet' worksheet='Is_Traffic' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='CrimeDataMart Overview' />
      </command>
    </action>
    <action caption='Filter 4 (generated)' name='[Action4]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='CrimeDataMart Overview' type='sheet' worksheet='Is_Fatal' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='CrimeDataMart Overview' />
      </command>
    </action>
    <action caption='Filter 5 (generated)' name='[Action5]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='CrimeDataMart Overview' type='sheet' worksheet='Is_Nighttime' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='CrimeDataMart Overview' />
      </command>
    </action>
    <action caption='Filter 6 (generated)' name='[Action6]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='CrimeDataMart Overview' type='sheet' worksheet='Offense category' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='CrimeDataMart Overview' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Categories seasonal'>
      <table>
        <view>
          <datasources>
            <datasource caption='CrimeDataMart' name='federated.0xxzh3n1ngww291cy2y771tzroj8' />
          </datasources>
          <datasource-dependencies datasource='federated.0xxzh3n1ngww291cy2y771tzroj8'>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column datatype='string' name='[city (location_dimension)]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column datatype='date' name='[full_date]' role='dimension' type='ordinal' />
            <column datatype='boolean' name='[is_fatal]' role='dimension' type='nominal' />
            <column datatype='boolean' name='[is_nighttime]' role='dimension' type='nominal' />
            <column datatype='boolean' name='[is_traffic]' role='dimension' type='nominal' />
            <column aggregation='Avg' datatype='real' name='[latitude]' role='dimension' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' datatype='real' name='[longitude]' role='dimension' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column-instance column='[city (location_dimension)]' derivation='None' name='[none:city (location_dimension):nk]' pivot='key' type='nominal' />
            <column-instance column='[latitude]' derivation='None' name='[none:latitude:ok]' pivot='key' type='ordinal' />
            <column-instance column='[longitude]' derivation='None' name='[none:longitude:ok]' pivot='key' type='ordinal' />
            <column-instance column='[offense_category]' derivation='None' name='[none:offense_category:nk]' pivot='key' type='nominal' />
            <column datatype='string' name='[offense_category]' role='dimension' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
            <column-instance column='[full_date]' derivation='Week-Trunc' name='[twk:full_date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0xxzh3n1ngww291cy2y771tzroj8].[Action (city (location_dimension))]'>
            <groupfilter function='level-members' level='[city (location_dimension)]' user:ui-action-filter='[Action2]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0xxzh3n1ngww291cy2y771tzroj8].[Action (is_fatal)]'>
            <groupfilter function='level-members' level='[is_fatal]' user:ui-action-filter='[Action4]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0xxzh3n1ngww291cy2y771tzroj8].[Action (is_nighttime)]'>
            <groupfilter function='member' level='[is_nighttime]' member='false' user:ui-action-filter='[Action5]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0xxzh3n1ngww291cy2y771tzroj8].[Action (is_traffic)]'>
            <groupfilter function='level-members' level='[is_traffic]' user:ui-action-filter='[Action3]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0xxzh3n1ngww291cy2y771tzroj8].[Action (latitude,longitude,offense_category)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:latitude:ok]' />
              <groupfilter function='level-members' level='[none:longitude:ok]' />
              <groupfilter function='level-members' level='[offense_category]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0xxzh3n1ngww291cy2y771tzroj8].[Action (offense_category)]'>
            <groupfilter function='level-members' level='[offense_category]' user:ui-action-filter='[Action6]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:city (location_dimension):nk]'>
            <groupfilter function='level-members' level='[none:city (location_dimension):nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.0xxzh3n1ngww291cy2y771tzroj8].[twk:full_date:qk]' included-values='in-range'>
            <min>#2014-12-28 00:00:00#</min>
            <max>#2020-02-23 00:00:00#</max>
          </filter>
          <slices>
            <column>[federated.0xxzh3n1ngww291cy2y771tzroj8].[twk:full_date:qk]</column>
            <column>[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:city (location_dimension):nk]</column>
            <column>[federated.0xxzh3n1ngww291cy2y771tzroj8].[Action (latitude,longitude,offense_category)]</column>
            <column>[federated.0xxzh3n1ngww291cy2y771tzroj8].[Action (city (location_dimension))]</column>
            <column>[federated.0xxzh3n1ngww291cy2y771tzroj8].[Action (is_traffic)]</column>
            <column>[federated.0xxzh3n1ngww291cy2y771tzroj8].[Action (is_fatal)]</column>
            <column>[federated.0xxzh3n1ngww291cy2y771tzroj8].[Action (is_nighttime)]</column>
            <column>[federated.0xxzh3n1ngww291cy2y771tzroj8].[Action (offense_category)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:offense_category:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0xxzh3n1ngww291cy2y771tzroj8].[sum:Number of Records:qk]</rows>
        <cols>[federated.0xxzh3n1ngww291cy2y771tzroj8].[twk:full_date:qk]</cols>
      </table>
      <simple-id uuid='{5074A906-D309-4C3A-B88D-53423878871F}' />
    </worksheet>
    <worksheet name='City'>
      <table>
        <view>
          <datasources>
            <datasource caption='CrimeDataMart' name='federated.0xxzh3n1ngww291cy2y771tzroj8' />
          </datasources>
          <datasource-dependencies datasource='federated.0xxzh3n1ngww291cy2y771tzroj8'>
            <column datatype='string' name='[city (location_dimension)]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column datatype='boolean' name='[is_fatal]' role='dimension' type='nominal' />
            <column datatype='boolean' name='[is_nighttime]' role='dimension' type='nominal' />
            <column datatype='boolean' name='[is_traffic]' role='dimension' type='nominal' />
            <column-instance column='[city (location_dimension)]' derivation='None' name='[none:city (location_dimension):nk]' pivot='key' type='nominal' />
            <column datatype='string' name='[offense_category]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0xxzh3n1ngww291cy2y771tzroj8].[Action (is_fatal)]'>
            <groupfilter function='level-members' level='[is_fatal]' user:ui-action-filter='[Action4]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0xxzh3n1ngww291cy2y771tzroj8].[Action (is_nighttime)]'>
            <groupfilter function='member' level='[is_nighttime]' member='false' user:ui-action-filter='[Action5]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0xxzh3n1ngww291cy2y771tzroj8].[Action (is_traffic)]'>
            <groupfilter function='level-members' level='[is_traffic]' user:ui-action-filter='[Action3]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0xxzh3n1ngww291cy2y771tzroj8].[Action (offense_category)]'>
            <groupfilter function='level-members' level='[offense_category]' user:ui-action-filter='[Action6]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:city (location_dimension):nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:city (location_dimension):nk]' member='&quot;Denver&quot;' />
              <groupfilter function='member' level='[none:city (location_dimension):nk]' member='&quot;Vancouver&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:city (location_dimension):nk]</column>
            <column>[federated.0xxzh3n1ngww291cy2y771tzroj8].[Action (is_traffic)]</column>
            <column>[federated.0xxzh3n1ngww291cy2y771tzroj8].[Action (is_fatal)]</column>
            <column>[federated.0xxzh3n1ngww291cy2y771tzroj8].[Action (is_nighttime)]</column>
            <column>[federated.0xxzh3n1ngww291cy2y771tzroj8].[Action (offense_category)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:city (location_dimension):nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:city (location_dimension):nk]</rows>
        <cols />
      </table>
      <simple-id uuid='{5DFD3DDD-BBC5-4CD5-AA4F-4C5D2621C1D0}' />
    </worksheet>
    <worksheet name='Crimes by category'>
      <table>
        <view>
          <datasources>
            <datasource caption='CrimeDataMart' name='federated.0xxzh3n1ngww291cy2y771tzroj8' />
          </datasources>
          <datasource-dependencies datasource='federated.0xxzh3n1ngww291cy2y771tzroj8'>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column datatype='string' name='[city (location_dimension)]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column datatype='boolean' name='[is_fatal]' role='dimension' type='nominal' />
            <column datatype='boolean' name='[is_nighttime]' role='dimension' type='nominal' />
            <column datatype='boolean' name='[is_traffic]' role='dimension' type='nominal' />
            <column aggregation='Avg' datatype='real' name='[latitude]' role='dimension' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' datatype='real' name='[longitude]' role='dimension' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column-instance column='[city (location_dimension)]' derivation='None' name='[none:city (location_dimension):nk]' pivot='key' type='nominal' />
            <column-instance column='[latitude]' derivation='None' name='[none:latitude:ok]' pivot='key' type='ordinal' />
            <column-instance column='[longitude]' derivation='None' name='[none:longitude:ok]' pivot='key' type='ordinal' />
            <column-instance column='[offense_category]' derivation='None' name='[none:offense_category:nk]' pivot='key' type='nominal' />
            <column datatype='string' name='[offense_category]' role='dimension' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0xxzh3n1ngww291cy2y771tzroj8].[Action (city (location_dimension))]'>
            <groupfilter function='level-members' level='[city (location_dimension)]' user:ui-action-filter='[Action2]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0xxzh3n1ngww291cy2y771tzroj8].[Action (is_fatal)]'>
            <groupfilter function='level-members' level='[is_fatal]' user:ui-action-filter='[Action4]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0xxzh3n1ngww291cy2y771tzroj8].[Action (is_nighttime)]'>
            <groupfilter function='member' level='[is_nighttime]' member='false' user:ui-action-filter='[Action5]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0xxzh3n1ngww291cy2y771tzroj8].[Action (is_traffic)]'>
            <groupfilter function='level-members' level='[is_traffic]' user:ui-action-filter='[Action3]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0xxzh3n1ngww291cy2y771tzroj8].[Action (latitude,longitude,offense_category)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:latitude:ok]' />
              <groupfilter function='level-members' level='[none:longitude:ok]' />
              <groupfilter function='level-members' level='[offense_category]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0xxzh3n1ngww291cy2y771tzroj8].[Action (offense_category)]'>
            <groupfilter function='level-members' level='[offense_category]' user:ui-action-filter='[Action6]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:city (location_dimension):nk]'>
            <groupfilter function='level-members' level='[none:city (location_dimension):nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <computed-sort column='[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:offense_category:nk]' direction='DESC' using='[federated.0xxzh3n1ngww291cy2y771tzroj8].[sum:Number of Records:qk]' />
          <slices>
            <column>[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:city (location_dimension):nk]</column>
            <column>[federated.0xxzh3n1ngww291cy2y771tzroj8].[Action (latitude,longitude,offense_category)]</column>
            <column>[federated.0xxzh3n1ngww291cy2y771tzroj8].[Action (city (location_dimension))]</column>
            <column>[federated.0xxzh3n1ngww291cy2y771tzroj8].[Action (is_traffic)]</column>
            <column>[federated.0xxzh3n1ngww291cy2y771tzroj8].[Action (is_fatal)]</column>
            <column>[federated.0xxzh3n1ngww291cy2y771tzroj8].[Action (is_nighttime)]</column>
            <column>[federated.0xxzh3n1ngww291cy2y771tzroj8].[Action (offense_category)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0xxzh3n1ngww291cy2y771tzroj8].[sum:Number of Records:qk]' field-type='quantitative' max='132398' min='-692' range-type='fixed' scope='cols' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:offense_category:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:offense_category:nk]</rows>
        <cols>[federated.0xxzh3n1ngww291cy2y771tzroj8].[sum:Number of Records:qk]</cols>
      </table>
      <simple-id uuid='{3E7628C7-DD30-4203-A075-D5659A2B2727}' />
    </worksheet>
    <worksheet name='Crimes on Holidays'>
      <table>
        <view>
          <datasources>
            <datasource caption='CrimeDataMart' name='federated.0xxzh3n1ngww291cy2y771tzroj8' />
          </datasources>
          <datasource-dependencies datasource='federated.0xxzh3n1ngww291cy2y771tzroj8'>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column datatype='string' name='[can_holiday_name]' role='dimension' type='nominal' />
            <column-instance column='[is_fatal]' derivation='Count' name='[cnt:is_fatal:qk]' pivot='key' type='quantitative' />
            <column datatype='boolean' name='[is_can_holiday]' role='dimension' type='nominal' />
            <column datatype='boolean' name='[is_fatal]' role='dimension' type='nominal' />
            <column datatype='boolean' name='[is_nighttime]' role='dimension' type='nominal' />
            <column-instance column='[can_holiday_name]' derivation='None' name='[none:can_holiday_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[is_can_holiday]' derivation='None' name='[none:is_can_holiday:nk]' pivot='key' type='nominal' />
            <column datatype='string' name='[offense_category]' role='dimension' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0xxzh3n1ngww291cy2y771tzroj8].[Action (is_nighttime)]'>
            <groupfilter function='member' level='[is_nighttime]' member='false' user:ui-action-filter='[Action5]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0xxzh3n1ngww291cy2y771tzroj8].[Action (offense_category)]'>
            <groupfilter function='level-members' level='[offense_category]' user:ui-action-filter='[Action6]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <computed-sort column='[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:can_holiday_name:nk]' direction='DESC' using='[federated.0xxzh3n1ngww291cy2y771tzroj8].[cnt:is_fatal:qk]' />
          <filter class='categorical' column='[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:is_can_holiday:nk]'>
            <groupfilter function='member' level='[none:is_can_holiday:nk]' member='true' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:is_can_holiday:nk]</column>
            <column>[federated.0xxzh3n1ngww291cy2y771tzroj8].[Action (is_nighttime)]</column>
            <column>[federated.0xxzh3n1ngww291cy2y771tzroj8].[Action (offense_category)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:can_holiday_name:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:can_holiday_name:nk]</rows>
        <cols>[federated.0xxzh3n1ngww291cy2y771tzroj8].[sum:Number of Records:qk]</cols>
      </table>
      <simple-id uuid='{204DA446-2719-44D6-9369-9746AF8D2E58}' />
    </worksheet>
    <worksheet name='Crimes per neighborhood'>
      <table>
        <view>
          <datasources>
            <datasource caption='CrimeDataMart' name='federated.0xxzh3n1ngww291cy2y771tzroj8' />
          </datasources>
          <datasource-dependencies datasource='federated.0xxzh3n1ngww291cy2y771tzroj8'>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column datatype='string' name='[city (location_dimension)]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column datatype='boolean' name='[is_fatal]' role='dimension' type='nominal' />
            <column datatype='boolean' name='[is_nighttime]' role='dimension' type='nominal' />
            <column datatype='boolean' name='[is_traffic]' role='dimension' type='nominal' />
            <column aggregation='Avg' datatype='real' name='[latitude]' role='dimension' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' datatype='real' name='[longitude]' role='dimension' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column datatype='string' name='[neighborhood]' role='dimension' type='nominal' />
            <column-instance column='[city (location_dimension)]' derivation='None' name='[none:city (location_dimension):nk]' pivot='key' type='nominal' />
            <column-instance column='[latitude]' derivation='None' name='[none:latitude:ok]' pivot='key' type='ordinal' />
            <column-instance column='[longitude]' derivation='None' name='[none:longitude:ok]' pivot='key' type='ordinal' />
            <column-instance column='[neighborhood]' derivation='None' name='[none:neighborhood:nk]' pivot='key' type='nominal' />
            <column datatype='string' name='[offense_category]' role='dimension' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0xxzh3n1ngww291cy2y771tzroj8].[Action (city (location_dimension))]'>
            <groupfilter function='level-members' level='[city (location_dimension)]' user:ui-action-filter='[Action2]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0xxzh3n1ngww291cy2y771tzroj8].[Action (is_fatal)]'>
            <groupfilter function='level-members' level='[is_fatal]' user:ui-action-filter='[Action4]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0xxzh3n1ngww291cy2y771tzroj8].[Action (is_nighttime)]'>
            <groupfilter function='member' level='[is_nighttime]' member='false' user:ui-action-filter='[Action5]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0xxzh3n1ngww291cy2y771tzroj8].[Action (is_traffic)]'>
            <groupfilter function='level-members' level='[is_traffic]' user:ui-action-filter='[Action3]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0xxzh3n1ngww291cy2y771tzroj8].[Action (latitude,longitude,offense_category)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:latitude:ok]' />
              <groupfilter function='level-members' level='[none:longitude:ok]' />
              <groupfilter function='level-members' level='[offense_category]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0xxzh3n1ngww291cy2y771tzroj8].[Action (offense_category)]'>
            <groupfilter function='level-members' level='[offense_category]' user:ui-action-filter='[Action6]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:city (location_dimension):nk]'>
            <groupfilter function='level-members' level='[none:city (location_dimension):nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <computed-sort column='[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:neighborhood:nk]' direction='DESC' using='[federated.0xxzh3n1ngww291cy2y771tzroj8].[sum:Number of Records:qk]' />
          <slices>
            <column>[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:city (location_dimension):nk]</column>
            <column>[federated.0xxzh3n1ngww291cy2y771tzroj8].[Action (latitude,longitude,offense_category)]</column>
            <column>[federated.0xxzh3n1ngww291cy2y771tzroj8].[Action (city (location_dimension))]</column>
            <column>[federated.0xxzh3n1ngww291cy2y771tzroj8].[Action (is_traffic)]</column>
            <column>[federated.0xxzh3n1ngww291cy2y771tzroj8].[Action (is_fatal)]</column>
            <column>[federated.0xxzh3n1ngww291cy2y771tzroj8].[Action (is_nighttime)]</column>
            <column>[federated.0xxzh3n1ngww291cy2y771tzroj8].[Action (offense_category)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:neighborhood:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:neighborhood:nk]</rows>
        <cols>[federated.0xxzh3n1ngww291cy2y771tzroj8].[sum:Number of Records:qk]</cols>
      </table>
      <simple-id uuid='{32D25B72-63F2-43FE-BEEE-BCAF5EEC9A71}' />
    </worksheet>
    <worksheet name='Is_Fatal'>
      <table>
        <view>
          <datasources>
            <datasource caption='CrimeDataMart' name='federated.0xxzh3n1ngww291cy2y771tzroj8' />
          </datasources>
          <datasource-dependencies datasource='federated.0xxzh3n1ngww291cy2y771tzroj8'>
            <column datatype='boolean' name='[is_fatal]' role='dimension' type='nominal' />
            <column datatype='boolean' name='[is_nighttime]' role='dimension' type='nominal' />
            <column-instance column='[is_fatal]' derivation='None' name='[none:is_fatal:nk]' pivot='key' type='nominal' />
            <column datatype='string' name='[offense_category]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0xxzh3n1ngww291cy2y771tzroj8].[Action (is_nighttime)]'>
            <groupfilter function='member' level='[is_nighttime]' member='false' user:ui-action-filter='[Action5]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0xxzh3n1ngww291cy2y771tzroj8].[Action (offense_category)]'>
            <groupfilter function='level-members' level='[offense_category]' user:ui-action-filter='[Action6]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:is_fatal:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:is_fatal:nk]' member='false' />
              <groupfilter function='member' level='[none:is_fatal:nk]' member='true' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:is_fatal:nk]</column>
            <column>[federated.0xxzh3n1ngww291cy2y771tzroj8].[Action (is_nighttime)]</column>
            <column>[federated.0xxzh3n1ngww291cy2y771tzroj8].[Action (offense_category)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:is_fatal:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:is_fatal:nk]</rows>
        <cols />
      </table>
      <simple-id uuid='{1DCD7FA9-FEFC-47BE-A4FA-FD3B1576A7D9}' />
    </worksheet>
    <worksheet name='Is_Nighttime'>
      <table>
        <view>
          <datasources>
            <datasource caption='CrimeDataMart' name='federated.0xxzh3n1ngww291cy2y771tzroj8' />
          </datasources>
          <datasource-dependencies datasource='federated.0xxzh3n1ngww291cy2y771tzroj8'>
            <column datatype='boolean' name='[is_fatal]' role='dimension' type='nominal' />
            <column datatype='boolean' name='[is_nighttime]' role='dimension' type='nominal' />
            <column-instance column='[is_nighttime]' derivation='None' name='[none:is_nighttime:nk]' pivot='key' type='nominal' />
            <column datatype='string' name='[offense_category]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0xxzh3n1ngww291cy2y771tzroj8].[Action (is_fatal)]'>
            <groupfilter function='level-members' level='[is_fatal]' user:ui-action-filter='[Action4]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0xxzh3n1ngww291cy2y771tzroj8].[Action (offense_category)]'>
            <groupfilter function='level-members' level='[offense_category]' user:ui-action-filter='[Action6]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:is_nighttime:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:is_nighttime:nk]' member='false' />
              <groupfilter function='member' level='[none:is_nighttime:nk]' member='true' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:is_nighttime:nk]</column>
            <column>[federated.0xxzh3n1ngww291cy2y771tzroj8].[Action (is_fatal)]</column>
            <column>[federated.0xxzh3n1ngww291cy2y771tzroj8].[Action (offense_category)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:is_nighttime:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:is_nighttime:nk]</rows>
        <cols />
      </table>
      <simple-id uuid='{0D4F6640-B5FE-46A5-B3E8-5BFCE606B1CD}' />
    </worksheet>
    <worksheet name='Is_Traffic'>
      <table>
        <view>
          <datasources>
            <datasource caption='CrimeDataMart' name='federated.0xxzh3n1ngww291cy2y771tzroj8' />
          </datasources>
          <datasource-dependencies datasource='federated.0xxzh3n1ngww291cy2y771tzroj8'>
            <column datatype='boolean' name='[is_fatal]' role='dimension' type='nominal' />
            <column datatype='boolean' name='[is_nighttime]' role='dimension' type='nominal' />
            <column datatype='boolean' name='[is_traffic]' role='dimension' type='nominal' />
            <column-instance column='[is_traffic]' derivation='None' name='[none:is_traffic:nk]' pivot='key' type='nominal' />
            <column datatype='string' name='[offense_category]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0xxzh3n1ngww291cy2y771tzroj8].[Action (is_fatal)]'>
            <groupfilter function='level-members' level='[is_fatal]' user:ui-action-filter='[Action4]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0xxzh3n1ngww291cy2y771tzroj8].[Action (is_nighttime)]'>
            <groupfilter function='member' level='[is_nighttime]' member='false' user:ui-action-filter='[Action5]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0xxzh3n1ngww291cy2y771tzroj8].[Action (offense_category)]'>
            <groupfilter function='level-members' level='[offense_category]' user:ui-action-filter='[Action6]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:is_traffic:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:is_traffic:nk]' member='false' />
              <groupfilter function='member' level='[none:is_traffic:nk]' member='true' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:is_traffic:nk]</column>
            <column>[federated.0xxzh3n1ngww291cy2y771tzroj8].[Action (is_fatal)]</column>
            <column>[federated.0xxzh3n1ngww291cy2y771tzroj8].[Action (is_nighttime)]</column>
            <column>[federated.0xxzh3n1ngww291cy2y771tzroj8].[Action (offense_category)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:is_traffic:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:is_traffic:nk]</rows>
        <cols />
      </table>
      <simple-id uuid='{544A02FA-E9BC-447C-8A9C-2FBA43629CBA}' />
    </worksheet>
    <worksheet name='Map'>
      <table>
        <view>
          <datasources>
            <datasource caption='CrimeDataMart' name='federated.0xxzh3n1ngww291cy2y771tzroj8' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0xxzh3n1ngww291cy2y771tzroj8'>
            <column datatype='string' name='[city (location_dimension)]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column datatype='boolean' name='[is_fatal]' role='dimension' type='nominal' />
            <column datatype='boolean' name='[is_nighttime]' role='dimension' type='nominal' />
            <column datatype='boolean' name='[is_traffic]' role='dimension' type='nominal' />
            <column aggregation='Avg' datatype='real' name='[latitude]' role='dimension' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' datatype='real' name='[longitude]' role='dimension' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column-instance column='[city (location_dimension)]' derivation='None' name='[none:city (location_dimension):nk]' pivot='key' type='nominal' />
            <column-instance column='[latitude]' derivation='None' name='[none:latitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[longitude]' derivation='None' name='[none:longitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[offense_category]' derivation='None' name='[none:offense_category:nk]' pivot='key' type='nominal' />
            <column datatype='string' name='[offense_category]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0xxzh3n1ngww291cy2y771tzroj8].[Action (city (location_dimension))]'>
            <groupfilter function='level-members' level='[city (location_dimension)]' user:ui-action-filter='[Action2]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0xxzh3n1ngww291cy2y771tzroj8].[Action (is_fatal)]'>
            <groupfilter function='level-members' level='[is_fatal]' user:ui-action-filter='[Action4]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0xxzh3n1ngww291cy2y771tzroj8].[Action (is_nighttime)]'>
            <groupfilter function='member' level='[is_nighttime]' member='false' user:ui-action-filter='[Action5]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0xxzh3n1ngww291cy2y771tzroj8].[Action (is_traffic)]'>
            <groupfilter function='level-members' level='[is_traffic]' user:ui-action-filter='[Action3]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0xxzh3n1ngww291cy2y771tzroj8].[Action (offense_category)]'>
            <groupfilter function='level-members' level='[offense_category]' user:ui-action-filter='[Action6]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:city (location_dimension):nk]'>
            <groupfilter function='level-members' level='[none:city (location_dimension):nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <manual-sort column='[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:offense_category:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Aggravated Assault&quot;</bucket>
              <bucket>&quot;All Other Crimes&quot;</bucket>
              <bucket>&quot;Arson&quot;</bucket>
              <bucket>&quot;Auto Theft&quot;</bucket>
              <bucket>&quot;Burglary&quot;</bucket>
              <bucket>&quot;Drug &amp; Alcohol&quot;</bucket>
              <bucket>&quot;Larceny&quot;</bucket>
              <bucket>&quot;Murder&quot;</bucket>
              <bucket>&quot;Other Crimes Against Persons&quot;</bucket>
              <bucket>&quot;Public Disorder&quot;</bucket>
              <bucket>&quot;Robbery&quot;</bucket>
              <bucket>&quot;Sexual Assault&quot;</bucket>
              <bucket>&quot;Theft from Motor Vehicle&quot;</bucket>
              <bucket>&quot;Traffic Accident&quot;</bucket>
              <bucket>&quot;White Collar Crime&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:city (location_dimension):nk]</column>
            <column>[federated.0xxzh3n1ngww291cy2y771tzroj8].[Action (city (location_dimension))]</column>
            <column>[federated.0xxzh3n1ngww291cy2y771tzroj8].[Action (is_traffic)]</column>
            <column>[federated.0xxzh3n1ngww291cy2y771tzroj8].[Action (is_fatal)]</column>
            <column>[federated.0xxzh3n1ngww291cy2y771tzroj8].[Action (is_nighttime)]</column>
            <column>[federated.0xxzh3n1ngww291cy2y771tzroj8].[Action (offense_category)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:latitude:qk]' field-type='quantitative' max='6337514.9929709984' min='6303400.0109523814' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
            <encoding attr='space' class='0' field='[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:longitude:qk]' field-type='quantitative' max='-13673120.291281521' min='-13733639.832451299' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='normal' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:offense_category:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:latitude:qk]</rows>
        <cols>[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:longitude:qk]</cols>
      </table>
      <simple-id uuid='{A252DBE5-8657-48C1-B611-34C80CF751DE}' />
    </worksheet>
    <worksheet name='Offense category'>
      <table>
        <view>
          <datasources>
            <datasource caption='CrimeDataMart' name='federated.0xxzh3n1ngww291cy2y771tzroj8' />
          </datasources>
          <datasource-dependencies datasource='federated.0xxzh3n1ngww291cy2y771tzroj8'>
            <column-instance column='[offense_category]' derivation='None' name='[none:offense_category:nk]' pivot='key' type='nominal' />
            <column datatype='string' name='[offense_category]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:offense_category:nk]'>
            <groupfilter from='&quot;Aggravated Assault&quot;' function='range' level='[none:offense_category:nk]' to='&quot;White Collar Crime&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:offense_category:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:offense_category:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:offense_category:nk]</rows>
        <cols />
      </table>
      <simple-id uuid='{B4151C2D-0FFB-4772-AE30-8754B0DC010C}' />
    </worksheet>
    <worksheet name='Overtime'>
      <table>
        <view>
          <datasources>
            <datasource caption='CrimeDataMart' name='federated.0xxzh3n1ngww291cy2y771tzroj8' />
          </datasources>
          <datasource-dependencies datasource='federated.0xxzh3n1ngww291cy2y771tzroj8'>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column datatype='string' name='[city (location_dimension)]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column datatype='date' name='[full_date]' role='dimension' type='ordinal' />
            <column datatype='boolean' name='[is_fatal]' role='dimension' type='nominal' />
            <column datatype='boolean' name='[is_nighttime]' role='dimension' type='nominal' />
            <column datatype='boolean' name='[is_traffic]' role='dimension' type='nominal' />
            <column aggregation='Avg' datatype='real' name='[latitude]' role='dimension' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' datatype='real' name='[longitude]' role='dimension' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column-instance column='[city (location_dimension)]' derivation='None' name='[none:city (location_dimension):nk]' pivot='key' type='nominal' />
            <column-instance column='[full_date]' derivation='None' name='[none:full_date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[latitude]' derivation='None' name='[none:latitude:ok]' pivot='key' type='ordinal' />
            <column-instance column='[longitude]' derivation='None' name='[none:longitude:ok]' pivot='key' type='ordinal' />
            <column datatype='string' name='[offense_category]' role='dimension' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
            <column-instance column='[full_date]' derivation='Day-Trunc' name='[tdy:full_date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0xxzh3n1ngww291cy2y771tzroj8].[Action (city (location_dimension))]'>
            <groupfilter function='level-members' level='[city (location_dimension)]' user:ui-action-filter='[Action2]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0xxzh3n1ngww291cy2y771tzroj8].[Action (is_fatal)]'>
            <groupfilter function='level-members' level='[is_fatal]' user:ui-action-filter='[Action4]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0xxzh3n1ngww291cy2y771tzroj8].[Action (is_nighttime)]'>
            <groupfilter function='member' level='[is_nighttime]' member='true' user:ui-action-filter='[Action5]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0xxzh3n1ngww291cy2y771tzroj8].[Action (is_traffic)]'>
            <groupfilter function='level-members' level='[is_traffic]' user:ui-action-filter='[Action3]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0xxzh3n1ngww291cy2y771tzroj8].[Action (latitude,longitude,offense_category)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:latitude:ok]' />
              <groupfilter function='level-members' level='[none:longitude:ok]' />
              <groupfilter function='level-members' level='[offense_category]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:city (location_dimension):nk]'>
            <groupfilter function='level-members' level='[none:city (location_dimension):nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:full_date:qk]' included-values='in-range'>
            <min>#2015-01-02#</min>
            <max>#2020-01-28#</max>
          </filter>
          <filter class='quantitative' column='[federated.0xxzh3n1ngww291cy2y771tzroj8].[tdy:full_date:qk]' included-values='in-range-or-null'>
            <min>#2015-01-02 00:00:00#</min>
            <max>#2020-02-28 00:00:00#</max>
          </filter>
          <slices>
            <column>[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:city (location_dimension):nk]</column>
            <column>[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:full_date:qk]</column>
            <column>[federated.0xxzh3n1ngww291cy2y771tzroj8].[tdy:full_date:qk]</column>
            <column>[federated.0xxzh3n1ngww291cy2y771tzroj8].[Action (latitude,longitude,offense_category)]</column>
            <column>[federated.0xxzh3n1ngww291cy2y771tzroj8].[Action (city (location_dimension))]</column>
            <column>[federated.0xxzh3n1ngww291cy2y771tzroj8].[Action (is_traffic)]</column>
            <column>[federated.0xxzh3n1ngww291cy2y771tzroj8].[Action (is_fatal)]</column>
            <column>[federated.0xxzh3n1ngww291cy2y771tzroj8].[Action (is_nighttime)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.0xxzh3n1ngww291cy2y771tzroj8].[sum:Number of Records:qk]</rows>
        <cols>[federated.0xxzh3n1ngww291cy2y771tzroj8].[tdy:full_date:qk]</cols>
      </table>
      <simple-id uuid='{8D83A1D8-6B04-4414-B4CC-7C0F49A2550E}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='CrimeDataMart Overview'>
      <layout-options>
        <title>
          <formatted-text>
            <run>CrimeDataMart Overview&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <style />
      <size maxheight='1080' maxwidth='1900' minheight='1080' minwidth='1900' preset-index='17' sizing-mode='fixed' />
      <datasources>
        <datasource caption='CrimeDataMart' name='federated.0xxzh3n1ngww291cy2y771tzroj8' />
      </datasources>
      <datasource-dependencies datasource='federated.0xxzh3n1ngww291cy2y771tzroj8'>
        <column datatype='date' name='[full_date]' role='dimension' type='ordinal' />
        <column-instance column='[full_date]' derivation='Week-Trunc' name='[twk:full_date:qk]' pivot='key' type='quantitative' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98518' id='109' param='horz' type='layout-flow' w='99158' x='421' y='741'>
            <zone h='98518' id='85' param='horz' type='layout-flow' w='99158' x='421' y='741'>
              <zone h='98518' id='51' param='horz' type='layout-flow' w='99158' x='421' y='741'>
                <zone h='98518' id='49' param='vert' type='layout-flow' w='99158' x='421' y='741'>
                  <zone h='3889' id='45' type='title' w='99158' x='421' y='741'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='94629' id='15' param='vert' type='layout-flow' w='99158' x='421' y='4630'>
                    <zone h='94629' id='13' param='vert' type='layout-flow' w='99158' x='421' y='4630'>
                      <zone h='94629' id='7' param='horz' type='layout-flow' w='99158' x='421' y='4630'>
                        <zone h='94629' id='5' param='horz' type='layout-flow' w='53684' x='421' y='4630'>
                          <zone h='94629' id='3' type='layout-basic' w='53684' x='421' y='4630'>
                            <zone h='48237' id='1' name='Map' w='43158' x='421' y='4630'>
                              <zone-style>
                                <format attr='border-color' value='#000000' />
                                <format attr='border-style' value='none' />
                                <format attr='border-width' value='0' />
                                <format attr='margin' value='4' />
                              </zone-style>
                            </zone>
                            <zone h='6389' id='62' name='City' show-title='false' w='10526' x='43579' y='4630'>
                              <zone-style>
                                <format attr='border-color' value='#000000' />
                                <format attr='border-style' value='none' />
                                <format attr='border-width' value='0' />
                                <format attr='margin' value='4' />
                              </zone-style>
                            </zone>
                            <zone h='7960' id='74' name='Is_Traffic' show-title='false' w='10526' x='43579' y='44907'>
                              <zone-style>
                                <format attr='border-color' value='#000000' />
                                <format attr='border-style' value='none' />
                                <format attr='border-width' value='0' />
                                <format attr='margin' value='4' />
                              </zone-style>
                            </zone>
                            <zone h='7315' id='76' name='Is_Fatal' show-title='false' w='10526' x='43579' y='30183'>
                              <zone-style>
                                <format attr='border-color' value='#000000' />
                                <format attr='border-style' value='none' />
                                <format attr='border-width' value='0' />
                                <format attr='margin' value='4' />
                              </zone-style>
                            </zone>
                            <zone h='7409' id='80' name='Is_Nighttime' show-title='false' w='10526' x='43579' y='37498'>
                              <zone-style>
                                <format attr='border-color' value='#000000' />
                                <format attr='border-style' value='none' />
                                <format attr='border-width' value='0' />
                                <format attr='margin' value='4' />
                              </zone-style>
                            </zone>
                            <zone h='41668' id='30' name='Categories seasonal' w='53684' x='421' y='57591'>
                              <layout-cache minheight='198' minwidth='159' type-h='scalable' type-w='scalable' />
                              <zone-style>
                                <format attr='border-color' value='#000000' />
                                <format attr='border-style' value='none' />
                                <format attr='border-width' value='0' />
                                <format attr='margin' value='4' />
                              </zone-style>
                            </zone>
                            <zone h='4724' id='52' name='Categories seasonal' param='[federated.0xxzh3n1ngww291cy2y771tzroj8].[twk:full_date:qk]' type='filter' values='database' w='53684' x='421' y='52867'>
                              <zone-style>
                                <format attr='border-color' value='#000000' />
                                <format attr='border-style' value='none' />
                                <format attr='border-width' value='0' />
                                <format attr='margin' value='4' />
                              </zone-style>
                            </zone>
                            <zone h='19164' id='107' name='Offense category' show-title='false' w='10526' x='43579' y='11019'>
                              <zone-style>
                                <format attr='border-color' value='#000000' />
                                <format attr='border-style' value='none' />
                                <format attr='border-width' value='0' />
                                <format attr='margin' value='4' />
                              </zone-style>
                            </zone>
                          </zone>
                        </zone>
                        <zone fixed-size='864' h='94629' id='46' is-fixed='true' type='layout-basic' w='45474' x='54105' y='4630'>
                          <zone h='94629' id='89' type='layout-basic' w='45474' x='54105' y='4630'>
                            <zone h='94629' id='93' type='layout-basic' w='45474' x='54105' y='4630'>
                              <zone h='32685' id='90' param='vert' type='layout-flow' w='45474' x='54105' y='4630'>
                                <zone h='32685' id='91' name='Crimes by category' w='45474' x='54105' y='4630'>
                                  <layout-cache fixed-size-h='418' type-h='fixed' type-w='fixed' />
                                  <zone-style>
                                    <format attr='border-color' value='#000000' />
                                    <format attr='border-style' value='none' />
                                    <format attr='border-width' value='0' />
                                    <format attr='margin' value='4' />
                                  </zone-style>
                                </zone>
                              </zone>
                              <zone h='61944' id='94' param='vert' type='layout-flow' w='45474' x='54105' y='37315'>
                                <zone fixed-size='344' h='32593' id='39' is-fixed='true' name='Crimes per neighborhood' w='45474' x='54105' y='37315'>
                                  <layout-cache minwidth='260' type-h='fixed' type-w='scalable' />
                                  <zone-style>
                                    <format attr='border-color' value='#000000' />
                                    <format attr='border-style' value='none' />
                                    <format attr='border-width' value='0' />
                                    <format attr='margin' value='4' />
                                  </zone-style>
                                </zone>
                                <zone h='29351' id='83' name='Crimes on Holidays' w='45474' x='54105' y='69908'>
                                  <layout-cache fixed-size-h='398' type-h='fixed' type-w='fixed' />
                                  <zone-style>
                                    <format attr='border-color' value='#000000' />
                                    <format attr='border-style' value='none' />
                                    <format attr='border-width' value='0' />
                                    <format attr='margin' value='4' />
                                  </zone-style>
                                </zone>
                              </zone>
                            </zone>
                          </zone>
                        </zone>
                      </zone>
                    </zone>
                  </zone>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout name='Desktop'>
          <layout-options>
            <title>
              <formatted-text>
                <run>Denver Crime Overview&#10;</run>
              </formatted-text>
            </title>
          </layout-options>
          <size sizing-mode='automatic' />
          <zones>
            <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
              <zone h='98518' id='44' param='vert' type='layout-flow' w='99166' x='417' y='741'>
                <zone h='3889' id='45' type='title' w='99166' x='417' y='741'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='94629' id='15' param='vert' type='layout-flow' w='99166' x='417' y='4630'>
                  <zone h='94629' id='13' param='vert' type='layout-flow' w='99166' x='417' y='4630'>
                    <zone h='94629' id='7' param='horz' type='layout-flow' w='99166' x='417' y='4630'>
                      <zone h='94629' id='5' param='horz' type='layout-flow' w='53437' x='417' y='4630'>
                        <zone h='94629' id='3' type='layout-basic' w='53437' x='417' y='4630'>
                          <zone h='94629' id='1' name='Map' show-title='false' w='53437' x='417' y='4630'>
                            <zone-style>
                              <format attr='border-color' value='#000000' />
                              <format attr='border-style' value='none' />
                              <format attr='border-width' value='0' />
                              <format attr='margin' value='4' />
                            </zone-style>
                          </zone>
                        </zone>
                      </zone>
                      <zone fixed-size='878' h='94629' id='33' is-fixed='true' type='layout-basic' w='45729' x='53854' y='4630'>
                        <zone h='53983' id='6' param='vert' type='layout-flow' w='45729' x='53854' y='4630'>
                          <zone h='27131' id='39' name='Crimes per neighborhood' show-title='false' w='45729' x='53854' y='31482'>
                            <layout-cache fixed-size-h='1635' type-h='fixed' type-w='fixed' />
                            <zone-style>
                              <format attr='border-color' value='#000000' />
                              <format attr='border-style' value='none' />
                              <format attr='border-width' value='0' />
                              <format attr='margin' value='4' />
                            </zone-style>
                          </zone>
                        </zone>
                        <zone h='40646' id='34' param='vert' type='layout-flow' w='45729' x='53854' y='58613'>
                          <zone h='40646' id='30' name='Categories seasonal' show-title='false' w='45729' x='53854' y='58613'>
                            <layout-cache minheight='155' minwidth='159' type-h='scalable' type-w='scalable' />
                            <zone-style>
                              <format attr='border-color' value='#000000' />
                              <format attr='border-style' value='none' />
                              <format attr='border-width' value='0' />
                              <format attr='margin' value='4' />
                            </zone-style>
                          </zone>
                        </zone>
                      </zone>
                    </zone>
                  </zone>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
        <devicelayout auto-generated='true' name='Phone'>
          <layout-options>
            <title>
              <formatted-text>
                <run>CrimeDataMart Overview&#10;</run>
              </formatted-text>
            </title>
          </layout-options>
          <size maxheight='2100' minheight='2100' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='123' type='layout-basic' w='100000' x='0' y='0'>
              <zone h='98518' id='122' param='vert' type='layout-flow' w='99158' x='421' y='741'>
                <zone h='3889' id='45' type='title' w='99158' x='421' y='741'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='48237' id='1' is-fixed='true' name='Map' w='43158' x='421' y='4630'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='61' h='6389' id='62' is-fixed='true' name='City' show-title='false' w='10526' x='43579' y='4630'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='32685' id='91' is-fixed='true' name='Crimes by category' w='45474' x='54105' y='4630'>
                  <layout-cache fixed-size-h='418' type-h='fixed' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='199' h='19164' id='107' is-fixed='true' name='Offense category' show-title='false' w='10526' x='43579' y='11019'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='71' h='7315' id='76' is-fixed='true' name='Is_Fatal' show-title='false' w='10526' x='43579' y='30183'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='32593' id='39' is-fixed='true' name='Crimes per neighborhood' w='45474' x='54105' y='37315'>
                  <layout-cache minwidth='260' type-h='fixed' type-w='scalable' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='72' h='7409' id='80' is-fixed='true' name='Is_Nighttime' show-title='false' w='10526' x='43579' y='37498'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='78' h='7960' id='74' is-fixed='true' name='Is_Traffic' show-title='false' w='10526' x='43579' y='44907'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='4724' id='52' name='Categories seasonal' param='[federated.0xxzh3n1ngww291cy2y771tzroj8].[twk:full_date:qk]' type='filter' values='database' w='53684' x='421' y='52867'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='41668' id='30' is-fixed='true' name='Categories seasonal' w='53684' x='421' y='57591'>
                  <layout-cache minheight='198' minwidth='159' type-h='scalable' type-w='scalable' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='29351' id='83' is-fixed='true' name='Crimes on Holidays' w='45474' x='54105' y='69908'>
                  <layout-cache fixed-size-h='398' type-h='fixed' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{F1501353-9D3C-4F88-A867-C5C41C983E7B}' />
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='worksheet' name='Map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:offense_category:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:city (event_dimension):nk]</field>
            <field>[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:city (location_dimension):nk]</field>
            <field>[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:latitude:qk]</field>
            <field>[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:longitude:qk]</field>
            <field>[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:offense_category:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{05ECBAB6-2950-44A6-9163-19A7C980168E}' />
    </window>
    <window class='worksheet' name='Crimes by category'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:city (location_dimension):nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:offense_category:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:city (location_dimension):nk]</field>
            <field>[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:offense_category:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{9690DF88-A0D4-4343-A648-8F184080491F}' />
    </window>
    <window class='worksheet' name='Overtime'>
      <cards>
        <edge name='left'>
          <strip size='159'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:Calculation_1005991600499748864:qk]</field>
            <field>[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:city (location_dimension):nk]</field>
            <field>[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:day:qk]</field>
            <field>[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:day_of_year:qk]</field>
            <field>[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:full_date:qk]</field>
            <field>[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:month:qk]</field>
            <field>[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:year:qk]</field>
            <field>[federated.0xxzh3n1ngww291cy2y771tzroj8].[tdy:full_date:qk]</field>
            <field>[federated.0xxzh3n1ngww291cy2y771tzroj8].[yr:full_date:ok]</field>
          </color-one-way>
        </highlight>
        <floating-toolbar-visibility value='1' />
      </viewpoint>
      <simple-id uuid='{623231FB-7818-4FE2-B55F-A5B8824ED7DD}' />
    </window>
    <window class='worksheet' name='Categories seasonal'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0xxzh3n1ngww291cy2y771tzroj8].[twk:full_date:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card pane-specification-id='1' param='[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:offense_category:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:city (location_dimension):nk]</field>
            <field>[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:day_of_year:qk]</field>
            <field>[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:full_date:qk]</field>
            <field>[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:month:qk]</field>
            <field>[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:offense_category:nk]</field>
            <field>[federated.0xxzh3n1ngww291cy2y771tzroj8].[yr:full_date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{B63C2FA1-64F1-483E-8347-9B88858645C5}' />
    </window>
    <window class='worksheet' name='Crimes per neighborhood'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:neighborhood:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:city (location_dimension):nk]</field>
            <field>[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:neighborhood:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{A3177803-A571-43B2-8D4B-A7AF0844B6DE}' />
    </window>
    <window class='worksheet' name='City'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:city (location_dimension):nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:city (location_dimension):nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{12504382-7DE1-46CF-A662-0246C11C15CC}' />
    </window>
    <window class='worksheet' name='Is_Traffic'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:is_traffic:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:is_traffic:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{5E3683AD-0557-4C3C-951D-63E864D51170}' />
    </window>
    <window class='worksheet' name='Is_Fatal'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:is_fatal:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:is_fatal:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{65D91A59-EB45-43A3-A745-A2B9D9F36160}' />
    </window>
    <window class='worksheet' name='Is_Nighttime'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:is_nighttime:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:is_nighttime:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{429A6254-5F26-4D74-A1A5-5B52075D31A5}' />
    </window>
    <window class='worksheet' name='Crimes on Holidays'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:can_holiday_name:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0xxzh3n1ngww291cy2y771tzroj8].[:Measure Names]</field>
            <field>[federated.0xxzh3n1ngww291cy2y771tzroj8].[dy:full_date:ok]</field>
            <field>[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:Calculation_162411095359971329:qk]</field>
            <field>[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:Calculation_162411095361007620:qk]</field>
            <field>[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:Calculation_162411095361286150:qk]</field>
            <field>[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:can_holiday_name:nk]</field>
            <field>[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:is_can_holiday:nk]</field>
            <field>[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:is_fatal:nk]</field>
            <field>[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:offense_category:nk]</field>
            <field>[federated.0xxzh3n1ngww291cy2y771tzroj8].[yr:full_date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{8A211152-C9E2-4F18-93E8-800E7CE60864}' />
    </window>
    <window class='worksheet' name='Offense category'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:offense_category:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:offense_category:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{E7336F0E-53E3-4D34-90CC-AA3CD8FE6FEC}' />
    </window>
    <window class='dashboard' maximized='true' name='CrimeDataMart Overview'>
      <viewpoints>
        <viewpoint name='Categories seasonal'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='City' />
        <viewpoint name='Crimes by category' />
        <viewpoint name='Crimes on Holidays'>
          <highlight field='[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:can_holiday_name:nk]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='Crimes per neighborhood' />
        <viewpoint name='Is_Fatal' />
        <viewpoint name='Is_Nighttime'>
          <selection-collection>
            <tuple-selection>
              <tuple-reference>
                <tuple-descriptor>
                  <pane-descriptor>
                    <x-fields />
                    <y-fields>
                      <field>[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:is_nighttime:nk]</field>
                    </y-fields>
                  </pane-descriptor>
                  <columns>
                    <field>[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:is_nighttime:nk]</field>
                  </columns>
                </tuple-descriptor>
                <tuple>
                  <value>false</value>
                </tuple>
              </tuple-reference>
            </tuple-selection>
          </selection-collection>
        </viewpoint>
        <viewpoint name='Is_Traffic' />
        <viewpoint name='Map'>
          <zoom type='entire-view' />
          <highlight field='[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:offense_category:nk]'>
            <bucket-selection />
          </highlight>
          <default-map-tool-selection tool='1' />
        </viewpoint>
        <viewpoint name='Offense category'>
          <highlight field='[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:offense_category:nk]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='107' />
      <simple-id uuid='{5C279BC6-8A12-403F-95A8-FD3F37CE9D22}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Categories seasonal' width='192'>
      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
      AAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='64' name='City' width='144'>
      iVBORw0KGgoAAAANSUhEUgAAAJAAAABACAYAAAD1eP6XAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAHB0lEQVR4nO3cf2wT5x3H8TeTZ7FFizYoRLC2kSBNCkxb1jwE+ybnByluMkNDazo2IjaN
      bGIDNaU0CWyVSFkbaBEQqii0IBKUTdBf86aIZlpMDYkduQm+CIoiVCIWybAuIQod8mRSZZay
      Pxwn2daKwGPRQr+v/85+7rnnTh/5nrv7nmeMjY2NIcRt+srnPQBxd5MACS0SIKFFAiS0SICE
      FgmQ0CIBElokQEKLBEhokQAJLRIgoUUCJLRIgIQWCZDQIgESWiRAQosESGiRAAktEiChRQIk
      tEiAhBYJkNAiARJaJEBCiwRIaJEACS0SIKHFcrMGpmneiXGIu9QM+XMFoUNOYUKLBEhokQAJ
      LTedRIsvvtLfvjmtdi27fpz0bWsEKExzmZv6i+OLX5vFd3+4ndqq5cyTWH5paJ/CXPtNTNMk
      6NnFsks1PFl+jHAyRibuCkmbA1nnKjbW/Qajr5E3zsSS1a34gkvuJDrViWt5hLO9l+PLkTPU
      rS/ErhTKsZpKTz/xaPmpUWupbdrNBqcDpeys3NJCGAg3l6Ge+wvRRJ/hZsrsNfhjQKwfT+Vq
      HEqh7IWsrztDJN6I5jJFjT/Cmbqf4FA1+JO6Y+KzJPkqzILFAn8L/x24imfbXkY3eQiYJl0t
      FaQcrqSxL9H2BiPzn+LAuwG6vNUs7Hyb9jCkFzjJCrbTOZ6gcLuXgVIXhiVGT10F7+XU4zNN
      zI5DFJ57jpfaJqLGpcYdHJ+/g7auneQld8fEZ0jydDdGLAYLF94P0R6CoX46Qk7emdLCNQhk
      AqTy0KIMUq3ArNl8M9EgvZjHl7yOrzPKY48N0+4dwPnMI1joo8s/SGjgCYx9k/1lDQ5PLuRX
      sHftArm0vIOSe6yjPv56KpXvlz4IfAhkU9V6hLVpt9JJGgUrlnDA10n04UG8AyVszU0MM5U1
      B71sz/3fYcen7RkZEp47LWmnsNEhk+bt+wlkb+bnuRZIySE3+xxN+05wZRRglMilAKFpXKKl
      PVpCdiDIH31eIm4XOQBksvQH0NJwiLMfx4AYNwZ6ef/CtWTtgrgN2gFq3apQSmG4X6J7wTb+
      VO8m/oOThvvFPRQM17POUChVxJpdJ/l4Op3OLmaV0Ur9wRFWrlg8/qGF3E0H+NWc02x12VDK
      gevpg/SOzNTdBaFBnsYLLfIsTGiRAAktEiChRQIktEiAhBYJkNAiARJaJEBCiwRIaLntZ49X
      3/oFrvYS2l5zM3vi0ws0rCpnqCrAzjx5rHmn/KvuO9Nq941ne5O+7dv+BUqzOcgKBemOTvkw
      HCI4YLAsR8LzZXH7p7D0pRjzgnT3TJavXjO7uJhfRH5KMoYm7gYac6DFFBbfR6D7g/HlKN3B
      EEuNZcTzc5GjG1wU2hVK2Slcs4O2ofGm/hrU2lqadm/A6VAo+0q2tCTqPCKcb65ktWN8vfVH
      uQjj5axr4v3ZC1m/+xQDsUR3ipopNawTyzE/NfZVNFxIfBPDX2OnrDm+rciZOtYX2lFK4Vhd
      iad/okNUWTP9/R62rJxsL/6f1iR6sS0P/F1cAIj10B3MwqbGZ0QjM8nZeoTWgIlpdrDfOMsL
      h4KTK98YYf5TB3g30IW3eiGdb7cTBq56trHxeAqbPUFMs4OWmkf5FjF66n5Nw1gZv+8YL2f9
      8Hk2T9bHfjqLQZFzGF9gvF0siM+7hMeL0+Gqh217R9nkCWCaXbRUpHC4spGJHiOnqH25H3dT
      B8d+lq5zmO5peldh38vHGQ3Gi8Q+6CawwElB4lh/1crwiedZXahQyuCXxwf4d2zK2xqpD7Eo
      IxUrFmbNThS0RukJhjCeqWbFXCtgJTXjAebSR5ffirv8CR6wAtZMNpQ7uex//yavEFkwXKVc
      bztNHxAL+vAuWUFBGkR7goT63+Fppw2lbDirW7l2+R8MJlaN3k/Z3iocc61ah+hepzfbtTyC
      4ejnDfMaSwf9pBivkMjPtZbfUd1r4w9th1n0dQvh5jLc/foDvvUhLsd5/WVO95Uz6POSXVJB
      GsTf+siuovXIWj614nZeJgtT7+hQ70qa94Es5CwzCAXf5HQQigsXT3zzySc34L45pFktjA71
      Ejw/MI3+UsgxlhJ8dQ8nh0aJl8FeYYhMbHmjeBr/HC+PHe2jqdHLg3n2icB+dOUjYowy1HsC
      3/mpQ8xlRcl1/J3H8HkNVhXHT7EpOblkn2ti34krxCtuI1wKhOSlyFukfSMxJb+I/I6jHB3I
      wzaZH769qhx3eD9Om4MfvXCSkVlzptVfmvsVDq2L0uA2UCqf0p3v8U8s5Dz7GptnHOOn+QqV
      v5HTD9fSUJ4JQHaRm+HXS7E5VrL9xEwysv67zxyXm8jBerwO5+QVYpqbF/cUMFy/DkMpVNEa
      dp2cVsGtmEJKWu8Bn+eNRAmQ0PIfi2dULDZSmBsAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='CrimeDataMart Overview' width='192'>
      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
      gg==
    </thumbnail>
    <thumbnail height='192' name='Crimes by category' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Crimes on Holidays' width='192'>
      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
      QmCC
    </thumbnail>
    <thumbnail height='192' name='Crimes per neighborhood' width='192'>
      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
      TkSuQmCC
    </thumbnail>
    <thumbnail height='44' name='Is_Fatal' width='144'>
      iVBORw0KGgoAAAANSUhEUgAAAJAAAAAsCAYAAACKTjG2AAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAACTklEQVR4nO3cT0iTcRzH8behNhEsNCywQ6egDmL1Q5iwYFGWRH+gKGmIhyJCKwozqA5j
      WGpSWQiVUIGHoD8GRVQXhdwOki6QDv0BsaQOddCDYSsT1qVD0GTQ10cbfF6w075j38Ob3/M8
      DJaVTCaTiPyjBfO9gGQ2BSQmCkhMFJCYKCAxUUBiooDERAGJiQISEwUkJgpITBSQmCggMVFA
      YqKAxEQBiYkCEhMFJCYKSEwUkJgoIDFRQGKigMREAYmJAhITBSQmCkhMstMNxOPxudhDMlSW
      /lxBLHQJExMFJCYKSEzS3kTL/2/H6TtpZx41V3vy3YYTaJSukMO5P19houk+1RXChdNNSaYw
      n0BbL8WJrJ+NVSQT6R5ITLwJaKyHSHUlAedwLkBl/U1eT6YanGCgvYag3+Gcn+DuCD1jv98Z
      aKcm6Mc5R2DnCR6MTHuyqth4E1BOMSuWF5CdA5Bg/MU1znWP/j032U/3vQ8sWrOFAycv0HH1
      FBuLYPJpAxvqbvPm608AEp+e07KnKe39lcw9T57CXnYeo2thI3f7qijOhWjY0ZlqMH8zzb0r
      GeqNEuu7zpGOFrZffshBgLJGntzYy1IvFpRZ48kJ9ON7gvyiZSzOnebb+xj9wzMMvovybMTH
      6qpajrde4ejazwy9/UL+unLKhm5x8fFHpgCmJhiODZLiDJN55skJVB46TMn+Oiru+1i16RBu
      yQyDvgSD52tpezVOgjwKS0Oc3VYCBbtoahvhTOs+KiIJyCukNNhAOODFtmKhH1PFRI/xYvIL
      E0mMjJXscXMAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='64' name='Is_Nighttime' width='144'>
      iVBORw0KGgoAAAANSUhEUgAAAJAAAABACAYAAAD1eP6XAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAADtElEQVR4nO3cf2jUdRzH8adRazKSmJHh/jDicBQm0z5JG11tSMtRaTDBH4cMDDKsDZ2T
      foHHsbHmMFf4z4wWHGE/sCtlrIicsBuZbCeMYVEyroYJGvP+mKzVdbD+aMZGk1t733fzW68H
      7I/73uf4fv548v1+d9/P9xZNTExMIDJHtyz0BMTfFJCYKCAxUUBiooDERAGJiQISEwUkJgpI
      TBSQmCggMVFAYqKAxEQBiYkCEhMFJCYKSEwUkJgoIDFRQGKigMREAYmJAhITBSQmCkhMFJCY
      KCAxuTXbgEQiMR/zEJ9apB9XEAudwsREAYmJAhKTrBfRcvPb9NpHsxp3snlrzvdtOAINEw05
      nJv6Fyae7VPREC6cbZT4hfkI9NThBJHHcjEV8SNdA4mJNwFdPUVkayVB53AuSOWLHXw3NtPA
      UfradlBR6nCulIrNEU5dnXynr40dFaU45wg+20AsmfFkqmJjPoV11Tu6rr8oriV2rIYVLGdj
      0ye8GlhCXibFZ/sqOXhiA9FQ0fQPX/iQltNrONzzPmvy0owOfcvPAFdivHwoze5YL6WFkDrd
      yLaGDh78dBcrrROWnPLmGui2DIPtO6n/+ieu/fHXpuK1MxxBiu4lMNJEZE+KDeVVPFr+MKuW
      wtjnZ+hP9tBfeXzqnrgMCugm48m/8eeO7iF6+34+7qni7jyIhx1HZxpY8CTN3SsZ6I7T29NO
      7ZE32PjWCZ4HKNlP17tbWObFBCVnPLkG+v23cQqW3sOdeRl+/bGXb4ZuMPCHOF8k83mgqoa9
      LW9Tt/YyA99foeChdZQMvMebnRdJA6RHGertZ9iLyYqJJ0egdaGXKHpuN2XH87n/iRdwd91g
      YP44/QdraB1MMc5iCleHaHqmCJZU09ia5PWW7ZRFxmFxIasr9hEOejFbsdDdeDHR90BiooDE
      RAGJiQISEwUkJgpITBSQmCggMVFAYjLnWxnxsKO+65/bi2tjHKtZYZmT/EvX2lbNatwde8/n
      fN/2WxnDUULVSXYlImhl68JYyIB0ChMTbwIajhJyYeKjfbRtC04+hREnPO2pjemvtYTVnzw8
      Ag3RceADlh/4krPZHtuYsoQ1kTjLyboC3mno4IJ3k5Mc8fTBwsfrDrHlvuy7GDunJax+5WFA
      AQKziOdvWsLqS/N8EX2Ji5cykP6F853dDE5u1RJW/5rHgEpYXz1C+6ZHCD79Cp35AYqvv7Ws
      msbWckaObKfMOdz6zTR/lZq/qcmcaUnrf4C/v0iU/7U/AbGCHQKnqzUTAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='64' name='Is_Traffic' width='144'>
      iVBORw0KGgoAAAANSUhEUgAAAJAAAABACAYAAAD1eP6XAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAADr0lEQVR4nO3cf2jUdRzH8adRazKSmJHh/jDicBQm0z6KG51tSMtRaTDBH4cMCjLMDZ2T
      ssDj2FhzmCv8Z0YLjrAf2JUyZkRO2A1NthPGsCgZV0MFjXl/TNbyOlh/OGOjycXe+25+4/WA
      /XHf+xzfzx9PPve9u89388bGxsYQmab75noC4m8KSEwUkJgoIDFRQGKigMREAYmJAhITBSQm
      CkhMFJCYKCAxUUBiooDERAGJiQISEwUkJgpITBSQmCggMVFAYqKAxEQBiYkCEhMFJCYKSEwU
      kJjcn21AIpGYjXmIT83TP1cQC72FiYkCEhMFJCZZL6Ll3rfxnS+yjjnZuMWTcxtWoEGiIYdz
      E//CxLO9KhrChbONEr8wr0AvHk4QWTsTUxE/0jWQmHgT0I3TRLaUE3QO54KUv9nGTyNTDRym
      p2U7ZcUO54op2xTh9I3xZ3pa2F5WjHOO4Ct1xJIZT6YqNua3sI5aR8edB4XVxI5VsYTFbGj4
      iv2BBeRkUnyzt5yDJ9YTDRVMfvGlz2k6s4LDXZ+yIifN8MCPXAG4HuOtQ2l2xropzofUmXq2
      1rXx9Nc7WGqdsMwob66BHsjQ3/oqtWd/4+Zftw8VrpxiBSl4nMBQA5HdKdaXVvBs6SqWLYSR
      U+foTXbRW3584pm4BgroHuPJx/gLR3cTfXAfX3ZV8GgOxMOOo1MNzHuBxs6l9HXG6e5qpfrI
      e2z44ASvAxTto+PjzSzyYoIyYzy5Brr15yh5Cx/j4ZwMf/zazQ8Ddxn4S5xvk7k8VVHFnqYP
      qVl5jb6fr5P3zGqK+j7h/fbLpAHSwwx09zLoxWTFxJMVaHVoFwWv7aTkeC5PPv8G7pG7DMwd
      pfdgFc39KUaZT/7yEA0vF8CCSuqbk7zbtI2SyCjMz2d52V7CQS9mKxb6NV5M9D2QmCggMVFA
      YqKAxEQBiYkCEhMFJCYKSEy0pfV/4GbLsqxjHtpz0ZNzTzugeNhR2/Hv44XVMY5VLbHMSXzE
      /lPGYJRQZZIdiQja2To35nIF0jWQmHgT0GCUkAsTH+6hZWtw/C6MOOFJd21MfqwtrP7k4Qo0
      QNuBz1h84DvOZ7ttY8IW1kTiPCdr8vioro1L3k1OZoinn8KeqznE5ieyn2Lkgraw+pWHAQUI
      /Id4/qEtrL40yxfRV7l8NQPp37nY3kn/+FFtYfWvWQyoiHWVQ7RuXEPwpbdpzw1QeOepRZXU
      N5cydGQbJc7h1m2i8fvU7E1Npk1bWsVE3wOJyd/M2xYJ9KBckwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Map' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Offense category' width='192'>
      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
      egBRUBMEQfj/JCOVVyfRHRQAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Overtime' width='192'>
      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
      YII=
    </thumbnail>
  </thumbnails>
</workbook>
