<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20201.20.0219.0753                               -->
<workbook original-version='18.1' source-build='2020.1.0 (20201.20.0219.0753)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='CrimeDataMart' inline='true' name='federated.0xxzh3n1ngww291cy2y771tzroj8' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='web0.eecs.uottawa.ca' name='postgres.0z4v9lv0bmvflk12du7ry0m7ye2e'>
            <connection authentication='username-password' class='postgres' dbname='group_42' odbc-native-protocol='' one-time-sql='' port='15432' server='web0.eecs.uottawa.ca' sslmode='require' username='qdo086' />
          </named-connection>
        </named-connections>
        <relation join='inner' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[crime_fact].[location_dim_key]' />
              <expression op='[location_dimension].[location_dim_key]' />
            </expression>
          </clause>
          <relation join='inner' type='join'>
            <clause type='join'>
              <expression op='='>
                <expression op='[crime_fact].[date_dim_key]' />
                <expression op='[date_dimension].[date_dim_key]' />
              </expression>
            </clause>
            <relation join='inner' type='join'>
              <clause type='join'>
                <expression op='='>
                  <expression op='[crime_fact].[event_dim_key]' />
                  <expression op='[event_dimension].[event_dim_key]' />
                </expression>
              </clause>
              <relation join='inner' type='join'>
                <clause type='join'>
                  <expression op='='>
                    <expression op='[crime_fact].[crime_dim_key]' />
                    <expression op='[crime_dimension].[crime_dim_key]' />
                  </expression>
                </clause>
                <relation connection='postgres.0z4v9lv0bmvflk12du7ry0m7ye2e' name='crime_fact' table='[CrimeDataMart].[crime_fact]' type='table' />
                <relation connection='postgres.0z4v9lv0bmvflk12du7ry0m7ye2e' name='crime_dimension' table='[CrimeDataMart].[crime_dimension]' type='table' />
              </relation>
              <relation connection='postgres.0z4v9lv0bmvflk12du7ry0m7ye2e' name='event_dimension' table='[CrimeDataMart].[event_dimension]' type='table' />
            </relation>
            <relation connection='postgres.0z4v9lv0bmvflk12du7ry0m7ye2e' name='date_dimension' table='[CrimeDataMart].[date_dimension]' type='table' />
          </relation>
          <relation connection='postgres.0z4v9lv0bmvflk12du7ry0m7ye2e' name='location_dimension' table='[CrimeDataMart].[location_dimension]' type='table' />
        </relation>
        <cols>
          <map key='[can_holiday_name]' value='[date_dimension].[can_holiday_name]' />
          <map key='[city (location_dimension)]' value='[location_dimension].[city]' />
          <map key='[city]' value='[event_dimension].[city]' />
          <map key='[crime_dim_key (crime_dimension)]' value='[crime_dimension].[crime_dim_key]' />
          <map key='[crime_dim_key]' value='[crime_fact].[crime_dim_key]' />
          <map key='[crime_rate]' value='[location_dimension].[crime_rate]' />
          <map key='[date_dim_key (date_dimension)]' value='[date_dimension].[date_dim_key]' />
          <map key='[date_dim_key]' value='[crime_fact].[date_dim_key]' />
          <map key='[day]' value='[date_dimension].[day]' />
          <map key='[day_of_year]' value='[date_dimension].[day_of_year]' />
          <map key='[event_dim_key (event_dimension)]' value='[event_dimension].[event_dim_key]' />
          <map key='[event_dim_key]' value='[crime_fact].[event_dim_key]' />
          <map key='[first_occurrence_time]' value='[crime_dimension].[first_occurrence_time]' />
          <map key='[full_date]' value='[date_dimension].[full_date]' />
          <map key='[is_can_holiday]' value='[date_dimension].[is_can_holiday]' />
          <map key='[is_fatal]' value='[crime_fact].[is_fatal]' />
          <map key='[is_month_end]' value='[date_dimension].[is_month_end]' />
          <map key='[is_month_start]' value='[date_dimension].[is_month_start]' />
          <map key='[is_nighttime]' value='[crime_fact].[is_nighttime]' />
          <map key='[is_traffic]' value='[crime_fact].[is_traffic]' />
          <map key='[is_us_holiday]' value='[date_dimension].[is_us_holiday]' />
          <map key='[is_violent]' value='[crime_dimension].[is_violent]' />
          <map key='[is_weekend]' value='[date_dimension].[is_weekend]' />
          <map key='[is_year_end]' value='[date_dimension].[is_year_end]' />
          <map key='[is_year_start]' value='[date_dimension].[is_year_start]' />
          <map key='[last_occurrence_time]' value='[crime_dimension].[last_occurrence_time]' />
          <map key='[latitude]' value='[location_dimension].[latitude]' />
          <map key='[location (location_dimension)]' value='[location_dimension].[location]' />
          <map key='[location]' value='[event_dimension].[location]' />
          <map key='[location_dim_key (location_dimension)]' value='[location_dimension].[location_dim_key]' />
          <map key='[location_dim_key]' value='[crime_fact].[location_dim_key]' />
          <map key='[location_size]' value='[event_dimension].[location_size]' />
          <map key='[longitude]' value='[location_dimension].[longitude]' />
          <map key='[month]' value='[date_dimension].[month]' />
          <map key='[name]' value='[event_dimension].[name]' />
          <map key='[neighborhood]' value='[location_dimension].[neighborhood]' />
          <map key='[offense_category]' value='[crime_dimension].[offense_category]' />
          <map key='[offense_type]' value='[crime_dimension].[offense_type]' />
          <map key='[quarter]' value='[date_dimension].[quarter]' />
          <map key='[reported_time]' value='[crime_dimension].[reported_time]' />
          <map key='[type]' value='[event_dimension].[type]' />
          <map key='[us_holiday_name]' value='[date_dimension].[us_holiday_name]' />
          <map key='[week_of_year]' value='[date_dimension].[week_of_year]' />
          <map key='[weekday]' value='[date_dimension].[weekday]' />
          <map key='[year]' value='[date_dimension].[year]' />
        </cols>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>date_dim_key</remote-name>
            <remote-type>3</remote-type>
            <local-name>[date_dim_key]</local-name>
            <parent-name>[crime_fact]</parent-name>
            <remote-alias>date_dim_key</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location_dim_key</remote-name>
            <remote-type>3</remote-type>
            <local-name>[location_dim_key]</local-name>
            <parent-name>[crime_fact]</parent-name>
            <remote-alias>location_dim_key</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>crime_dim_key</remote-name>
            <remote-type>3</remote-type>
            <local-name>[crime_dim_key]</local-name>
            <parent-name>[crime_fact]</parent-name>
            <remote-alias>crime_dim_key</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>event_dim_key</remote-name>
            <remote-type>3</remote-type>
            <local-name>[event_dim_key]</local-name>
            <parent-name>[crime_fact]</parent-name>
            <remote-alias>event_dim_key</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>is_traffic</remote-name>
            <remote-type>11</remote-type>
            <local-name>[is_traffic]</local-name>
            <parent-name>[crime_fact]</parent-name>
            <remote-alias>is_traffic</remote-alias>
            <ordinal>5</ordinal>
            <local-type>boolean</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_BIT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_BIT&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>is_fatal</remote-name>
            <remote-type>11</remote-type>
            <local-name>[is_fatal]</local-name>
            <parent-name>[crime_fact]</parent-name>
            <remote-alias>is_fatal</remote-alias>
            <ordinal>6</ordinal>
            <local-type>boolean</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_BIT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_BIT&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>is_nighttime</remote-name>
            <remote-type>11</remote-type>
            <local-name>[is_nighttime]</local-name>
            <parent-name>[crime_fact]</parent-name>
            <remote-alias>is_nighttime</remote-alias>
            <ordinal>7</ordinal>
            <local-type>boolean</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_BIT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_BIT&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>crime_dim_key</remote-name>
            <remote-type>3</remote-type>
            <local-name>[crime_dim_key (crime_dimension)]</local-name>
            <parent-name>[crime_dimension]</parent-name>
            <remote-alias>crime_dim_key</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>first_occurrence_time</remote-name>
            <remote-type>134</remote-type>
            <local-name>[first_occurrence_time]</local-name>
            <parent-name>[crime_dimension]</parent-name>
            <remote-alias>first_occurrence_time</remote-alias>
            <ordinal>10</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Hour</aggregation>
            <precision>6</precision>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_TYPE_TIME&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_TYPE_TIME&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>last_occurrence_time</remote-name>
            <remote-type>134</remote-type>
            <local-name>[last_occurrence_time]</local-name>
            <parent-name>[crime_dimension]</parent-name>
            <remote-alias>last_occurrence_time</remote-alias>
            <ordinal>11</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Hour</aggregation>
            <precision>6</precision>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_TYPE_TIME&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_TYPE_TIME&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>reported_time</remote-name>
            <remote-type>134</remote-type>
            <local-name>[reported_time]</local-name>
            <parent-name>[crime_dimension]</parent-name>
            <remote-alias>reported_time</remote-alias>
            <ordinal>12</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Hour</aggregation>
            <precision>6</precision>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_TYPE_TIME&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_TYPE_TIME&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>offense_type</remote-name>
            <remote-type>130</remote-type>
            <local-name>[offense_type]</local-name>
            <parent-name>[crime_dimension]</parent-name>
            <remote-alias>offense_type</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>255</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>offense_category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[offense_category]</local-name>
            <parent-name>[crime_dimension]</parent-name>
            <remote-alias>offense_category</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>255</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>is_violent</remote-name>
            <remote-type>11</remote-type>
            <local-name>[is_violent]</local-name>
            <parent-name>[crime_dimension]</parent-name>
            <remote-alias>is_violent</remote-alias>
            <ordinal>15</ordinal>
            <local-type>boolean</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_BIT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_BIT&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>event_dim_key</remote-name>
            <remote-type>3</remote-type>
            <local-name>[event_dim_key (event_dimension)]</local-name>
            <parent-name>[event_dimension]</parent-name>
            <remote-alias>event_dim_key</remote-alias>
            <ordinal>17</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[location]</local-name>
            <parent-name>[event_dimension]</parent-name>
            <remote-alias>location</remote-alias>
            <ordinal>18</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>255</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>city</remote-name>
            <remote-type>130</remote-type>
            <local-name>[city]</local-name>
            <parent-name>[event_dimension]</parent-name>
            <remote-alias>city</remote-alias>
            <ordinal>19</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>255</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[name]</local-name>
            <parent-name>[event_dimension]</parent-name>
            <remote-alias>name</remote-alias>
            <ordinal>20</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>255</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>type</remote-name>
            <remote-type>130</remote-type>
            <local-name>[type]</local-name>
            <parent-name>[event_dimension]</parent-name>
            <remote-alias>type</remote-alias>
            <ordinal>21</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>255</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location_size</remote-name>
            <remote-type>3</remote-type>
            <local-name>[location_size]</local-name>
            <parent-name>[event_dimension]</parent-name>
            <remote-alias>location_size</remote-alias>
            <ordinal>22</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date_dim_key</remote-name>
            <remote-type>3</remote-type>
            <local-name>[date_dim_key (date_dimension)]</local-name>
            <parent-name>[date_dimension]</parent-name>
            <remote-alias>date_dim_key</remote-alias>
            <ordinal>24</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>full_date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[full_date]</local-name>
            <parent-name>[date_dimension]</parent-name>
            <remote-alias>full_date</remote-alias>
            <ordinal>25</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_TYPE_DATE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_TYPE_DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>day</remote-name>
            <remote-type>3</remote-type>
            <local-name>[day]</local-name>
            <parent-name>[date_dimension]</parent-name>
            <remote-alias>day</remote-alias>
            <ordinal>26</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>month</remote-name>
            <remote-type>3</remote-type>
            <local-name>[month]</local-name>
            <parent-name>[date_dimension]</parent-name>
            <remote-alias>month</remote-alias>
            <ordinal>27</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>year</remote-name>
            <remote-type>3</remote-type>
            <local-name>[year]</local-name>
            <parent-name>[date_dimension]</parent-name>
            <remote-alias>year</remote-alias>
            <ordinal>28</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>day_of_year</remote-name>
            <remote-type>3</remote-type>
            <local-name>[day_of_year]</local-name>
            <parent-name>[date_dimension]</parent-name>
            <remote-alias>day_of_year</remote-alias>
            <ordinal>29</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>week_of_year</remote-name>
            <remote-type>3</remote-type>
            <local-name>[week_of_year]</local-name>
            <parent-name>[date_dimension]</parent-name>
            <remote-alias>week_of_year</remote-alias>
            <ordinal>30</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>weekday</remote-name>
            <remote-type>3</remote-type>
            <local-name>[weekday]</local-name>
            <parent-name>[date_dimension]</parent-name>
            <remote-alias>weekday</remote-alias>
            <ordinal>31</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>is_weekend</remote-name>
            <remote-type>11</remote-type>
            <local-name>[is_weekend]</local-name>
            <parent-name>[date_dimension]</parent-name>
            <remote-alias>is_weekend</remote-alias>
            <ordinal>32</ordinal>
            <local-type>boolean</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_BIT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_BIT&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>quarter</remote-name>
            <remote-type>3</remote-type>
            <local-name>[quarter]</local-name>
            <parent-name>[date_dimension]</parent-name>
            <remote-alias>quarter</remote-alias>
            <ordinal>33</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>is_month_start</remote-name>
            <remote-type>11</remote-type>
            <local-name>[is_month_start]</local-name>
            <parent-name>[date_dimension]</parent-name>
            <remote-alias>is_month_start</remote-alias>
            <ordinal>34</ordinal>
            <local-type>boolean</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_BIT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_BIT&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>is_month_end</remote-name>
            <remote-type>11</remote-type>
            <local-name>[is_month_end]</local-name>
            <parent-name>[date_dimension]</parent-name>
            <remote-alias>is_month_end</remote-alias>
            <ordinal>35</ordinal>
            <local-type>boolean</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_BIT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_BIT&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>is_year_start</remote-name>
            <remote-type>11</remote-type>
            <local-name>[is_year_start]</local-name>
            <parent-name>[date_dimension]</parent-name>
            <remote-alias>is_year_start</remote-alias>
            <ordinal>36</ordinal>
            <local-type>boolean</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_BIT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_BIT&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>is_year_end</remote-name>
            <remote-type>11</remote-type>
            <local-name>[is_year_end]</local-name>
            <parent-name>[date_dimension]</parent-name>
            <remote-alias>is_year_end</remote-alias>
            <ordinal>37</ordinal>
            <local-type>boolean</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_BIT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_BIT&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>is_can_holiday</remote-name>
            <remote-type>11</remote-type>
            <local-name>[is_can_holiday]</local-name>
            <parent-name>[date_dimension]</parent-name>
            <remote-alias>is_can_holiday</remote-alias>
            <ordinal>38</ordinal>
            <local-type>boolean</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_BIT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_BIT&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>can_holiday_name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[can_holiday_name]</local-name>
            <parent-name>[date_dimension]</parent-name>
            <remote-alias>can_holiday_name</remote-alias>
            <ordinal>39</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>255</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>is_us_holiday</remote-name>
            <remote-type>11</remote-type>
            <local-name>[is_us_holiday]</local-name>
            <parent-name>[date_dimension]</parent-name>
            <remote-alias>is_us_holiday</remote-alias>
            <ordinal>40</ordinal>
            <local-type>boolean</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_BIT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_BIT&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>us_holiday_name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[us_holiday_name]</local-name>
            <parent-name>[date_dimension]</parent-name>
            <remote-alias>us_holiday_name</remote-alias>
            <ordinal>41</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>255</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location_dim_key</remote-name>
            <remote-type>3</remote-type>
            <local-name>[location_dim_key (location_dimension)]</local-name>
            <parent-name>[location_dimension]</parent-name>
            <remote-alias>location_dim_key</remote-alias>
            <ordinal>43</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[location (location_dimension)]</local-name>
            <parent-name>[location_dimension]</parent-name>
            <remote-alias>location</remote-alias>
            <ordinal>44</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>255</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>neighborhood</remote-name>
            <remote-type>130</remote-type>
            <local-name>[neighborhood]</local-name>
            <parent-name>[location_dimension]</parent-name>
            <remote-alias>neighborhood</remote-alias>
            <ordinal>45</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>255</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>latitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[latitude]</local-name>
            <parent-name>[location_dimension]</parent-name>
            <remote-alias>latitude</remote-alias>
            <ordinal>46</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_FLOAT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>longitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[longitude]</local-name>
            <parent-name>[location_dimension]</parent-name>
            <remote-alias>longitude</remote-alias>
            <ordinal>47</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_FLOAT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>city</remote-name>
            <remote-type>130</remote-type>
            <local-name>[city (location_dimension)]</local-name>
            <parent-name>[location_dimension]</parent-name>
            <remote-alias>city</remote-alias>
            <ordinal>48</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>255</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>crime_rate</remote-name>
            <remote-type>5</remote-type>
            <local-name>[crime_rate]</local-name>
            <parent-name>[location_dimension]</parent-name>
            <remote-alias>crime_rate</remote-alias>
            <ordinal>49</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_FLOAT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='string' name='[can_holiday_name]' role='dimension' type='nominal' />
      <column datatype='string' name='[city (location_dimension)]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column datatype='string' name='[city]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column aggregation='Sum' datatype='integer' name='[crime_dim_key (crime_dimension)]' role='dimension' type='ordinal' />
      <column aggregation='Sum' datatype='integer' name='[crime_dim_key]' role='dimension' type='ordinal' />
      <column aggregation='Sum' datatype='integer' name='[date_dim_key (date_dimension)]' role='dimension' type='ordinal' />
      <column aggregation='Sum' datatype='integer' name='[date_dim_key]' role='dimension' type='ordinal' />
      <column datatype='integer' name='[day]' role='dimension' type='quantitative' />
      <column datatype='integer' name='[day_of_year]' role='dimension' type='quantitative' />
      <column aggregation='Sum' datatype='integer' name='[event_dim_key (event_dimension)]' role='dimension' type='ordinal' />
      <column aggregation='Sum' datatype='integer' name='[event_dim_key]' role='dimension' type='ordinal' />
      <column aggregation='Hour' datatype='datetime' name='[first_occurrence_time]' role='dimension' type='ordinal' />
      <column datatype='date' name='[full_date]' role='dimension' type='ordinal' />
      <column datatype='boolean' name='[is_fatal]' role='dimension' type='nominal' />
      <column datatype='boolean' name='[is_nighttime]' role='dimension' type='nominal' />
      <column datatype='boolean' name='[is_traffic]' role='dimension' type='nominal' />
      <column aggregation='Hour' datatype='datetime' name='[last_occurrence_time]' role='dimension' type='ordinal' />
      <column aggregation='Avg' datatype='real' name='[latitude]' role='dimension' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column aggregation='Sum' datatype='integer' name='[location_dim_key (location_dimension)]' role='dimension' type='ordinal' />
      <column aggregation='Sum' datatype='integer' name='[location_dim_key]' role='dimension' type='ordinal' />
      <column aggregation='Avg' datatype='real' name='[longitude]' role='dimension' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column datatype='integer' name='[month]' role='dimension' type='quantitative' />
      <column datatype='string' name='[neighborhood]' role='dimension' type='nominal' />
      <column datatype='string' name='[offense_category]' role='dimension' type='nominal' />
      <column datatype='integer' name='[quarter]' role='dimension' type='quantitative' />
      <column aggregation='Hour' datatype='datetime' name='[reported_time]' role='dimension' type='ordinal' />
      <column datatype='integer' name='[week_of_year]' role='dimension' type='quantitative' />
      <column datatype='integer' name='[year]' role='dimension' type='quantitative' />
      <column-instance column='[can_holiday_name]' derivation='None' name='[none:can_holiday_name:nk]' pivot='key' type='nominal' />
      <column-instance column='[city (location_dimension)]' derivation='None' name='[none:city (location_dimension):nk]' pivot='key' type='nominal' />
      <column-instance column='[day_of_year]' derivation='None' name='[none:day_of_year:qk]' pivot='key' type='quantitative' />
      <column-instance column='[is_fatal]' derivation='None' name='[none:is_fatal:nk]' pivot='key' type='nominal' />
      <column-instance column='[is_traffic]' derivation='None' name='[none:is_traffic:nk]' pivot='key' type='nominal' />
      <column-instance column='[latitude]' derivation='None' name='[none:latitude:ok]' pivot='key' type='ordinal' />
      <column-instance column='[longitude]' derivation='None' name='[none:longitude:ok]' pivot='key' type='ordinal' />
      <column-instance column='[neighborhood]' derivation='None' name='[none:neighborhood:nk]' pivot='key' type='nominal' />
      <column-instance column='[offense_category]' derivation='None' name='[none:offense_category:nk]' pivot='key' type='nominal' />
      <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
      <column-instance column='[full_date]' derivation='Week-Trunc' name='[twk:full_date:ok]' pivot='key' type='ordinal' />
      <group caption='Action (WEEK(full_date),offense_category)' hidden='true' name='[Action (WEEK(full_date),offense_category)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[twk:full_date:ok]' />
          <groupfilter function='level-members' level='[offense_category]' />
        </groupfilter>
      </group>
      <group caption='Action (city (location_dimension))' hidden='true' name='[Action (city (location_dimension))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[city (location_dimension)]' />
        </groupfilter>
      </group>
      <group caption='Action (is_fatal)' hidden='true' name='[Action (is_fatal)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[is_fatal]' />
        </groupfilter>
      </group>
      <group caption='Action (is_nighttime)' hidden='true' name='[Action (is_nighttime)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[is_nighttime]' />
        </groupfilter>
      </group>
      <group caption='Action (is_traffic)' hidden='true' name='[Action (is_traffic)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[is_traffic]' />
        </groupfilter>
      </group>
      <group caption='Action (latitude,longitude,offense_category)' hidden='true' name='[Action (latitude,longitude,offense_category)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:latitude:ok]' />
          <groupfilter function='level-members' level='[none:longitude:ok]' />
          <groupfilter function='level-members' level='[offense_category]' />
        </groupfilter>
      </group>
      <group caption='Action (offense_category)' hidden='true' name='[Action (offense_category)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[offense_category]' />
        </groupfilter>
      </group>
      <layout dim-ordering='alphabetic' dim-percentage='0.735516' measure-ordering='alphabetic' measure-percentage='0.264484' show-structure='true' user-set-layout='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0xxzh3n1ngww291cy2y771tzroj8]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:day_of_year:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0xxzh3n1ngww291cy2y771tzroj8].[sum:Number of Records:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:city (location_dimension):nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Denver&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Vancouver&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:can_holiday_name:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Good Friday&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Boxing Day&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Christmas Day&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Thanksgiving&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Labour Day&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Christmas Day (Observed)&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Boxing Day (Observed)&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Civic Holiday&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Victoria Day&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;New Year&apos;s Day&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Family Day&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Canada Day&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;New Year&apos;s Day (Observed)&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Canada Day (Observed)&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:neighborhood:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Chaffee Park&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Civic Center&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;College View South Platte&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Kensington-Cedar Cottage&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Sloan Lake&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Barnum West&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Central Business District&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Five Points&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Jefferson Park&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;South Cambie&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Speer&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Mar Lee&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Montbello&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Musqueam&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Strathcona&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Washington Park West&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Whittier&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Cole&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Harvey Park&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Kennedy&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Marpole&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;West Colfax&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Hastings-Sunrise&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Lowry Field&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Southmoor Park&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Sunnyside&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Union Station&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;City Park&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Grandview-Woodland&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Lincoln Park&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Montclair&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Villa Park&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Hampden&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Overland&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Shaughnessy&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Valverde&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Arbutus Ridge&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Elyria Swansea&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Goldsmith&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Platt Park&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Stapleton&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;West End&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Auraria&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Dunbar-Southlands&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Northeast Park Hill&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;University Park&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Wellshire&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Athmar Park&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Baker&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Cory Merrill&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Renfrew-Collingwood&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;University&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Barnum&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;North Capitol Hill&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Skyland&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Victoria-Fraserview&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Windsor&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Highland&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Killarney&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;North Park Hill&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Rosedale&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Virginia Village&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Berkeley&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Clayton&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;DIA&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Indian Creek&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Kerrisdale&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Bear Valley&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Globeville&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;West Highland&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;West Point Grey&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Belcaro&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cherry Creek&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Marston&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Sunset&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Westwood&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;City Park West&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;East Colfax&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Harvey Park South&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Kitsilano&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Regis&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;CBD&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Cheesman Park&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Mount Pleasant&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Stanley Park&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Sun Valley&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Washington Park&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Congress Park&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Country Club&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Hale&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Hampden South&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Oakridge&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Fort Logan&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Gateway Green Valley Ranch&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Riley Park&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Ruby Hill&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;South Park Hill&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>%null%</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Capitol Hill&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Fairview&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Hilltop&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;University Hills&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Washington Virginia Vale&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:is_fatal:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>false</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>true</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:is_traffic:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>false</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>true</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:offense_category:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Other Crimes Against Persons&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Aggravated Assault&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Burglary&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Theft from Motor Vehicle&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Public Disorder&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Drug &amp; Alcohol&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;All Other Crimes&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Larceny&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Traffic Accident&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;White Collar Crime&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Robbery&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Murder&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Arson&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Sexual Assault&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Auto Theft&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Canada&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Filter 1 (generated)' name='[Action1]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='CrimeDataMart Overview' type='sheet' worksheet='Map' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='CrimeDataMart Overview' />
      </command>
    </action>
    <action caption='Filter 2 (generated)' name='[Action2]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='CrimeDataMart Overview' type='sheet' worksheet='City' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='CrimeDataMart Overview' />
      </command>
    </action>
    <action caption='Filter 3 (generated)' name='[Action3]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='CrimeDataMart Overview' type='sheet' worksheet='Is_Traffic' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='CrimeDataMart Overview' />
      </command>
    </action>
    <action caption='Filter 4 (generated)' name='[Action4]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='CrimeDataMart Overview' type='sheet' worksheet='Is_Fatal' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='CrimeDataMart Overview' />
      </command>
    </action>
    <action caption='Filter 5 (generated)' name='[Action5]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='CrimeDataMart Overview' type='sheet' worksheet='Is_Nighttime' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='CrimeDataMart Overview' />
      </command>
    </action>
    <action caption='Filter 6 (generated)' name='[Action6]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='CrimeDataMart Overview' type='sheet' worksheet='Offense category' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='CrimeDataMart Overview' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='City'>
      <table>
        <view>
          <datasources>
            <datasource caption='CrimeDataMart' name='federated.0xxzh3n1ngww291cy2y771tzroj8' />
          </datasources>
          <datasource-dependencies datasource='federated.0xxzh3n1ngww291cy2y771tzroj8'>
            <column datatype='string' name='[city (location_dimension)]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column datatype='boolean' name='[is_fatal]' role='dimension' type='nominal' />
            <column datatype='boolean' name='[is_nighttime]' role='dimension' type='nominal' />
            <column datatype='boolean' name='[is_traffic]' role='dimension' type='nominal' />
            <column-instance column='[city (location_dimension)]' derivation='None' name='[none:city (location_dimension):nk]' pivot='key' type='nominal' />
            <column datatype='string' name='[offense_category]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0xxzh3n1ngww291cy2y771tzroj8].[Action (is_fatal)]'>
            <groupfilter function='level-members' level='[is_fatal]' user:ui-action-filter='[Action4]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0xxzh3n1ngww291cy2y771tzroj8].[Action (is_nighttime)]'>
            <groupfilter function='level-members' level='[is_nighttime]' user:ui-action-filter='[Action5]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0xxzh3n1ngww291cy2y771tzroj8].[Action (is_traffic)]'>
            <groupfilter function='level-members' level='[is_traffic]' user:ui-action-filter='[Action3]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0xxzh3n1ngww291cy2y771tzroj8].[Action (offense_category)]'>
            <groupfilter function='member' level='[offense_category]' member='&quot;Robbery&quot;' user:ui-action-filter='[Action6]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:city (location_dimension):nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:city (location_dimension):nk]' member='&quot;Denver&quot;' />
              <groupfilter function='member' level='[none:city (location_dimension):nk]' member='&quot;Vancouver&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:city (location_dimension):nk]</column>
            <column>[federated.0xxzh3n1ngww291cy2y771tzroj8].[Action (is_traffic)]</column>
            <column>[federated.0xxzh3n1ngww291cy2y771tzroj8].[Action (is_fatal)]</column>
            <column>[federated.0xxzh3n1ngww291cy2y771tzroj8].[Action (is_nighttime)]</column>
            <column>[federated.0xxzh3n1ngww291cy2y771tzroj8].[Action (offense_category)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:city (location_dimension):nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:city (location_dimension):nk]</rows>
        <cols />
      </table>
      <simple-id uuid='{5DFD3DDD-BBC5-4CD5-AA4F-4C5D2621C1D0}' />
    </worksheet>
    <worksheet name='Crimes by category'>
      <table>
        <view>
          <datasources>
            <datasource caption='CrimeDataMart' name='federated.0xxzh3n1ngww291cy2y771tzroj8' />
          </datasources>
          <datasource-dependencies datasource='federated.0xxzh3n1ngww291cy2y771tzroj8'>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column datatype='string' name='[city (location_dimension)]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column datatype='boolean' name='[is_fatal]' role='dimension' type='nominal' />
            <column datatype='boolean' name='[is_nighttime]' role='dimension' type='nominal' />
            <column datatype='boolean' name='[is_traffic]' role='dimension' type='nominal' />
            <column aggregation='Avg' datatype='real' name='[latitude]' role='dimension' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' datatype='real' name='[longitude]' role='dimension' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column-instance column='[city (location_dimension)]' derivation='None' name='[none:city (location_dimension):nk]' pivot='key' type='nominal' />
            <column-instance column='[latitude]' derivation='None' name='[none:latitude:ok]' pivot='key' type='ordinal' />
            <column-instance column='[longitude]' derivation='None' name='[none:longitude:ok]' pivot='key' type='ordinal' />
            <column-instance column='[offense_category]' derivation='None' name='[none:offense_category:nk]' pivot='key' type='nominal' />
            <column datatype='string' name='[offense_category]' role='dimension' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0xxzh3n1ngww291cy2y771tzroj8].[Action (city (location_dimension))]'>
            <groupfilter function='member' level='[city (location_dimension)]' member='&quot;Denver&quot;' user:ui-action-filter='[Action2]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0xxzh3n1ngww291cy2y771tzroj8].[Action (is_fatal)]'>
            <groupfilter function='level-members' level='[is_fatal]' user:ui-action-filter='[Action4]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0xxzh3n1ngww291cy2y771tzroj8].[Action (is_nighttime)]'>
            <groupfilter function='level-members' level='[is_nighttime]' user:ui-action-filter='[Action5]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0xxzh3n1ngww291cy2y771tzroj8].[Action (is_traffic)]'>
            <groupfilter function='level-members' level='[is_traffic]' user:ui-action-filter='[Action3]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0xxzh3n1ngww291cy2y771tzroj8].[Action (latitude,longitude,offense_category)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:latitude:ok]' />
              <groupfilter function='level-members' level='[none:longitude:ok]' />
              <groupfilter function='level-members' level='[offense_category]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0xxzh3n1ngww291cy2y771tzroj8].[Action (offense_category)]'>
            <groupfilter function='member' level='[offense_category]' member='&quot;Robbery&quot;' user:ui-action-filter='[Action6]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:city (location_dimension):nk]'>
            <groupfilter function='level-members' level='[none:city (location_dimension):nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <computed-sort column='[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:offense_category:nk]' direction='DESC' using='[federated.0xxzh3n1ngww291cy2y771tzroj8].[sum:Number of Records:qk]' />
          <slices>
            <column>[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:city (location_dimension):nk]</column>
            <column>[federated.0xxzh3n1ngww291cy2y771tzroj8].[Action (latitude,longitude,offense_category)]</column>
            <column>[federated.0xxzh3n1ngww291cy2y771tzroj8].[Action (city (location_dimension))]</column>
            <column>[federated.0xxzh3n1ngww291cy2y771tzroj8].[Action (is_traffic)]</column>
            <column>[federated.0xxzh3n1ngww291cy2y771tzroj8].[Action (is_fatal)]</column>
            <column>[federated.0xxzh3n1ngww291cy2y771tzroj8].[Action (is_nighttime)]</column>
            <column>[federated.0xxzh3n1ngww291cy2y771tzroj8].[Action (offense_category)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0xxzh3n1ngww291cy2y771tzroj8].[sum:Number of Records:qk]' field-type='quantitative' max='132398' min='-692' range-type='fixed' scope='cols' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:offense_category:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:offense_category:nk]</rows>
        <cols>[federated.0xxzh3n1ngww291cy2y771tzroj8].[sum:Number of Records:qk]</cols>
      </table>
      <simple-id uuid='{3E7628C7-DD30-4203-A075-D5659A2B2727}' />
    </worksheet>
    <worksheet name='Crimes on Holidays'>
      <table>
        <view>
          <datasources>
            <datasource caption='CrimeDataMart' name='federated.0xxzh3n1ngww291cy2y771tzroj8' />
          </datasources>
          <datasource-dependencies datasource='federated.0xxzh3n1ngww291cy2y771tzroj8'>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column datatype='string' name='[can_holiday_name]' role='dimension' type='nominal' />
            <column datatype='string' name='[city (location_dimension)]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column-instance column='[is_fatal]' derivation='Count' name='[cnt:is_fatal:qk]' pivot='key' type='quantitative' />
            <column datatype='boolean' name='[is_can_holiday]' role='dimension' type='nominal' />
            <column datatype='boolean' name='[is_fatal]' role='dimension' type='nominal' />
            <column datatype='boolean' name='[is_nighttime]' role='dimension' type='nominal' />
            <column datatype='boolean' name='[is_traffic]' role='dimension' type='nominal' />
            <column-instance column='[can_holiday_name]' derivation='None' name='[none:can_holiday_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[is_can_holiday]' derivation='None' name='[none:is_can_holiday:nk]' pivot='key' type='nominal' />
            <column datatype='string' name='[offense_category]' role='dimension' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0xxzh3n1ngww291cy2y771tzroj8].[Action (city (location_dimension))]'>
            <groupfilter function='member' level='[city (location_dimension)]' member='&quot;Denver&quot;' user:ui-action-filter='[Action2]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0xxzh3n1ngww291cy2y771tzroj8].[Action (is_fatal)]'>
            <groupfilter function='level-members' level='[is_fatal]' user:ui-action-filter='[Action4]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0xxzh3n1ngww291cy2y771tzroj8].[Action (is_nighttime)]'>
            <groupfilter function='level-members' level='[is_nighttime]' user:ui-action-filter='[Action5]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0xxzh3n1ngww291cy2y771tzroj8].[Action (is_traffic)]'>
            <groupfilter function='level-members' level='[is_traffic]' user:ui-action-filter='[Action3]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0xxzh3n1ngww291cy2y771tzroj8].[Action (offense_category)]'>
            <groupfilter function='member' level='[offense_category]' member='&quot;Robbery&quot;' user:ui-action-filter='[Action6]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <computed-sort column='[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:can_holiday_name:nk]' direction='DESC' using='[federated.0xxzh3n1ngww291cy2y771tzroj8].[cnt:is_fatal:qk]' />
          <filter class='categorical' column='[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:is_can_holiday:nk]'>
            <groupfilter function='member' level='[none:is_can_holiday:nk]' member='true' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:is_can_holiday:nk]</column>
            <column>[federated.0xxzh3n1ngww291cy2y771tzroj8].[Action (is_nighttime)]</column>
            <column>[federated.0xxzh3n1ngww291cy2y771tzroj8].[Action (offense_category)]</column>
            <column>[federated.0xxzh3n1ngww291cy2y771tzroj8].[Action (city (location_dimension))]</column>
            <column>[federated.0xxzh3n1ngww291cy2y771tzroj8].[Action (is_fatal)]</column>
            <column>[federated.0xxzh3n1ngww291cy2y771tzroj8].[Action (is_traffic)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:can_holiday_name:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:can_holiday_name:nk]</rows>
        <cols>[federated.0xxzh3n1ngww291cy2y771tzroj8].[sum:Number of Records:qk]</cols>
      </table>
      <simple-id uuid='{204DA446-2719-44D6-9369-9746AF8D2E58}' />
    </worksheet>
    <worksheet name='Crimes per neighborhood'>
      <table>
        <view>
          <datasources>
            <datasource caption='CrimeDataMart' name='federated.0xxzh3n1ngww291cy2y771tzroj8' />
          </datasources>
          <datasource-dependencies datasource='federated.0xxzh3n1ngww291cy2y771tzroj8'>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column datatype='string' name='[city (location_dimension)]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column datatype='boolean' name='[is_fatal]' role='dimension' type='nominal' />
            <column datatype='boolean' name='[is_nighttime]' role='dimension' type='nominal' />
            <column datatype='boolean' name='[is_traffic]' role='dimension' type='nominal' />
            <column aggregation='Avg' datatype='real' name='[latitude]' role='dimension' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' datatype='real' name='[longitude]' role='dimension' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column datatype='string' name='[neighborhood]' role='dimension' type='nominal' />
            <column-instance column='[city (location_dimension)]' derivation='None' name='[none:city (location_dimension):nk]' pivot='key' type='nominal' />
            <column-instance column='[latitude]' derivation='None' name='[none:latitude:ok]' pivot='key' type='ordinal' />
            <column-instance column='[longitude]' derivation='None' name='[none:longitude:ok]' pivot='key' type='ordinal' />
            <column-instance column='[neighborhood]' derivation='None' name='[none:neighborhood:nk]' pivot='key' type='nominal' />
            <column datatype='string' name='[offense_category]' role='dimension' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0xxzh3n1ngww291cy2y771tzroj8].[Action (city (location_dimension))]'>
            <groupfilter function='member' level='[city (location_dimension)]' member='&quot;Denver&quot;' user:ui-action-filter='[Action2]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0xxzh3n1ngww291cy2y771tzroj8].[Action (is_fatal)]'>
            <groupfilter function='level-members' level='[is_fatal]' user:ui-action-filter='[Action4]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0xxzh3n1ngww291cy2y771tzroj8].[Action (is_nighttime)]'>
            <groupfilter function='level-members' level='[is_nighttime]' user:ui-action-filter='[Action5]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0xxzh3n1ngww291cy2y771tzroj8].[Action (is_traffic)]'>
            <groupfilter function='level-members' level='[is_traffic]' user:ui-action-filter='[Action3]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0xxzh3n1ngww291cy2y771tzroj8].[Action (latitude,longitude,offense_category)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:latitude:ok]' />
              <groupfilter function='level-members' level='[none:longitude:ok]' />
              <groupfilter function='level-members' level='[offense_category]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0xxzh3n1ngww291cy2y771tzroj8].[Action (offense_category)]'>
            <groupfilter function='member' level='[offense_category]' member='&quot;Robbery&quot;' user:ui-action-filter='[Action6]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:city (location_dimension):nk]'>
            <groupfilter function='level-members' level='[none:city (location_dimension):nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <computed-sort column='[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:neighborhood:nk]' direction='DESC' using='[federated.0xxzh3n1ngww291cy2y771tzroj8].[sum:Number of Records:qk]' />
          <slices>
            <column>[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:city (location_dimension):nk]</column>
            <column>[federated.0xxzh3n1ngww291cy2y771tzroj8].[Action (latitude,longitude,offense_category)]</column>
            <column>[federated.0xxzh3n1ngww291cy2y771tzroj8].[Action (city (location_dimension))]</column>
            <column>[federated.0xxzh3n1ngww291cy2y771tzroj8].[Action (is_traffic)]</column>
            <column>[federated.0xxzh3n1ngww291cy2y771tzroj8].[Action (is_fatal)]</column>
            <column>[federated.0xxzh3n1ngww291cy2y771tzroj8].[Action (is_nighttime)]</column>
            <column>[federated.0xxzh3n1ngww291cy2y771tzroj8].[Action (offense_category)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:neighborhood:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:neighborhood:nk]</rows>
        <cols>[federated.0xxzh3n1ngww291cy2y771tzroj8].[sum:Number of Records:qk]</cols>
      </table>
      <simple-id uuid='{32D25B72-63F2-43FE-BEEE-BCAF5EEC9A71}' />
    </worksheet>
    <worksheet name='Is_Fatal'>
      <table>
        <view>
          <datasources>
            <datasource caption='CrimeDataMart' name='federated.0xxzh3n1ngww291cy2y771tzroj8' />
          </datasources>
          <datasource-dependencies datasource='federated.0xxzh3n1ngww291cy2y771tzroj8'>
            <column datatype='string' name='[city (location_dimension)]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column datatype='boolean' name='[is_fatal]' role='dimension' type='nominal' />
            <column datatype='boolean' name='[is_nighttime]' role='dimension' type='nominal' />
            <column datatype='boolean' name='[is_traffic]' role='dimension' type='nominal' />
            <column-instance column='[is_fatal]' derivation='None' name='[none:is_fatal:nk]' pivot='key' type='nominal' />
            <column datatype='string' name='[offense_category]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0xxzh3n1ngww291cy2y771tzroj8].[Action (city (location_dimension))]'>
            <groupfilter function='member' level='[city (location_dimension)]' member='&quot;Denver&quot;' user:ui-action-filter='[Action2]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0xxzh3n1ngww291cy2y771tzroj8].[Action (is_nighttime)]'>
            <groupfilter function='level-members' level='[is_nighttime]' user:ui-action-filter='[Action5]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0xxzh3n1ngww291cy2y771tzroj8].[Action (is_traffic)]'>
            <groupfilter function='level-members' level='[is_traffic]' user:ui-action-filter='[Action3]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0xxzh3n1ngww291cy2y771tzroj8].[Action (offense_category)]'>
            <groupfilter function='member' level='[offense_category]' member='&quot;Robbery&quot;' user:ui-action-filter='[Action6]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:is_fatal:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:is_fatal:nk]' member='false' />
              <groupfilter function='member' level='[none:is_fatal:nk]' member='true' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:is_fatal:nk]</column>
            <column>[federated.0xxzh3n1ngww291cy2y771tzroj8].[Action (is_nighttime)]</column>
            <column>[federated.0xxzh3n1ngww291cy2y771tzroj8].[Action (offense_category)]</column>
            <column>[federated.0xxzh3n1ngww291cy2y771tzroj8].[Action (city (location_dimension))]</column>
            <column>[federated.0xxzh3n1ngww291cy2y771tzroj8].[Action (is_traffic)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:is_fatal:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:is_fatal:nk]</rows>
        <cols />
      </table>
      <simple-id uuid='{1DCD7FA9-FEFC-47BE-A4FA-FD3B1576A7D9}' />
    </worksheet>
    <worksheet name='Is_Nighttime'>
      <table>
        <view>
          <datasources>
            <datasource caption='CrimeDataMart' name='federated.0xxzh3n1ngww291cy2y771tzroj8' />
          </datasources>
          <datasource-dependencies datasource='federated.0xxzh3n1ngww291cy2y771tzroj8'>
            <column datatype='string' name='[city (location_dimension)]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column datatype='boolean' name='[is_fatal]' role='dimension' type='nominal' />
            <column datatype='boolean' name='[is_nighttime]' role='dimension' type='nominal' />
            <column datatype='boolean' name='[is_traffic]' role='dimension' type='nominal' />
            <column-instance column='[is_nighttime]' derivation='None' name='[none:is_nighttime:nk]' pivot='key' type='nominal' />
            <column datatype='string' name='[offense_category]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0xxzh3n1ngww291cy2y771tzroj8].[Action (city (location_dimension))]'>
            <groupfilter function='member' level='[city (location_dimension)]' member='&quot;Denver&quot;' user:ui-action-filter='[Action2]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0xxzh3n1ngww291cy2y771tzroj8].[Action (is_fatal)]'>
            <groupfilter function='level-members' level='[is_fatal]' user:ui-action-filter='[Action4]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0xxzh3n1ngww291cy2y771tzroj8].[Action (is_traffic)]'>
            <groupfilter function='level-members' level='[is_traffic]' user:ui-action-filter='[Action3]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0xxzh3n1ngww291cy2y771tzroj8].[Action (offense_category)]'>
            <groupfilter function='member' level='[offense_category]' member='&quot;Robbery&quot;' user:ui-action-filter='[Action6]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:is_nighttime:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:is_nighttime:nk]' member='false' />
              <groupfilter function='member' level='[none:is_nighttime:nk]' member='true' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:is_nighttime:nk]</column>
            <column>[federated.0xxzh3n1ngww291cy2y771tzroj8].[Action (is_fatal)]</column>
            <column>[federated.0xxzh3n1ngww291cy2y771tzroj8].[Action (offense_category)]</column>
            <column>[federated.0xxzh3n1ngww291cy2y771tzroj8].[Action (city (location_dimension))]</column>
            <column>[federated.0xxzh3n1ngww291cy2y771tzroj8].[Action (is_traffic)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:is_nighttime:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:is_nighttime:nk]</rows>
        <cols />
      </table>
      <simple-id uuid='{0D4F6640-B5FE-46A5-B3E8-5BFCE606B1CD}' />
    </worksheet>
    <worksheet name='Is_Traffic'>
      <table>
        <view>
          <datasources>
            <datasource caption='CrimeDataMart' name='federated.0xxzh3n1ngww291cy2y771tzroj8' />
          </datasources>
          <datasource-dependencies datasource='federated.0xxzh3n1ngww291cy2y771tzroj8'>
            <column datatype='string' name='[city (location_dimension)]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column datatype='boolean' name='[is_fatal]' role='dimension' type='nominal' />
            <column datatype='boolean' name='[is_nighttime]' role='dimension' type='nominal' />
            <column datatype='boolean' name='[is_traffic]' role='dimension' type='nominal' />
            <column-instance column='[is_traffic]' derivation='None' name='[none:is_traffic:nk]' pivot='key' type='nominal' />
            <column datatype='string' name='[offense_category]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0xxzh3n1ngww291cy2y771tzroj8].[Action (city (location_dimension))]'>
            <groupfilter function='member' level='[city (location_dimension)]' member='&quot;Denver&quot;' user:ui-action-filter='[Action2]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0xxzh3n1ngww291cy2y771tzroj8].[Action (is_fatal)]'>
            <groupfilter function='level-members' level='[is_fatal]' user:ui-action-filter='[Action4]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0xxzh3n1ngww291cy2y771tzroj8].[Action (is_nighttime)]'>
            <groupfilter function='level-members' level='[is_nighttime]' user:ui-action-filter='[Action5]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0xxzh3n1ngww291cy2y771tzroj8].[Action (offense_category)]'>
            <groupfilter function='member' level='[offense_category]' member='&quot;Robbery&quot;' user:ui-action-filter='[Action6]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:is_traffic:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:is_traffic:nk]' member='false' />
              <groupfilter function='member' level='[none:is_traffic:nk]' member='true' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:is_traffic:nk]</column>
            <column>[federated.0xxzh3n1ngww291cy2y771tzroj8].[Action (is_fatal)]</column>
            <column>[federated.0xxzh3n1ngww291cy2y771tzroj8].[Action (is_nighttime)]</column>
            <column>[federated.0xxzh3n1ngww291cy2y771tzroj8].[Action (offense_category)]</column>
            <column>[federated.0xxzh3n1ngww291cy2y771tzroj8].[Action (city (location_dimension))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' field='[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:is_traffic:nk]' value='19' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:is_traffic:nk]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:is_traffic:nk]</rows>
        <cols />
      </table>
      <simple-id uuid='{544A02FA-E9BC-447C-8A9C-2FBA43629CBA}' />
    </worksheet>
    <worksheet name='Map'>
      <table>
        <view>
          <datasources>
            <datasource caption='CrimeDataMart' name='federated.0xxzh3n1ngww291cy2y771tzroj8' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0xxzh3n1ngww291cy2y771tzroj8'>
            <column datatype='string' name='[city (location_dimension)]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column datatype='boolean' name='[is_fatal]' role='dimension' type='nominal' />
            <column datatype='boolean' name='[is_nighttime]' role='dimension' type='nominal' />
            <column datatype='boolean' name='[is_traffic]' role='dimension' type='nominal' />
            <column aggregation='Avg' datatype='real' name='[latitude]' role='dimension' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' datatype='real' name='[longitude]' role='dimension' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column-instance column='[city (location_dimension)]' derivation='None' name='[none:city (location_dimension):nk]' pivot='key' type='nominal' />
            <column-instance column='[latitude]' derivation='None' name='[none:latitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[longitude]' derivation='None' name='[none:longitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[offense_category]' derivation='None' name='[none:offense_category:nk]' pivot='key' type='nominal' />
            <column datatype='string' name='[offense_category]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0xxzh3n1ngww291cy2y771tzroj8].[Action (city (location_dimension))]'>
            <groupfilter function='member' level='[city (location_dimension)]' member='&quot;Denver&quot;' user:ui-action-filter='[Action2]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0xxzh3n1ngww291cy2y771tzroj8].[Action (is_fatal)]'>
            <groupfilter function='level-members' level='[is_fatal]' user:ui-action-filter='[Action4]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0xxzh3n1ngww291cy2y771tzroj8].[Action (is_nighttime)]'>
            <groupfilter function='level-members' level='[is_nighttime]' user:ui-action-filter='[Action5]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0xxzh3n1ngww291cy2y771tzroj8].[Action (is_traffic)]'>
            <groupfilter function='level-members' level='[is_traffic]' user:ui-action-filter='[Action3]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0xxzh3n1ngww291cy2y771tzroj8].[Action (offense_category)]'>
            <groupfilter function='member' level='[offense_category]' member='&quot;Robbery&quot;' user:ui-action-filter='[Action6]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:city (location_dimension):nk]'>
            <groupfilter function='level-members' level='[none:city (location_dimension):nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <manual-sort column='[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:offense_category:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Aggravated Assault&quot;</bucket>
              <bucket>&quot;All Other Crimes&quot;</bucket>
              <bucket>&quot;Arson&quot;</bucket>
              <bucket>&quot;Auto Theft&quot;</bucket>
              <bucket>&quot;Burglary&quot;</bucket>
              <bucket>&quot;Drug &amp; Alcohol&quot;</bucket>
              <bucket>&quot;Larceny&quot;</bucket>
              <bucket>&quot;Murder&quot;</bucket>
              <bucket>&quot;Other Crimes Against Persons&quot;</bucket>
              <bucket>&quot;Public Disorder&quot;</bucket>
              <bucket>&quot;Robbery&quot;</bucket>
              <bucket>&quot;Sexual Assault&quot;</bucket>
              <bucket>&quot;Theft from Motor Vehicle&quot;</bucket>
              <bucket>&quot;Traffic Accident&quot;</bucket>
              <bucket>&quot;White Collar Crime&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:city (location_dimension):nk]</column>
            <column>[federated.0xxzh3n1ngww291cy2y771tzroj8].[Action (city (location_dimension))]</column>
            <column>[federated.0xxzh3n1ngww291cy2y771tzroj8].[Action (is_traffic)]</column>
            <column>[federated.0xxzh3n1ngww291cy2y771tzroj8].[Action (is_fatal)]</column>
            <column>[federated.0xxzh3n1ngww291cy2y771tzroj8].[Action (is_nighttime)]</column>
            <column>[federated.0xxzh3n1ngww291cy2y771tzroj8].[Action (offense_category)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:latitude:qk]' field-type='quantitative' max='4860735.3994003441' min='4797992.6925746165' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
            <encoding attr='space' class='0' field='[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:longitude:qk]' field-type='quantitative' max='-11620328.759696815' min='-11734959.955107458' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='normal' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:offense_category:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:latitude:qk]</rows>
        <cols>[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:longitude:qk]</cols>
      </table>
      <simple-id uuid='{A252DBE5-8657-48C1-B611-34C80CF751DE}' />
    </worksheet>
    <worksheet name='Offense categories time series'>
      <table>
        <view>
          <datasources>
            <datasource caption='CrimeDataMart' name='federated.0xxzh3n1ngww291cy2y771tzroj8' />
          </datasources>
          <datasource-dependencies datasource='federated.0xxzh3n1ngww291cy2y771tzroj8'>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column datatype='string' name='[city (location_dimension)]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column datatype='date' name='[full_date]' role='dimension' type='ordinal' />
            <column datatype='boolean' name='[is_fatal]' role='dimension' type='nominal' />
            <column datatype='boolean' name='[is_nighttime]' role='dimension' type='nominal' />
            <column datatype='boolean' name='[is_traffic]' role='dimension' type='nominal' />
            <column aggregation='Avg' datatype='real' name='[latitude]' role='dimension' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' datatype='real' name='[longitude]' role='dimension' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column-instance column='[city (location_dimension)]' derivation='None' name='[none:city (location_dimension):nk]' pivot='key' type='nominal' />
            <column-instance column='[latitude]' derivation='None' name='[none:latitude:ok]' pivot='key' type='ordinal' />
            <column-instance column='[longitude]' derivation='None' name='[none:longitude:ok]' pivot='key' type='ordinal' />
            <column-instance column='[offense_category]' derivation='None' name='[none:offense_category:nk]' pivot='key' type='nominal' />
            <column datatype='string' name='[offense_category]' role='dimension' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
            <column-instance column='[full_date]' derivation='Week-Trunc' name='[twk:full_date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0xxzh3n1ngww291cy2y771tzroj8].[Action (city (location_dimension))]'>
            <groupfilter function='member' level='[city (location_dimension)]' member='&quot;Denver&quot;' user:ui-action-filter='[Action2]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0xxzh3n1ngww291cy2y771tzroj8].[Action (is_fatal)]'>
            <groupfilter function='level-members' level='[is_fatal]' user:ui-action-filter='[Action4]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0xxzh3n1ngww291cy2y771tzroj8].[Action (is_nighttime)]'>
            <groupfilter function='level-members' level='[is_nighttime]' user:ui-action-filter='[Action5]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0xxzh3n1ngww291cy2y771tzroj8].[Action (is_traffic)]'>
            <groupfilter function='level-members' level='[is_traffic]' user:ui-action-filter='[Action3]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0xxzh3n1ngww291cy2y771tzroj8].[Action (latitude,longitude,offense_category)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:latitude:ok]' />
              <groupfilter function='level-members' level='[none:longitude:ok]' />
              <groupfilter function='level-members' level='[offense_category]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0xxzh3n1ngww291cy2y771tzroj8].[Action (offense_category)]'>
            <groupfilter function='member' level='[offense_category]' member='&quot;Robbery&quot;' user:ui-action-filter='[Action6]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:city (location_dimension):nk]'>
            <groupfilter function='level-members' level='[none:city (location_dimension):nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.0xxzh3n1ngww291cy2y771tzroj8].[twk:full_date:qk]' included-values='in-range'>
            <min>#2014-12-28 00:00:00#</min>
            <max>#2020-02-23 00:00:00#</max>
          </filter>
          <slices>
            <column>[federated.0xxzh3n1ngww291cy2y771tzroj8].[twk:full_date:qk]</column>
            <column>[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:city (location_dimension):nk]</column>
            <column>[federated.0xxzh3n1ngww291cy2y771tzroj8].[Action (latitude,longitude,offense_category)]</column>
            <column>[federated.0xxzh3n1ngww291cy2y771tzroj8].[Action (city (location_dimension))]</column>
            <column>[federated.0xxzh3n1ngww291cy2y771tzroj8].[Action (is_traffic)]</column>
            <column>[federated.0xxzh3n1ngww291cy2y771tzroj8].[Action (is_fatal)]</column>
            <column>[federated.0xxzh3n1ngww291cy2y771tzroj8].[Action (is_nighttime)]</column>
            <column>[federated.0xxzh3n1ngww291cy2y771tzroj8].[Action (offense_category)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:offense_category:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0xxzh3n1ngww291cy2y771tzroj8].[sum:Number of Records:qk]</rows>
        <cols>[federated.0xxzh3n1ngww291cy2y771tzroj8].[twk:full_date:qk]</cols>
      </table>
      <simple-id uuid='{5074A906-D309-4C3A-B88D-53423878871F}' />
    </worksheet>
    <worksheet name='Offense category'>
      <table>
        <view>
          <datasources>
            <datasource caption='CrimeDataMart' name='federated.0xxzh3n1ngww291cy2y771tzroj8' />
          </datasources>
          <datasource-dependencies datasource='federated.0xxzh3n1ngww291cy2y771tzroj8'>
            <column datatype='string' name='[city (location_dimension)]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column datatype='boolean' name='[is_fatal]' role='dimension' type='nominal' />
            <column datatype='boolean' name='[is_nighttime]' role='dimension' type='nominal' />
            <column datatype='boolean' name='[is_traffic]' role='dimension' type='nominal' />
            <column-instance column='[offense_category]' derivation='None' name='[none:offense_category:nk]' pivot='key' type='nominal' />
            <column datatype='string' name='[offense_category]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0xxzh3n1ngww291cy2y771tzroj8].[Action (city (location_dimension))]'>
            <groupfilter function='member' level='[city (location_dimension)]' member='&quot;Denver&quot;' user:ui-action-filter='[Action2]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0xxzh3n1ngww291cy2y771tzroj8].[Action (is_fatal)]'>
            <groupfilter function='level-members' level='[is_fatal]' user:ui-action-filter='[Action4]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0xxzh3n1ngww291cy2y771tzroj8].[Action (is_nighttime)]'>
            <groupfilter function='level-members' level='[is_nighttime]' user:ui-action-filter='[Action5]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0xxzh3n1ngww291cy2y771tzroj8].[Action (is_traffic)]'>
            <groupfilter function='level-members' level='[is_traffic]' user:ui-action-filter='[Action3]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:offense_category:nk]'>
            <groupfilter from='&quot;Aggravated Assault&quot;' function='range' level='[none:offense_category:nk]' to='&quot;White Collar Crime&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:offense_category:nk]</column>
            <column>[federated.0xxzh3n1ngww291cy2y771tzroj8].[Action (city (location_dimension))]</column>
            <column>[federated.0xxzh3n1ngww291cy2y771tzroj8].[Action (is_fatal)]</column>
            <column>[federated.0xxzh3n1ngww291cy2y771tzroj8].[Action (is_traffic)]</column>
            <column>[federated.0xxzh3n1ngww291cy2y771tzroj8].[Action (is_nighttime)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:offense_category:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:offense_category:nk]</rows>
        <cols />
      </table>
      <simple-id uuid='{B4151C2D-0FFB-4772-AE30-8754B0DC010C}' />
    </worksheet>
    <worksheet name='Overtime'>
      <table>
        <view>
          <datasources>
            <datasource caption='CrimeDataMart' name='federated.0xxzh3n1ngww291cy2y771tzroj8' />
          </datasources>
          <datasource-dependencies datasource='federated.0xxzh3n1ngww291cy2y771tzroj8'>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column datatype='string' name='[city (location_dimension)]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column datatype='date' name='[full_date]' role='dimension' type='ordinal' />
            <column datatype='boolean' name='[is_fatal]' role='dimension' type='nominal' />
            <column datatype='boolean' name='[is_nighttime]' role='dimension' type='nominal' />
            <column datatype='boolean' name='[is_traffic]' role='dimension' type='nominal' />
            <column aggregation='Avg' datatype='real' name='[latitude]' role='dimension' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' datatype='real' name='[longitude]' role='dimension' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column-instance column='[city (location_dimension)]' derivation='None' name='[none:city (location_dimension):nk]' pivot='key' type='nominal' />
            <column-instance column='[full_date]' derivation='None' name='[none:full_date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[latitude]' derivation='None' name='[none:latitude:ok]' pivot='key' type='ordinal' />
            <column-instance column='[longitude]' derivation='None' name='[none:longitude:ok]' pivot='key' type='ordinal' />
            <column datatype='string' name='[offense_category]' role='dimension' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
            <column-instance column='[full_date]' derivation='Day-Trunc' name='[tdy:full_date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0xxzh3n1ngww291cy2y771tzroj8].[Action (city (location_dimension))]'>
            <groupfilter function='level-members' level='[city (location_dimension)]' user:ui-action-filter='[Action2]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0xxzh3n1ngww291cy2y771tzroj8].[Action (is_fatal)]'>
            <groupfilter function='level-members' level='[is_fatal]' user:ui-action-filter='[Action4]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0xxzh3n1ngww291cy2y771tzroj8].[Action (is_nighttime)]'>
            <groupfilter function='member' level='[is_nighttime]' member='true' user:ui-action-filter='[Action5]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0xxzh3n1ngww291cy2y771tzroj8].[Action (is_traffic)]'>
            <groupfilter function='level-members' level='[is_traffic]' user:ui-action-filter='[Action3]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0xxzh3n1ngww291cy2y771tzroj8].[Action (latitude,longitude,offense_category)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:latitude:ok]' />
              <groupfilter function='level-members' level='[none:longitude:ok]' />
              <groupfilter function='level-members' level='[offense_category]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:city (location_dimension):nk]'>
            <groupfilter function='level-members' level='[none:city (location_dimension):nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:full_date:qk]' included-values='in-range'>
            <min>#2015-01-02#</min>
            <max>#2020-01-28#</max>
          </filter>
          <filter class='quantitative' column='[federated.0xxzh3n1ngww291cy2y771tzroj8].[tdy:full_date:qk]' included-values='in-range-or-null'>
            <min>#2015-01-02 00:00:00#</min>
            <max>#2020-02-28 00:00:00#</max>
          </filter>
          <slices>
            <column>[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:city (location_dimension):nk]</column>
            <column>[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:full_date:qk]</column>
            <column>[federated.0xxzh3n1ngww291cy2y771tzroj8].[tdy:full_date:qk]</column>
            <column>[federated.0xxzh3n1ngww291cy2y771tzroj8].[Action (latitude,longitude,offense_category)]</column>
            <column>[federated.0xxzh3n1ngww291cy2y771tzroj8].[Action (city (location_dimension))]</column>
            <column>[federated.0xxzh3n1ngww291cy2y771tzroj8].[Action (is_traffic)]</column>
            <column>[federated.0xxzh3n1ngww291cy2y771tzroj8].[Action (is_fatal)]</column>
            <column>[federated.0xxzh3n1ngww291cy2y771tzroj8].[Action (is_nighttime)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.0xxzh3n1ngww291cy2y771tzroj8].[sum:Number of Records:qk]</rows>
        <cols>[federated.0xxzh3n1ngww291cy2y771tzroj8].[tdy:full_date:qk]</cols>
      </table>
      <simple-id uuid='{8D83A1D8-6B04-4414-B4CC-7C0F49A2550E}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='CrimeDataMart Overview'>
      <layout-options>
        <title>
          <formatted-text>
            <run>CrimeDataMart Overview&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <style />
      <size maxheight='1080' maxwidth='1900' minheight='1080' minwidth='1900' preset-index='17' sizing-mode='fixed' />
      <datasources>
        <datasource caption='CrimeDataMart' name='federated.0xxzh3n1ngww291cy2y771tzroj8' />
      </datasources>
      <datasource-dependencies datasource='federated.0xxzh3n1ngww291cy2y771tzroj8'>
        <column datatype='date' name='[full_date]' role='dimension' type='ordinal' />
        <column-instance column='[full_date]' derivation='Week-Trunc' name='[twk:full_date:qk]' pivot='key' type='quantitative' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98518' id='109' param='horz' type='layout-flow' w='99158' x='421' y='741'>
            <zone h='98518' id='85' param='horz' type='layout-flow' w='99158' x='421' y='741'>
              <zone h='98518' id='51' param='horz' type='layout-flow' w='99158' x='421' y='741'>
                <zone h='98518' id='49' param='vert' type='layout-flow' w='99158' x='421' y='741'>
                  <zone h='3889' id='45' type='title' w='99158' x='421' y='741'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='94629' id='15' param='vert' type='layout-flow' w='99158' x='421' y='4630'>
                    <zone h='94629' id='13' param='vert' type='layout-flow' w='99158' x='421' y='4630'>
                      <zone h='94629' id='7' param='horz' type='layout-flow' w='99158' x='421' y='4630'>
                        <zone h='94629' id='5' param='horz' type='layout-flow' w='53684' x='421' y='4630'>
                          <zone h='94629' id='3' type='layout-basic' w='53684' x='421' y='4630'>
                            <zone h='48237' id='1' name='Map' w='45316' x='421' y='4630'>
                              <zone-style>
                                <format attr='border-color' value='#000000' />
                                <format attr='border-style' value='none' />
                                <format attr='border-width' value='0' />
                                <format attr='margin' value='4' />
                              </zone-style>
                            </zone>
                            <zone h='6389' id='62' name='City' show-title='false' w='8368' x='45737' y='4630'>
                              <zone-style>
                                <format attr='border-color' value='#000000' />
                                <format attr='border-style' value='none' />
                                <format attr='border-width' value='0' />
                                <format attr='margin' value='4' />
                              </zone-style>
                            </zone>
                            <zone h='7960' id='74' name='Is_Traffic' show-title='false' w='8368' x='45737' y='44907'>
                              <zone-style>
                                <format attr='border-color' value='#000000' />
                                <format attr='border-style' value='none' />
                                <format attr='border-width' value='0' />
                                <format attr='margin' value='4' />
                              </zone-style>
                            </zone>
                            <zone h='7315' id='76' name='Is_Fatal' show-title='false' w='8368' x='45737' y='30183'>
                              <zone-style>
                                <format attr='border-color' value='#000000' />
                                <format attr='border-style' value='none' />
                                <format attr='border-width' value='0' />
                                <format attr='margin' value='4' />
                              </zone-style>
                            </zone>
                            <zone h='7409' id='80' name='Is_Nighttime' show-title='false' w='8368' x='45737' y='37498'>
                              <zone-style>
                                <format attr='border-color' value='#000000' />
                                <format attr='border-style' value='none' />
                                <format attr='border-width' value='0' />
                                <format attr='margin' value='4' />
                              </zone-style>
                            </zone>
                            <zone h='41668' id='30' name='Offense categories time series' w='53684' x='421' y='57591'>
                              <layout-cache minheight='198' minwidth='159' type-h='scalable' type-w='scalable' />
                              <zone-style>
                                <format attr='border-color' value='#000000' />
                                <format attr='border-style' value='none' />
                                <format attr='border-width' value='0' />
                                <format attr='margin' value='4' />
                              </zone-style>
                            </zone>
                            <zone h='4724' id='52' name='Offense categories time series' param='[federated.0xxzh3n1ngww291cy2y771tzroj8].[twk:full_date:qk]' type='filter' values='database' w='53684' x='421' y='52867'>
                              <zone-style>
                                <format attr='border-color' value='#000000' />
                                <format attr='border-style' value='none' />
                                <format attr='border-width' value='0' />
                                <format attr='margin' value='4' />
                              </zone-style>
                            </zone>
                            <zone h='19164' id='107' name='Offense category' show-title='false' w='8368' x='45737' y='11019'>
                              <zone-style>
                                <format attr='border-color' value='#000000' />
                                <format attr='border-style' value='none' />
                                <format attr='border-width' value='0' />
                                <format attr='margin' value='4' />
                              </zone-style>
                            </zone>
                          </zone>
                        </zone>
                        <zone fixed-size='864' h='94629' id='46' is-fixed='true' type='layout-basic' w='45474' x='54105' y='4630'>
                          <zone h='94629' id='89' type='layout-basic' w='45474' x='54105' y='4630'>
                            <zone h='94629' id='93' type='layout-basic' w='45474' x='54105' y='4630'>
                              <zone h='32685' id='90' param='vert' type='layout-flow' w='45474' x='54105' y='4630'>
                                <zone h='13519' id='91' name='Crimes by category' w='45474' x='54105' y='4630'>
                                  <layout-cache fixed-size-h='138' type-h='fixed' type-w='fixed' />
                                  <zone-style>
                                    <format attr='border-color' value='#000000' />
                                    <format attr='border-style' value='none' />
                                    <format attr='border-width' value='0' />
                                    <format attr='margin' value='4' />
                                  </zone-style>
                                </zone>
                              </zone>
                              <zone h='61944' id='94' param='vert' type='layout-flow' w='45474' x='54105' y='37315'>
                                <zone fixed-size='344' h='32593' id='39' is-fixed='true' name='Crimes per neighborhood' w='45474' x='54105' y='37315'>
                                  <layout-cache minwidth='260' type-h='fixed' type-w='scalable' />
                                  <zone-style>
                                    <format attr='border-color' value='#000000' />
                                    <format attr='border-style' value='none' />
                                    <format attr='border-width' value='0' />
                                    <format attr='margin' value='4' />
                                  </zone-style>
                                </zone>
                                <zone h='29351' id='83' name='Crimes on Holidays' w='45474' x='54105' y='69908'>
                                  <layout-cache fixed-size-h='378' type-h='fixed' type-w='fixed' />
                                  <zone-style>
                                    <format attr='border-color' value='#000000' />
                                    <format attr='border-style' value='none' />
                                    <format attr='border-width' value='0' />
                                    <format attr='margin' value='4' />
                                  </zone-style>
                                </zone>
                              </zone>
                            </zone>
                          </zone>
                        </zone>
                      </zone>
                    </zone>
                  </zone>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout name='Desktop'>
          <layout-options>
            <title>
              <formatted-text>
                <run>Denver Crime Overview&#10;</run>
              </formatted-text>
            </title>
          </layout-options>
          <size sizing-mode='automatic' />
          <zones>
            <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
              <zone h='98518' id='44' param='vert' type='layout-flow' w='99166' x='417' y='741'>
                <zone h='3889' id='45' type='title' w='99166' x='417' y='741'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='94629' id='15' param='vert' type='layout-flow' w='99166' x='417' y='4630'>
                  <zone h='94629' id='13' param='vert' type='layout-flow' w='99166' x='417' y='4630'>
                    <zone h='94629' id='7' param='horz' type='layout-flow' w='99166' x='417' y='4630'>
                      <zone h='94629' id='5' param='horz' type='layout-flow' w='53437' x='417' y='4630'>
                        <zone h='94629' id='3' type='layout-basic' w='53437' x='417' y='4630'>
                          <zone h='94629' id='1' name='Map' show-title='false' w='53437' x='417' y='4630'>
                            <zone-style>
                              <format attr='border-color' value='#000000' />
                              <format attr='border-style' value='none' />
                              <format attr='border-width' value='0' />
                              <format attr='margin' value='4' />
                            </zone-style>
                          </zone>
                        </zone>
                      </zone>
                      <zone fixed-size='878' h='94629' id='33' is-fixed='true' type='layout-basic' w='45729' x='53854' y='4630'>
                        <zone h='53983' id='6' param='vert' type='layout-flow' w='45729' x='53854' y='4630'>
                          <zone h='27131' id='39' name='Crimes per neighborhood' show-title='false' w='45729' x='53854' y='31482'>
                            <layout-cache fixed-size-h='1635' type-h='fixed' type-w='fixed' />
                            <zone-style>
                              <format attr='border-color' value='#000000' />
                              <format attr='border-style' value='none' />
                              <format attr='border-width' value='0' />
                              <format attr='margin' value='4' />
                            </zone-style>
                          </zone>
                        </zone>
                        <zone h='40646' id='34' param='vert' type='layout-flow' w='45729' x='53854' y='58613'>
                          <zone h='40646' id='30' name='Offense categories time series' show-title='false' w='45729' x='53854' y='58613'>
                            <layout-cache minheight='155' minwidth='159' type-h='scalable' type-w='scalable' />
                            <zone-style>
                              <format attr='border-color' value='#000000' />
                              <format attr='border-style' value='none' />
                              <format attr='border-width' value='0' />
                              <format attr='margin' value='4' />
                            </zone-style>
                          </zone>
                        </zone>
                      </zone>
                    </zone>
                  </zone>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
        <devicelayout auto-generated='true' name='Phone'>
          <layout-options>
            <title>
              <formatted-text>
                <run>CrimeDataMart Overview&#10;</run>
              </formatted-text>
            </title>
          </layout-options>
          <size maxheight='2000' minheight='2000' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='135' type='layout-basic' w='100000' x='0' y='0'>
              <zone h='98518' id='134' param='vert' type='layout-flow' w='99158' x='421' y='741'>
                <zone h='3889' id='45' type='title' w='99158' x='421' y='741'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='48237' id='1' is-fixed='true' name='Map' w='45316' x='421' y='4630'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='61' h='6389' id='62' is-fixed='true' name='City' show-title='false' w='8368' x='45737' y='4630'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='138' h='13519' id='91' is-fixed='true' name='Crimes by category' w='45474' x='54105' y='4630'>
                  <layout-cache fixed-size-h='138' type-h='fixed' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='199' h='19164' id='107' is-fixed='true' name='Offense category' show-title='false' w='8368' x='45737' y='11019'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='71' h='7315' id='76' is-fixed='true' name='Is_Fatal' show-title='false' w='8368' x='45737' y='30183'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='32593' id='39' is-fixed='true' name='Crimes per neighborhood' w='45474' x='54105' y='37315'>
                  <layout-cache minwidth='260' type-h='fixed' type-w='scalable' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='72' h='7409' id='80' is-fixed='true' name='Is_Nighttime' show-title='false' w='8368' x='45737' y='37498'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='78' h='7960' id='74' is-fixed='true' name='Is_Traffic' show-title='false' w='8368' x='45737' y='44907'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='4724' id='52' name='Offense categories time series' param='[federated.0xxzh3n1ngww291cy2y771tzroj8].[twk:full_date:qk]' type='filter' values='database' w='53684' x='421' y='52867'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='41668' id='30' is-fixed='true' name='Offense categories time series' w='53684' x='421' y='57591'>
                  <layout-cache minheight='198' minwidth='159' type-h='scalable' type-w='scalable' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='29351' id='83' is-fixed='true' name='Crimes on Holidays' w='45474' x='54105' y='69908'>
                  <layout-cache fixed-size-h='378' type-h='fixed' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{F1501353-9D3C-4F88-A867-C5C41C983E7B}' />
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='worksheet' name='Map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:offense_category:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:city (event_dimension):nk]</field>
            <field>[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:city (location_dimension):nk]</field>
            <field>[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:latitude:qk]</field>
            <field>[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:longitude:qk]</field>
            <field>[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:offense_category:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{05ECBAB6-2950-44A6-9163-19A7C980168E}' />
    </window>
    <window class='worksheet' name='Crimes by category'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:city (location_dimension):nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:offense_category:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:city (location_dimension):nk]</field>
            <field>[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:offense_category:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{9690DF88-A0D4-4343-A648-8F184080491F}' />
    </window>
    <window class='worksheet' name='Overtime'>
      <cards>
        <edge name='left'>
          <strip size='159'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:Calculation_1005991600499748864:qk]</field>
            <field>[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:city (location_dimension):nk]</field>
            <field>[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:day:qk]</field>
            <field>[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:day_of_year:qk]</field>
            <field>[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:full_date:qk]</field>
            <field>[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:month:qk]</field>
            <field>[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:year:qk]</field>
            <field>[federated.0xxzh3n1ngww291cy2y771tzroj8].[tdy:full_date:qk]</field>
            <field>[federated.0xxzh3n1ngww291cy2y771tzroj8].[yr:full_date:ok]</field>
          </color-one-way>
        </highlight>
        <floating-toolbar-visibility value='1' />
      </viewpoint>
      <simple-id uuid='{623231FB-7818-4FE2-B55F-A5B8824ED7DD}' />
    </window>
    <window class='worksheet' name='Offense categories time series'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0xxzh3n1ngww291cy2y771tzroj8].[twk:full_date:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card pane-specification-id='1' param='[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:offense_category:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:city (location_dimension):nk]</field>
            <field>[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:day_of_year:qk]</field>
            <field>[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:full_date:qk]</field>
            <field>[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:month:qk]</field>
            <field>[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:offense_category:nk]</field>
            <field>[federated.0xxzh3n1ngww291cy2y771tzroj8].[yr:full_date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{B63C2FA1-64F1-483E-8347-9B88858645C5}' />
    </window>
    <window class='worksheet' name='Crimes per neighborhood'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:neighborhood:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:city (location_dimension):nk]</field>
            <field>[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:neighborhood:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{A3177803-A571-43B2-8D4B-A7AF0844B6DE}' />
    </window>
    <window class='worksheet' name='City'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:city (location_dimension):nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:city (location_dimension):nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{12504382-7DE1-46CF-A662-0246C11C15CC}' />
    </window>
    <window class='worksheet' name='Is_Traffic'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:is_traffic:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:is_traffic:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{5E3683AD-0557-4C3C-951D-63E864D51170}' />
    </window>
    <window class='worksheet' name='Is_Fatal'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:is_fatal:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:is_fatal:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{65D91A59-EB45-43A3-A745-A2B9D9F36160}' />
    </window>
    <window class='worksheet' name='Is_Nighttime'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:is_nighttime:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:is_nighttime:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{429A6254-5F26-4D74-A1A5-5B52075D31A5}' />
    </window>
    <window class='worksheet' name='Crimes on Holidays'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:can_holiday_name:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0xxzh3n1ngww291cy2y771tzroj8].[:Measure Names]</field>
            <field>[federated.0xxzh3n1ngww291cy2y771tzroj8].[dy:full_date:ok]</field>
            <field>[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:Calculation_162411095359971329:qk]</field>
            <field>[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:Calculation_162411095361007620:qk]</field>
            <field>[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:Calculation_162411095361286150:qk]</field>
            <field>[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:can_holiday_name:nk]</field>
            <field>[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:is_can_holiday:nk]</field>
            <field>[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:is_fatal:nk]</field>
            <field>[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:offense_category:nk]</field>
            <field>[federated.0xxzh3n1ngww291cy2y771tzroj8].[yr:full_date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{8A211152-C9E2-4F18-93E8-800E7CE60864}' />
    </window>
    <window class='worksheet' name='Offense category'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:offense_category:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:offense_category:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{E7336F0E-53E3-4D34-90CC-AA3CD8FE6FEC}' />
    </window>
    <window class='dashboard' maximized='true' name='CrimeDataMart Overview'>
      <viewpoints>
        <viewpoint name='City'>
          <selection-collection>
            <tuple-selection>
              <tuple-reference>
                <tuple-descriptor>
                  <pane-descriptor>
                    <x-fields />
                    <y-fields>
                      <field>[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:city (location_dimension):nk]</field>
                    </y-fields>
                  </pane-descriptor>
                  <columns>
                    <field>[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:city (location_dimension):nk]</field>
                  </columns>
                </tuple-descriptor>
                <tuple>
                  <value>&quot;Denver&quot;</value>
                </tuple>
              </tuple-reference>
            </tuple-selection>
          </selection-collection>
        </viewpoint>
        <viewpoint name='Crimes by category' />
        <viewpoint name='Crimes on Holidays'>
          <highlight field='[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:can_holiday_name:nk]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='Crimes per neighborhood' />
        <viewpoint name='Is_Fatal' />
        <viewpoint name='Is_Nighttime' />
        <viewpoint name='Is_Traffic' />
        <viewpoint name='Map'>
          <zoom type='entire-view' />
          <highlight field='[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:offense_category:nk]'>
            <bucket-selection />
          </highlight>
          <default-map-tool-selection tool='16' />
        </viewpoint>
        <viewpoint name='Offense categories time series'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Offense category'>
          <selection-collection>
            <tuple-selection>
              <tuple-reference>
                <tuple-descriptor>
                  <pane-descriptor>
                    <x-fields />
                    <y-fields>
                      <field>[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:offense_category:nk]</field>
                    </y-fields>
                  </pane-descriptor>
                  <columns>
                    <field>[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:offense_category:nk]</field>
                  </columns>
                </tuple-descriptor>
                <tuple>
                  <value>&quot;Robbery&quot;</value>
                </tuple>
              </tuple-reference>
            </tuple-selection>
          </selection-collection>
          <highlight field='[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:offense_category:nk]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='90' />
      <simple-id uuid='{5C279BC6-8A12-403F-95A8-FD3F37CE9D22}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='64' name='City' width='144'>
      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
    </thumbnail>
    <thumbnail height='192' name='CrimeDataMart Overview' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Crimes by category' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Crimes on Holidays' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Crimes per neighborhood' width='192'>
      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
    </thumbnail>
    <thumbnail height='44' name='Is_Fatal' width='144'>
      iVBORw0KGgoAAAANSUhEUgAAAJAAAAAsCAYAAACKTjG2AAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAACTklEQVR4nO3cT0iTcRzH8behNhEsNCywQ6egDmL1Q5iwYFGWRH+gKGmIhyJCKwozqA5j
      WGpSWQiVUIGHoD8GRVQXhdwOki6QDv0BsaQOddCDYSsT1qVD0GTQ10cbfF6w075j38Ob3/M8
      DJaVTCaTiPyjBfO9gGQ2BSQmCkhMFJCYKCAxUUBiooDERAGJiQISEwUkJgpITBSQmCggMVFA
      YqKAxEQBiYkCEhMFJCYKSEwUkJgoIDFRQGKigMREAYmJAhITBSQmCkhMstMNxOPxudhDMlSW
      /lxBLHQJExMFJCYKSEzS3kTL/2/H6TtpZx41V3vy3YYTaJSukMO5P19houk+1RXChdNNSaYw
      n0BbL8WJrJ+NVSQT6R5ITLwJaKyHSHUlAedwLkBl/U1eT6YanGCgvYag3+Gcn+DuCD1jv98Z
      aKcm6Mc5R2DnCR6MTHuyqth4E1BOMSuWF5CdA5Bg/MU1znWP/j032U/3vQ8sWrOFAycv0HH1
      FBuLYPJpAxvqbvPm608AEp+e07KnKe39lcw9T57CXnYeo2thI3f7qijOhWjY0ZlqMH8zzb0r
      GeqNEuu7zpGOFrZffshBgLJGntzYy1IvFpRZ48kJ9ON7gvyiZSzOnebb+xj9wzMMvovybMTH
      6qpajrde4ejazwy9/UL+unLKhm5x8fFHpgCmJhiODZLiDJN55skJVB46TMn+Oiru+1i16RBu
      yQyDvgSD52tpezVOgjwKS0Oc3VYCBbtoahvhTOs+KiIJyCukNNhAOODFtmKhH1PFRI/xYvIL
      E0mMjJXscXMAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='64' name='Is_Nighttime' width='144'>
      iVBORw0KGgoAAAANSUhEUgAAAJAAAABACAYAAAD1eP6XAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAADtElEQVR4nO3cf2jUdRzH8adRazKSmJHh/jDicBQm0z5JG11tSMtRaTDBH4cMDDKsDZ2T
      foHHsbHmMFf4z4wWHGE/sCtlrIicsBuZbCeMYVEyroYJGvP+mKzVdbD+aMZGk1t733fzW68H
      7I/73uf4fv548v1+d9/P9xZNTExMIDJHtyz0BMTfFJCYKCAxUUBiooDERAGJiQISEwUkJgpI
      TBSQmCggMVFAYqKAxEQBiYkCEhMFJCYKSEwUkJgoIDFRQGKigMREAYmJAhITBSQmCkhMFJCY
      KCAxuTXbgEQiMR/zEJ9apB9XEAudwsREAYmJAhKTrBfRcvPb9NpHsxp3snlrzvdtOAINEw05
      nJv6Fyae7VPREC6cbZT4hfkI9NThBJHHcjEV8SNdA4mJNwFdPUVkayVB53AuSOWLHXw3NtPA
      UfradlBR6nCulIrNEU5dnXynr40dFaU45wg+20AsmfFkqmJjPoV11Tu6rr8oriV2rIYVLGdj
      0ye8GlhCXibFZ/sqOXhiA9FQ0fQPX/iQltNrONzzPmvy0owOfcvPAFdivHwoze5YL6WFkDrd
      yLaGDh78dBcrrROWnPLmGui2DIPtO6n/+ieu/fHXpuK1MxxBiu4lMNJEZE+KDeVVPFr+MKuW
      wtjnZ+hP9tBfeXzqnrgMCugm48m/8eeO7iF6+34+7qni7jyIhx1HZxpY8CTN3SsZ6I7T29NO
      7ZE32PjWCZ4HKNlP17tbWObFBCVnPLkG+v23cQqW3sOdeRl+/bGXb4ZuMPCHOF8k83mgqoa9
      LW9Tt/YyA99foeChdZQMvMebnRdJA6RHGertZ9iLyYqJJ0egdaGXKHpuN2XH87n/iRdwd91g
      YP44/QdraB1MMc5iCleHaHqmCJZU09ia5PWW7ZRFxmFxIasr9hEOejFbsdDdeDHR90BiooDE
      RAGJiQISEwUkJgpITBSQmCggMVFAYjLnWxnxsKO+65/bi2tjHKtZYZmT/EvX2lbNatwde8/n
      fN/2WxnDUULVSXYlImhl68JYyIB0ChMTbwIajhJyYeKjfbRtC04+hREnPO2pjemvtYTVnzw8
      Ag3RceADlh/4krPZHtuYsoQ1kTjLyboC3mno4IJ3k5Mc8fTBwsfrDrHlvuy7GDunJax+5WFA
      AQKziOdvWsLqS/N8EX2Ji5cykP6F853dDE5u1RJW/5rHgEpYXz1C+6ZHCD79Cp35AYqvv7Ws
      msbWckaObKfMOdz6zTR/lZq/qcmcaUnrf4C/v0iU/7U/AbGCHQKnqzUTAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='64' name='Is_Traffic' width='144'>
      iVBORw0KGgoAAAANSUhEUgAAAJAAAABACAYAAAD1eP6XAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAADr0lEQVR4nO3cf2jUdRzH8adRazKSmJHh/jDicBQm0z6KG51tSMtRaTDBH4cMCjLMDZ2T
      ssDj2FhzmCv8Z0YLjrAf2JUyZkRO2A1NthPGsCgZV0MFjXl/TNbyOlh/OGOjycXe+25+4/WA
      /XHf+xzfzx9PPve9u89388bGxsYQmab75noC4m8KSEwUkJgoIDFRQGKigMREAYmJAhITBSQm
      CkhMFJCYKCAxUUBiooDERAGJiQISEwUkJgpITBSQmCggMVFAYqKAxEQBiYkCEhMFJCYKSEwU
      kJjcn21AIpGYjXmIT83TP1cQC72FiYkCEhMFJCZZL6Ll3rfxnS+yjjnZuMWTcxtWoEGiIYdz
      E//CxLO9KhrChbONEr8wr0AvHk4QWTsTUxE/0jWQmHgT0I3TRLaUE3QO54KUv9nGTyNTDRym
      p2U7ZcUO54op2xTh9I3xZ3pa2F5WjHOO4Ct1xJIZT6YqNua3sI5aR8edB4XVxI5VsYTFbGj4
      iv2BBeRkUnyzt5yDJ9YTDRVMfvGlz2k6s4LDXZ+yIifN8MCPXAG4HuOtQ2l2xropzofUmXq2
      1rXx9Nc7WGqdsMwob66BHsjQ3/oqtWd/4+Zftw8VrpxiBSl4nMBQA5HdKdaXVvBs6SqWLYSR
      U+foTXbRW3584pm4BgroHuPJx/gLR3cTfXAfX3ZV8GgOxMOOo1MNzHuBxs6l9HXG6e5qpfrI
      e2z44ASvAxTto+PjzSzyYoIyYzy5Brr15yh5Cx/j4ZwMf/zazQ8Ddxn4S5xvk7k8VVHFnqYP
      qVl5jb6fr5P3zGqK+j7h/fbLpAHSwwx09zLoxWTFxJMVaHVoFwWv7aTkeC5PPv8G7pG7DMwd
      pfdgFc39KUaZT/7yEA0vF8CCSuqbk7zbtI2SyCjMz2d52V7CQS9mKxb6NV5M9D2QmCggMVFA
      YqKAxEQBiYkCEhMFJCYKSEy0pfV/4GbLsqxjHtpz0ZNzTzugeNhR2/Hv44XVMY5VLbHMSXzE
      /lPGYJRQZZIdiQja2To35nIF0jWQmHgT0GCUkAsTH+6hZWtw/C6MOOFJd21MfqwtrP7k4Qo0
      QNuBz1h84DvOZ7ttY8IW1kTiPCdr8vioro1L3k1OZoinn8KeqznE5ieyn2Lkgraw+pWHAQUI
      /Id4/qEtrL40yxfRV7l8NQPp37nY3kn/+FFtYfWvWQyoiHWVQ7RuXEPwpbdpzw1QeOepRZXU
      N5cydGQbJc7h1m2i8fvU7E1Npk1bWsVE3wOJyd/M2xYJ9KBckwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Map' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Offense categories time series' width='192'>
      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
      OdykYSaYAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Offense category' width='192'>
      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
      egBRUBMEQfj/JCOVVyfRHRQAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Overtime' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nO29aZAlyX0f9sus4x199+tzpmd77tnZnd2dvReLgwK9EEFAACExTFNBiaQp
      ExGiQorwB3+0zS/+YkfIsh02HQzJphWyIYoSCQIiCRIQuACxwO5isTuLnZmde3p6evo+3+t3
      1JXpD5lZlXW87tfT3YOZ6fohAEzXq8rKqsp/5v/4/f9JOOccOXIcUNDdNpDLT45HGbsWAMbY
      XvQjR46fCXYtADlyPMrIBSDHgUYuADkONMxOTgrcFmYW1zA+2IXbc2sY7rVRc4DJifH97l+O
      HPuKjgTAsIuwDYJ7c3OAR7DRMmCCgzEGxljuCcrxyKIjAfCdOmZnZ3Ho0BiaK6vggY1mAFBK
      wTmHYRj73c8cOfYFZLeBsCAIcgHI8cgiN4JzHGjkApDjQCMXgBwHGrkA5DjQyAUgx4FGLgA5
      DjRyAchxoNExFeLm3XmMdtu4V3PQWwDqDnDm5LH97l+OHPuKjqkQPeUiuEnBGqtwCn0oF3Iq
      RI5HHx1TIVZWljE8PAyrVMZAycamm1Mhcjz6yKkQOQ40ciM4RyY+urmA+dXNn3U39h25AOTI
      xM3ZNdxd3PhZd2PfkQtAjgONXAByHGjkApCjLdgB8G7nApAjE14QIAge/5pPuQA84mi5/r60
      e1Bimx0JQOC2cO3mFDgL8MEHF3Bv+jauXL+9333L0QH+p6+9lUfid4EdUSHu3ryC5fUN9AwM
      oquInArxEGCz6cL3AxCyt+2qb+v7+7PCPCzYARViBUdPnMKrIxNgXgs1l+RUiH0A5xwcAO1w
      RHMAhml0fP5W9wUAItuhlIJSCtPsaIg8suhIBTILXTh37ml0l2z09vWhf2gURw6N7HffDiS+
      9e5N/P43ftLx+Y2WJ6Rgl1hYq+PP376x+4YeMeRG8EOGhdVN3F2sPvD71pvugaA+JJELwD7i
      z9++fl/X7cT96PkMfA+WgCDD6c8OgG2XC8A+4q2P7u77PTp1QKxUm7hwfb7t71kC4OdxgBy7
      xU49ZN4OB53PWEc++/mVGt75eGbrtrR7H4QgGJALwL7CD9oPzsW1OjY2W6njOxEYP2BgO+Ar
      bGw6W/6u3ztrRXgckQvAPkEM/vaD6O3LM/h4enlX9+CcIwg6H6ieH+zqfo8jOnLyihcdgFIC
      z2ewDIqAA5aZ+/+3wlZD0w8YfD9bzdiJGrQTQ/WATOo7QkcCwDwH16bu4ej4ID66dBOV4T44
      HsdTZ04ByHeKzIJ6Jxw8Uw1ijINxnn53XAbDOninYmJiHZ3PsfWqpHT+2O/88f+2HQkANS2U
      bRMcBEXbREBMFC3x0vNdIrOhqARBwACajtK6np/5/pRLs5P3qvR/xhjYNoFgzoS7tF27fhDE
      +sM5B+Pssf++na0AvgtCCLwAGDk8gUpvCQ0/rwqxFTgIOBfvyDCyTC0CSkjq3SmdvpN36ksB
      EPfY+vyAI+wPyaBNUEoRsOhbEiL6/7h/2w7JcCVMTj4BAOiXx+z96tEBgd9mZt2JTh8EnYfA
      OOe4eGsR0wsbmBzrzzwnee+deJgeVeReoJ8RtvOz74fuzTjHZtPt2MbYrk+Pg32QC8B+gW/t
      BdrKz+4HbC/4bW3v+5fv3sTyRnPH1/7w4l3cvLcKQAjTH3730l5374EjF4A9xoc35nFzdg0+
      Y/D8oK1K4wdsx1FfHUHA8B9/dG3HdIWbs2uYWaqi1ogHxYKESpYVM1hYrWN5owEA4Izjw5sL
      qXO++cNrcLxHJ4cgF4A9xr3lGuZXaqnjf/XjmzGVQbhA7/8+PmN478rsjtWQuWXRNyU4U/Pr
      uDq9jIB1phbpC1fW+Reuz8NxH52AWy4Ae4wgYJmz/vcu3Ikd99oFwTKOBwHDDy/eTRzjO5r9
      P74TjzqrwTu9sIHb8+sAgBv31raMFifjFu2e4VFCLgB7jIBz+Bn0BNYhaS2J6YUNLKzV8Zfv
      ppNVsmbgm7Nr2KhHHKOm4+H6zAo+0Jig+iB3/SB0vd5d2EC95bXtix+wx44h2pEAcM7heT44
      Y2i1HLDAh/sI6Xk/KzB2f2oO45EF/cH1eVyeWurYKH7/6ixuz66Hf88sVfHmhTuZtIvQoFXB
      L8SFI8tGia1iwaOj6rRDx1SIG1P3MDk+hBs37qDYV4LvAmfPnATweLjD9gwcgFQVhMrAwDmV
      g1ocX1yrSx97lt4tCG5c2ggBk7OuRkuo1h0ELPIU6W5N2Wr0t6RLqMHqBQFs08DSRgPf+MFV
      vH7uCCglYR2UgHEsrG7Kx0j3z/cl9QIcvs9QrTvoKUdRIaUmJa9brTVRsi2UCg9XjnFHvSGm
      hYJJ0Wq10D8ygsBtglrRC97PcDnjHPWWh57SoxF641zo5ly+E8Y4qvUWHC9AwBgIAf7Vn32A
      pusJeyFJheAAQsoCAeccjueDae/5ex9OoWhHn079xhhHre7A9fzwXNcL4AdBOLOrVenPf3Qd
      1YaDj24t4LkTo6FbtlZv4WvfvYTecgEj/eVY/9TAVvdquj5+eHEan3vpeHiOHwSZFIpv//gm
      ThwaxAunx/bkPe8VOmOD+h5s2wIMC5Q3MTw2AtcnIET8dz/D5Usrm/iTv7mCf/yVl/btHnsJ
      lQPQ8sQAMCjF//wnb6Pl+hFlgQCOG4BlUA0IEf9DDQqDUrkK8MR7JgAnaDq+qAoh251eXMM3
      f3QNz5wYjSgNlCJgUdyBEAJXllGZW9mE4wY4f3IsjPq2vAB35jewvNHAqYlKrH+M85AuwcHk
      ysJBCBWrSHhe+rkcj4HS/R0r94OO6wJNTEwAAAYHxbHSvnUpDsY53EeMx+74Pv7FH70dDSo3
      CG0BMYPytt4WN6GrB4ynXJR+wOAbLLQVgoDDMiHPi7fHmbifMl6rdQcfXJ/HU0eHAAjVRHdt
      Ol6QMnS5HPgs0Q/Ogb94+zomhnvx/KmtZ3bH8/ctuNcJGBNqm0HjZu8j4QV6kIzEveC/BAFH
      y/XFoEmMyDsLG/jJtbnUQGcZ5+q/6S5HJUTh/Xj79+NL/V9dz3j6PvqAd9wgJZw3Z9fwpz+4
      Gq4AOhwv2NYhwhjPbPdB4ifX5vC9C3dSxx96AUhGKPcbv/en73Xk6tvK8E/OdvWmC9cPwCF0
      csZ4qqbnH3zrAv7q3Zu4eGtBcvyj+ziSOr0dAo3KnOxraAPI39r58JuOl+pbo+Xhzvw6vvXO
      zZQA+AFLBMfSbX7zh9dwc3Z12/7vJ2oNB05GHdWHXgDEzPjg7je7XMWf/uAqltbrW573h9+9
      hM2mmzqeNYu7vjCAuTb7Np24v31upYaFtTqqDTc2iPyAxTw+Cp70DAEigAVEq1csuZ0xVOsu
      XE8IQMsRg0D9nYQXBNogjzxDDcdDw/FSwuX5cZUpS7BWNhqZ7+p+sBuP40e3FlPHHnoBAB5s
      eQ7PZ5he3BAV17bA7bn1TNtEBcEU2/MPv3sppq6oZ8lWtdqrQMmp1dd4RiuSn6Pw3tU53JgR
      M27AOGoNR3OZZj/PPUmR0PsVDebIhkjZB9nNYWm9ju9dmIqfs8uJzPUD/Ps3L7f9/e1LM7gy
      vYw/+f7Hmb8vrKULfz0SAvCg8J33bqHldqZucLQ3ZBkXK4Hj+Xj343tta+4kV4us2VPo7PGx
      40m2aMCyi2L9+ON7mFmKqss1nWwd3ZCeG8451mrNtud6PgujxVkrXPw9CPtkab2BW3Pr4e8B
      43B3OZH5PsPF20ttf789v465lc0U7QMQz5j1bLkAaHjn43uot8Qy73egd7UzT9Qs6fkMLdcX
      rFDGMbeyiSuyEgTjnXF5/ICh5SZWo0TXkoJT09QNQa2WLtBE2+OV7vCc7cqgMB5fAVS8I6nK
      cWSvbvu1ir/10XSozikvVdbKPLtcg+MFCS5T0CEVgvlYWl6B7zlYWdtAvbqG+aW1PXqECE3H
      w08TFFsxUB6M98DVXlAnnqd2SS1BwETJQjlImPTazCxWcVHqoVkD7vq99obiRt2JzbTx3PX2
      hq0+8x0Z6Yu1Z1uRF1z1J2uGZxq/SS/DohL+Ywn1+uUJ1+1uIbxQ8Xa+/+E0fnprIbTZXD/I
      fLe359YRsLigL280OgyEMY5Gs4X+nm60mnVs+j44Z2Csb0/3B1itNvDXH9zGU5OV8Jjj+sKP
      /QDq1Lu+mK2X1hu4NbuGY2N9bc/lnOPu0gZsi2Kwpxi1IT02qsy5DOwCEDOObnzq9fddL8AV
      uXT7QSCOcyqjxYI+sV5rYqCnCMYYHC9ybbquD9/3EQTptv0gCGdk26LhZLJaa2J4oCzO5Qy+
      FC5lO+htuJ4fDjzVN1341TEOtbWS+K/jiX6J/2dg6rnuE4FM3Nfb8Hwf71+dhef58P0Avi/c
      rcn7CE8YQ9NxUZJR9HrT7ZALFLiYn72Hom3i3t0ZDFYG4AR7vz8AIRSUkFhNesMQSdwPpk49
      Qb3l4drdFXQVbbzx0nHcmd9AuWhhbLA7diZjwPtX5+AHDJ9+dlJ7BgI/iLw9QcDAwpr7JLaR
      xfxqHZQaMooa/cAhIqmmaYBxHpLSxDETlFKAsHDGVe9H/w5E1vZnnIR9oZTC1QbGGy8ex9Xp
      FVBCoYbzOx/fC39X+wNQSlFrCLXKZxymaYJDX5XF/TnnIJDRXkJAiLyeEHBwBAy7+o6u78D1
      WawNxgEv4KCGIdQvOdkk7yO+CwPj0ViilHYmAGahC6+++goAYHR09L4fYDuILKoMQ/AB+kHV
      EukFAdaqLfyPX3sLrz01gd/8xfOJPjE02+zPxcHjRqOkMrh+/Pm+/d4t/PovPIdy0YpdP9AT
      j7MnmZxJdSJryVfZaMsbjZjaoM/cXRq/aqsc5SDgYel09S3qLS9yu2aoi3qf9urrXZleTrlv
      k3aImumTUBl6ScfFQ2cEq5fVaEU+53YVFPYa+svxfRZGPttRMTqpn9l0fDRdP4wDJK9IfkBK
      CGyt4l7cLRkPZinNU/UjqYreW6ri//32T6NSK4n6RIZcjlwpLOdPxie3sO4QTwvQD346DSc0
      PuPP1HC8GG3C87Mntp2i3eTo+gEg7YNGy8v0jDFJKanWo1TQIGAPnwAo/MFfXAjzT38WUINs
      K+Mta9ZUBm/WR0jOQH7A8NGtBfzlj2+GxyxTEMvUWPaD7JnUcf0weV7N8MkBslJtgvPoWexE
      KUvTjD5/EHAM93fFfvfDyHL6mG4s6++Bc45vvnUNH95ceGDxG1faQ2oiUCtm1g6aX/+bK+G/
      A84fPgFgoQrCopljnzSgrT6QJ1eAdhFTIGJH6u35gTBQWdJ5D+Dy1HIqENVy/Zhnpatkw5S2
      lYoCOxl9cGLGdJR/oCMpoJSS2Dk6MYxxjtNHKsiCLljq+2QJP+fCRvAZi703de5ut3TNirvE
      kna4+Fs94+99/T3UW/EItOvHXaEPlQD4PovxWcIldJ9mkv/j6z+O6ccxghlj+PDGvODit9k9
      peX4+Nff+hB16Xf/V3/2PjabrsgBaDgx1YlxjmbSn49IfVH9KNomODg+urWI3//GT9B0/Ew3
      8N98eCd8PwFj+OjWIr71TjxtMikQR0b6YsJmGprhzTnGE4Z+FpTgBbo/XfYvYrrGYxfq3D/8
      60u72oaJ83QWmi74H08vC/KfFNhqw0mtiu9dnQ2j3g+dChSrmvAAOEALYWaWgC4MfsDQcHyA
      Z68UfiDUnPXNluDKtDz86NJM22R1FfhKzmJBwGKuStOgKFgGNuoOVqrNVKAJkOxQrXZQwDju
      LKyH0VxAzJbJ1Wa80r1lmZZktW+dQaqQLKcCyJk/YPjv/+83Mb+6GcYNkveq1p1tKSZbwQuC
      TG2g5YiEoXrTjVWkCDQXvU4CDANnD6MKpOBlZEvtOdIUm+j+vvCNd7r6eEGARsuLZV8loQyx
      +HXpZHlTujMZ56g13ZSRmcWQZSwdvdb7oQzg9dimHOLY9y/cwdT8Omwr6c5Oqzubyh3qM1jS
      hghkhtiNmVURbJKxCzUR6Ndfup0mpHWKrOEQBhqlOircrRHfKsuW07/pQycAuwmjM8bxx22I
      UFPz6/jJ1dnYsa2SurN06vQ5+h/i/1w/zfExteK4SZZpUpcmAPq7C7g9t4am42F+dTNUpZLv
      Rn8vHGmG6U+uzoX/Vgawfo3Kz13aaGB9s5USgKzqFo7si/5Lsl+ez0K1jTGOtVokdLtxbGSN
      A87lRoEsUr+qdQdvXpiKbLGsi2TfOqNCBD4Wl1bgOw1M3Z1FfWMV80t7z+/mSEtqp9sA+QHD
      t969gR9evJs5cBfX6rg9tx47ljxNvw/jfNvtSj3JoWGSO6QSwpMv/sThAXF+Rpg++bdpUIxX
      ejC/uomW9PQoIdnKHax7QRSm5qPn7e0qpK7RN9emhKBcsGCbRrhaqBlUL6miJ9srxN43BxbX
      NmNqhl6mpROOVTuwDDeyOqJyrq/dXYHjBbg6vSz6v8X9/IB1vkNMq+VgvlVHiTHcXfNRIgyM
      9e8pFcJxPVltwIfalcb3g/DYVmi6Pv7jj67B8xhajpty+alEcb0dxhg83wclGcY2FzV51LXJ
      +6v6/wAQ+EFo6DUdD0vrjXBQGJRgpL8LN2ZWM9Utx/NBEB9YTAZt1motUKLtGSCpBMmP6rg+
      ipYRW00CxmIrXG9XAbYZn+8Y01Qkg6K3bOHJJyq4fm8VTcdHwAL4no9LU3G1RdEjFDw/CGkY
      HMDsyiYGekooepI2oXvKMmgKncLzfXhedP36poPVahMD3aVwclEsWDEJsYgWwfV21HvsUABY
      4GJudgajI0NY3migr6+IurP3+wNQaoDIsDqRoXRKaXhsK5gBR3XTkTNyxvmEhPQAQATaqg0X
      N+6t4bmTY/jwxnx8gBJ9NSK4fGcFz56IAkU+i6K9hmGABcLobDo+VqqRMTo51o9f+tQZ/M1P
      pzO9uYyLWV8JEKEEtm0iYMLALthG2C8qqRDp9yaezYsJgHwIiZ5yIUZ+A4BiIYoEE0DSKaL9
      AxiTzyYHMCHCdSroDRRF24TnuyBEJOXrAz1gHJCJ/Mk84vulQ3AuOqqun1tdQa3hortkA4TE
      bCMqqQ9cPlesD/LYfVEh9hu6AbOTQArnAEN2TRrVHrRZ9u3LM1hcq+PNC3fw3Mkx/H/fuYhq
      Q48ScjBDnL9Rd/Bv/9PFmAAA0dJfbTi4NrMSqj86KCEo2hYIyfZjO64PbkWDzDLEJKCeoWRb
      qUh0UjefX9mEbZlbxiz0MioKBU3nVx4gy6AwZXyg6fqot7zwOxAILtOHN+Yxt7oZxhE8uUrr
      qlA7B8auCgInVj49Ay7LwQBE7FVd9VpYreOZ40JtfGiNYF3f7aQCmYrAZiVuA1Il0Nx6/+bb
      PxX3kYNrs+mGLjrbMtDXHenMDcfDphZQqTYc6fER7V29u4zf/8ZPACAVeAHEoKKE7IgOoM61
      TIp6c2vX4btXZnHp9mJqwtBVJctMf2rToKnjpmmEEeKr08u4eHsxep9yQfnv/q83Y7VKs1a2
      pY1G5kS0l0XU1KAW7yodePQZz6xU/YOPpgGIoNhDJQDJgI8nE8l3EgnmSHDlOceqpAREx6Jz
      1GF98BiEwDRoFJX24v7nn1yZjWVc+YGIGAcZye6AoBwQQmLXKNQSubLKLuXh3yRambZ4D/rs
      r4xY/Zm6EoQ7hb4uQeW2pKeKUoKSbeITT0+kjPl225D5iRWqaJtYq7XgBSyMkyjstjKEHsjb
      isDn+SziCbXBhzcXsgUgybl+UEhODhzpl9spFPe+3vLwv/6Hd8IZVUVq9Q+raAc6xIwt7p1k
      fWYt46o106AxyjMhwEB3EScPD2b2880PpmJ/W4n9xHQ1ZavBo/dfF14Fpf+bifYHe0viGImu
      tUwDY4Pdgrsk2z0jaRLpWIH4bnqAyzRoqHL983/3dkw4t/MCiQSe7BVPL+nScLzwnkHAkNwv
      WTkOtqJfrFYb2QJw8cL7+Nof/BvsfA+R3UMfXDuiQSeCWm9euINv/vAq/p9vfRj50TnHP/93
      P0qpVEmBIFRUvFNH9PA959EsH9ICEn0m2lxpGmKTvH4taWY7EBLp0AUrrbuzjDpASkjPPFGB
      YdBUsKwoBy4lBAYl+OqXXkBPuYB/8LlnQEhkA9imUIsIIcK1KJ9tYqQXhJCYgKpVpeX6+N/+
      w7vhPQ1KUC5aYAGD4/qxQRiuqrJSRlItdP0A/+KP3sl8L/p7/tY7N8KK2QEX/CN94hE2gcaj
      0gaHqtLRdPy0ADQ2VjA7N4vy0FhnFvIeQx/EO6kJpGwABdcLsNn0ZE0doV65foCVjQb+l38f
      f8HJAlaUxBNXVPsiebyFr33nIwBahQf9WkrCMoEZmzFmQgSOome1TBqmMab6wTh+dGkm1cbi
      mgiwPX9qXHuuqM3zp8Zw/NBA2McvvHYKpkFDw17dxjAoTIOip2xjsKcYqi9nJ4dQLlphlBoQ
      eQumQdF0fVkyRfXfQMEycGlqKeZYEM8qBuTXf3AFf/z9K/jWuzfCfqoIsh43aAfH9VFtuDgy
      3BvSPixTJBfpq6aiRiRX7b9+fwq359bTAlDuq+DQ6ChKBnD/9vr9IRXkkAd2snOigq8RtOZX
      N3FnfiPkrNxbqkW5BgHDX/34ZuqlJ43WmaUq3r58D14QpDw9umpiSoMXiNOP1QAblINGx1sf
      TWN6UcQczET8IsnPCRjbclkf7C2F91UTgkEJzhwZwsRwb6yGZ9Z9ugoWSgULJdvE6GB3eK+j
      Y/2o9JZiRrNtCmHhnOO6lkppGhTlooUgw5PXkOpNreHixswqrt9dwTffugYA+Jd/9kHM67Qd
      ZpaqODTUE34nSsXWs6ZBwxqtnh+gWnewtB6PQG82XRRsI1sFsi0Tp55+Gtlm0/5BudMAwTXx
      fJaKDnfclpxNBKU6wOxKLXRT1hpOOLPdXazij7//cWzlGR3ogmWJiKgarJwDt2bXYga0Iobp
      fH599dAHr2Ua6CpaODkxiFLBjEVhqw0n1GGTMz4lJGZ8qg/bDpZBU8aq3g+dAapjZEDkApQK
      FiZH+zAx0gsgvooULCO2xzCRz9qUEWvRvnhfWW5XILIVlIFabTjh5LOy0ZDVrNt/b8Z4TBXS
      JxOlnlmmIXIEAtFWteGkJg0/YDAIyRaAYtHChQ8vpmbkjZVFXL1+C4vzM7h1J70M7wWUNEfZ
      RPHZ9qc3F3B5StSG+foProTl7rj8j9DnpQfA88Myg2u1VsjXbzpe6B7b2GzFAlcA8MLpcdgm
      RU+5gHIhmgYu3lqIJbsoIVpYjfg9pkxooYRgMpFUP9zfBYMS2JaRMpaTUG0XbTPmfvnGW1cR
      MJZKo1QwqLi/6KfA2cmhLe9FCcHEsBjwh4Z68MrZw3jmuFCN5uR+Z5QQPPnEUPxCIgagnrLZ
      LdMsVU6D57NYJlpLZsddl3ETUVlO9NRVCe1tBMDzGUyTxsalUnc456GBTohI2fQ8BtcPcEej
      hCiB8fwAlNJsAVjfqKPHNpBcaIMgQH1pEasuYFE10GT1gT34LwsYID1QHBwf3pjDtbsrgpIs
      z7m3tIHZ5Sp838eVqSU0Wq78LdACI6Jgqy/LYDDJUPRkMoSem6sisPpMYsiMLCGE0eterjbh
      et6WM7AwMilGB7vw+tMTMCiR1A4m2+Vyh3gSzqa6qmVSIvobzrzRzdY3m/jOe7fAOXB6Iu5V
      UgPcoEKPvz6zEs6sv/TJ05JW4otS6pSGfwdBIMuwi+/4ypPjOD0xENJRVuR2qpQA//BvPxNb
      XSI1UqdUECAMSIqZVle7XC+A5/lYlnECP4jGkKiZ6oVUhdT4kNSGar0VToxKJfP8AKYUfoMS
      OK6PrpIFV95L4dh4P8BFkeL+7kK2nds7OIL+3qHU8WKphNLQMAYsjk1n76pCXJ5aQn93EdSg
      gKxwQEAws1RDsWDGwt+iIoI4xwt4SG8wjEhcRVheLNEgKlNJGazZfXjm+Ag+urUoP5h4qaZB
      w38D0sND2odObEtEcbtLFp4/NQ7bMkPqACHCs6Jm/+6iDcCNVSsjBOjvKcEyzXAF0NWXhbUG
      FqUum6Q12KYBxwtQLtro6ypgerEKAgLLJDEKhTLSDUOoM5xzgEQVJ3QQQsJ+UEM8hyX1fj9g
      GOwpg9K1mIFZtExQSmBphqhtGqGQez6T40VMAIrGre7t+YLvkEWXIJQCXMzuXIqieg+Xp5ZE
      vEWciZbno6tox/ZGUM/keAGu3l3BJ88daaMCGT6uL6ykbIByTz/Onj6B0fEjOHF0IuvS+8Ll
      qSX8xTs3xNY/2stsOJ5YXtsMWt3zc+F6nMvDuODqzCxW4QWCIst4NGspKN2wXLRQ6Y1XYyAJ
      vSErXqDj+Ljwspw8LH3mphFTXyxT8JoKlom+7iJeefJw7HqDUvz6LzwHSklYxNaQXCiCeNlC
      1ayyJdQKNjbYjd/4/HlwznF4qAcjiTzfdjAzjGPDoEJVICSkRwBiFu0qWvjql1+EQWmKgkHC
      HqvnjoSBI0r19Px4uqdKZ+Sc480PpjL3NTv9RCWW9KJsjct3lmP32Wy46Cnbss5TpKIWLGkf
      +IGY4LJextz8FKZ+ehvp3J/9ww8+msa95RrqrUg/V5FVfYbxgyjkrQvLWwkatOcLt+fCWj3M
      03Uz0hvV3+OVHnz1Sy/GjbeEsGR5NXSYhlBt1Fh55sRIzBMkah5RGJSAEqUuxKH0ZeUtsS0h
      RGOV7liiverny2cPgRBhvOr94FzM9qZBY757upUxkAAlIof41acO47C0EQAxoD/x9ARMKoa5
      MmwJiQSREFU5Thr3gPQY6Ya8UoEijpYq0/hHb17CRr2FgDFcleUkOecoF6yYQavbF8pINw0K
      1w9keqnY30BhbLAbIEJIi7aZFoDAa8IJSjj1dJvlYR/ApDHk+QGWNxq4Or0CTxqryclfFIrK
      ThDRkZVHoHtwkijaJmzLCFUEkUAuBkHBMlAuWPKjtkc0Awkj2DIMGNrgGx3sxm994XnhZiy0
      87HFB6jSnykhuHlvLTT0lPCUbNGO7vs2DQObTRcGpSjYZswANoydfVXGeCwYR1YjkScAACAA
      SURBVAnBoaEe/JdfeB4gkqskBeD5U2N47ekJ+S4oessFBIzLgmAktIGiStM8FmxjXJRxFJ4g
      HuZd/5+SZ8UYR9E2w6QcAEJFDp+byqAeheczMfnweJ2gk4cH0VW0cGy8H196/XR6jM9cugjH
      DHDt9uIDC4QFAZOBK8GLqTWcMCNrq/D/VoNRFYbSkbU7ikLRMmDJ2dmkQve1LYpDQz2wTEPm
      6m7NuFSzvTJyu8s2fusL58NjpkHRXbLxX//Ka/inv/xq6vqkZ8g2jVA1oZTghxfvwgzZmiR1
      re6jV7NkIYO6oKszUX+zBUMNYAXDEO+oOyyqFbmKC5YZo1WoCUF5svQ9zwCEhbvUFwnrqcpY
      RyA9WXoesm0aIidAToLJZ1FgnKNgGakAmHqWYsFEV8lOC8DY6bM4cfgkvvSFT7YlP+0HHC9I
      JUy3HH9LlSO2p62WNhgETFSYSFwrlt5sAXj62AiAqFRIFMySr4jIZX0LF5Bl0nCgqzZGB0Sl
      Bd3/PtRXxnB/uW07CqYpaBQEESVCH2CAWAlEvkS832EbiYFtEJIKhunBuyQoIfjyJ89k/ka0
      wQ9olGpTeJoUJ59ADNzPnJ8MV4D4phpR0NLxfDRaXqj+CF4aw3qtJZLYZWkX9RnaxRvEu4n6
      9vc+82T28yUPNNeW8d03v4/r129hd7y9zqFckcldypXunhx0TJtBojIq8Ta9QPiAbcsI97FV
      CdTJAUCA8Bz1WziItXNtM570kQSVbrh2anY6CJV9oprVTErDGVz1o5CIIaiBqwq+GgYJ72OZ
      NEVe26kKxMFxZKQ3dkzvdTLLTAmBUCOj/hECTAz3xMqnx6td81gVas4RxjI4gH/73YuYW67B
      oDQmPGOVbpySLmHLNELBU32AvJ9yUBASHyupt9F/+Chef+FptFz3gdkAaqZWLEDVQbUkxjKd
      ApbahSULnh/gg+vzMA2KrmJ8j+FjY/2xv4mm9585UsH5U2PSuFL6t/gXIWRLGoKubmRRDpKz
      rK6yHB7ugbqjuvbMExWckwEp3dtDSHrpN40oSqvfpyBdsduhndAGAU/N8mqQKxKd/rveTNG2
      hMqm/c652G5J7XAJRLtbJpOgGOPgjMu4ToCG46NgGbHodHfJDoN4howBqPdgGYbcQZPizBND
      eOH0OAqWCT8IQuM588309/ejp6/vgapAQBQQCo1cnq7MFku70zOQ5L85pCHlR8xE9bCK367C
      /n/r/CSKthk+p0kpRvq7cGx8QPiypUqjZnZKSKx8eBK2ZUQDNWPQtePhAMDYQHcsHREQkePj
      4/3SsyF1V9vEJ88dSc3sv/LZp1KFrRQxTL8vpSTzuz57PF302KDxNEMgPsAJIfjql1/MFB6R
      2SYG6G9+/rxsT7yTv3z3Zkzd1Vd0nQqtqvNxHiW9C6ZrZMtRQnD+ZHyLVjWxWCbF3GoNKxtN
      VHpLIaVbR6YAuAHBC+fPpV7U4uw0LnzwEW5P3cTlqzeyLr0v6Fx9BTXQdT+xoj0oOqt6ca7m
      SeAc+E/v3wqXV0LEwK30lkTyOaJw/ZHRvigwRITB+5nnJgHI5VRSmQHxQW3LaJudpgJESZ1b
      x1YzsWlQfPmTZxKzLU1dY5kGxio9qeuPjQ+IQJy0QQiEECbJdCYlsZqgCplVIxKlFLMwORrR
      PZQxbVK5SklayJHRaIYOGMe33xPcKZ2m3pIuakUKNCiBz1iotvoBw/zqZujh8QOGo2P9GBvs
      RrdUXwmJVnJArMgtxwch4jclGGLcyIkq66E25m/hO9+/gL//a1+GrjyIJcmHTyx0FSMqxG7T
      3BT3XYWsFXUBEKqMbRrwfR//8s/eByUEb164gxOH+oUx5Qf4vT/9cazsoMrOgnpMAgz0FBEw
      YZAVbTE7cXlfEZEMYBkmjo71yioCHEVLS+iWatC7H99DuWCFfnpADFRL+ts554LOwBMVKGSA
      Rz/GZR9t00B/dwEnD/eDsSB8H6oyhvi3vJdBQTT/epT9JWwlCh67/hNPH8ZIXymV4KRvpkEJ
      QmqEDs54SEMJj4GH9A7RDgtXO0oBAg4ZgA+ZokHotmZhFBmINuZzPR//w7/+PlwvCCc5yzTg
      +3Ji41HZRc64LEDAMTbYBYNCUGgAWAaRXjyKY+P9Un0OZH5FEFbcWNtsYai/DN/3swUgMAha
      q7UUHbpvYAB1Fxju68Kmu3dVIZIRV0ojVUBUFxBUCFEnRwTH/ujNjwUHnojNGzgH+ruLWN9s
      hSF20RZB0RJVJhgXtN6XnjyMu4tVGIYRliMvFuxY+N22DHSVbLheIANXYmapNVzYlhETAFsa
      X+WiBUPSJyzTjLVHqVhN9GNEc3EWCxYKlgXTNEPOPSUEBZlQr8hvtmXAklUzjo8PCO8QiWwA
      wzBgGJKZaRp49kRCPbAMoIkYFUKsdNlUCJ2GIp41oncIsJjtoSgfljTWDUrD8XFqYghHx/px
      I7EVlOczLMh8hpACImkxnEfua0IIigVBExEzuhFWslDvGBDf6fSRCmzLlNoFCStZUOmKVZVG
      sqkQhV4cOTmG5LAudfXixPFJ9PZXcGgku5Lw/WC7ZHHOVF1NFm4J+vGdpXBWrDYczCxVMTEc
      qQZhBFIOXMsUPJLJsT6cPzmG188dCem8Sn3RQQhBV9FKeDWISKSWH7y/O8ryEveIDMSUwatV
      W0iCEoLTExVU+gQVI8tTo9o7MtKHkxODeHJyCH/r+aPhyqTfz5BWe5ZrcyeRYM55uDOMjoLd
      fsJTzZ85UsFgbwmGQcJ3cnJiMKYyKbh+EO5PrNQi2xZ1jnTdgmixBB0qAefs5LDkOQnBU7vC
      6I+cLAKQmRF2a2YRtmnuV1XyLUEI8N33p2LHuPb/ylWqvwQuef96xFJ5jpT+Z1ACx/PD2dU0
      jJAicGx8IPViLEXYkr8LY5pKMpd4o4ruPKmSRQyaGXjaDpQSvHz2EMYzdHvl51c4NTGIp48O
      41PPPIHRga7YeUn3Xxa2slGS0F2WOmKRYUpQ6ROJMicOD4bv8efOHw0nCAL1PrOFm0vell4F
      Tz2LsgGULShsgABBwGM2alfRxifPHRFeIABPjPTi0FAPWq4f3vvQsOBGGTSyBzIzwg4P96NQ
      LDwwLxBHtH+WQSluz62Bg0sXZkQZCAKWKjvy529fDysrxIw7rpZSNYPHH3Wgpxjm6f7iqydT
      apj+51c+/aTM7VX+dQNF28RwnxiAr5+bwNnJIdiSTtEOWw3MJPq6Chiv9IT8IWWkJpPmdehG
      u+hn+lwjwzDWA2nbgVKCgh0XgENDPShYJr7w2ikAIitN/RbegyB1TMH11b4KfujiVsa/MsKT
      dYYYZ6nsORVtLhUsvPb0BE4dHowRCF97agJHpQs8VNuyHtJxPJRKpQcmAJ4kLgHiowWMw3ED
      lApmGKH96/dvo+X6sQfinOPS7cUw3U0nnukrACBmPi9goTvx+VNjePG0yJ/NiiaaJhXnEhHA
      siQFAEA4w7yuuSP7u4voLdtaxDb99pKzXzuVCBCryudfPQlKCIZ6Szg8JFYHa5sVhhKiBZ8y
      VKA2btCso0RSOnQM9hQxmNjDDIgT+546OgxAez7SvqQKEJHglHeHSo+NL4sVKPpEyRYcKvFt
      SRi8VGps9A6iZ99uU47ML9DTVcTMvbkHlhNcsIQ6IlQVGpvpy0ULQcDwvQ/vCHq0Xr9H+oTV
      MTWQ9dr4lmGE2w6Jl6vYihFpt92sTQnRbAAasweUq0MZer/8c09hcrRflBkxaWrFyWy/zYqg
      C48hjUF1ri7k5aLI3U26SkOjMEMAslaQtnnCBg2pHAp/7zNn8fLZQ/HzTCPcb8ykNPx31I4R
      ztZZfQq0qhyOJxJZuoo2mCxsFTCGpfUGnjs5it5yAZBJRZ9/5aS4p+aEEQn9hdg7yXq+MNKf
      9eD9lWEQz3lgAnBqoiKTSWSdTEmDVnm0jhdgca0Ox43S5QxK8PSx4UQNfPE4d5eqUUxBswFY
      onSGMGwpihmlR5KzM9GMSnUfg4giUirYNDLQhX/4uWczZ17RZmdranKQ0ESfFc4dH8EXP3E6
      ZFsmkUm3NkgGPaI9fUM39MW5ad4QgcYDsoyYiqRWlmglTt9IJy4yxvHf/OrreEUK2eJ6Q6a0
      NvH33zgXuy79nsTK8V998YVwdQDSmwOK/rRRgRrVFVy+eh0BbeMi2geo5HNCCD738nGZtyuq
      JncVbRwa6gn96PoDJAdpuShe/NXplVAAbC0q6HosHrYnQLlgZtbsCWd5Depa5RY1DIKXzx7G
      p2XwDMCWunSnNkCSXiBqi6ZXAJ14J/oXDWQ9wq3DoBT/7JdfTQlMO+O4VOiME/zbf+cFAMCr
      Zw/jU888oT1LFEhsh2RJ/HLRClfQi7cWAChaur6zPYsJuE4bD7/BFq87PD/5g2GY4BwYGh1J
      uUFbzTqWllfgOC3UG9vXbukU+qyiJ6FbpoFf+tQZPHV0SAa3ohdFiHgIdayraOHnnjsaa/cT
      T0+gp6winCS8Rm//v/2Nn0NfRhQUiGp6ivtFs+xLTx7SDGKaKsUOpGf7diS0156eEIkc2tfS
      Vxu9r0B7dQ2IVDbLFPynrEFtUBrbHzi8to3K1p1xbhZUnMIyjbCPul6+1cSgR/v9gIVJPCL/
      N76SZ8E0oolAf8+qCJgO5c5+7azIxkuJt+e0UOzuhWXYKTcoIQRLCwuoVgvwA47TJ0+E0bXd
      gHMOyzTw6lOHUzThcsGUZbgZLFNbASAGiionIgJXkfCMD3bjH33xefgBw//+Jz+GZVKMDXbj
      C6+djPV3bLALWRWlDULCqCcAGTATL7e/qxBGJw1CUs/POZfRR71ct6QWaMc45+grF+S2qAyM
      KT2ayAoXkbrHOcerZw/hUKU73i6N2hVuS4aiZeC3fvE5fHBjIdW3X/nsU6j0FKNosfwfStLf
      kYPj9MTgtt+XEGSOg4jvJghpKhKcgvbqW6GTQxTIqrdcvPLkIXxwYx6cMVCqtpWKKoAQKKcf
      B9XeO+Pinah7h/2FiGUwllEduntwFJ949RW89NJzKemwLRM9/YNiZdjjIIFtUlR6SuHMV7SM
      mAvU9dO7JVqmESt+amg8kN6uAiq9JYwOdOFzLx1HwTLw1S+9mOnByIK+UqhkEzUDlYpWtIRm
      6pfZbSaNQ0DX07XfEqrNb/7ieVBCMNzflQ7YQTEggV9745kwAHRoOE5hVhivdMfdk/J/aJtk
      //aZaxGyOEeJJ2qrAhGC2DfUI+x/9eNbMCjBoAwQquCeKoWuq0BKhdZXSPWrcs9m9n2L58ro
      rYHxsVGAufCCSC3oxOOxZbOE4MhIHz5zfjJ0aZaKFv7B335WUAgohR9wrG86+kWiepumP3aX
      Czj7xBAuTS2ht6sQ9uvlJw9jZKALJyeyC9S265NtmmgQL3zOKMPJkimS2c9fkjp7/DiR3hwa
      u4ehvFE0+i3ktcu/Tx+pYGapKkv/JWnQMgmdCMqvwnilB2+8eHzbb8O5qGWa1bZot4Pv224c
      EBLSyEWuNE2pMQQk05glhMD1gtBbJ5qjIDIS3HR8FG1hKyg6e8Ey8eXXz4T9IESQAo+OD8T7
      RgRlpG1doLbPSQ2hb1kFlIrZevP9oqtk4dRERK+ghOAF6afP1mXjmU3HxwdgmwaOjotAR6T7
      C/307OTwjvojSpprEUztfj1lG2+8dLzttX3dhZRrEkiXOWxnpJGMn9rZc0YiQ0yhaJt4cjJd
      2iYLWVQQdXw30D0+IWFOG+xDfWWMDJTDKnSApDsYYkVRyfOWacjKFOLaty5O4/rMSmh7WYYR
      1gR6/nRUGzV8joxnM9sZwT8LtDPWklAqkWlEhqcqnTE8EC//0d+9OwFVn+npY8Oo9Jbw2lMT
      YYVl06B45ezhtteenqhklkNPPqdlZFeI06POsT610a12wu9ph0wPVYftJiejsE1CwsH8mfPC
      U6begdgMsFsKgSrLGFdIFtY2sVFvRfIt/1FruKj0lUMBJW36T9v0K3ZOR0+4zyAknZQd08GV
      8SndlSpBHYj0R6Vfq0SM0xnJDzvtEyUErz41gYGeEt546XjMvw0Ald4yTsiKyzpOHB7MVLeK
      W5DIdKhyJslj7Wbkgoyh3C+24gd1QpEwtSh5EspV+8aL8RVTrK40JB2KY/E2OJcToXbYpCIr
      b6ivHD8/S34hVaxE3/S/fhYV0DMRDuBMY0oan7IEyNnJISyu1WMUBiVAhIiPduZIZ8t/O1gJ
      Xo3oRxyHhnpwaChNYGvbZsazAemk9K6ijcnReNrmVrm8O+EYZV6/xUzfScsTw72ZrtXtYJmi
      aoNazdUYIIkQjG5AR/5+xI5txZFKpY+aWlR/x73eZ2y16qpZ5jc+/xxMg2JQ8xqR2HlbZ2bd
      L8xQ59x527ZJMz0hVCUca+jtKuArn86uYrAfOJJBUd4JPv/qyY4r0MUrVcd99yoeZNDsd6VD
      J8IlU0l3godOABTiASvRzYJlhnQJSgm++IlToaqj0uK6ilYsD/i+QbJJY+KnnbfdVbJj4Xl5
      i44FlaB9SqWqHnc/IITgn3zl5fu7eBu0W/EAhJF02zLClTzrtYo0U5m2qj1/mm+U/W6Swc9U
      P7Z6gAeJpN89izfTXbJCyquiC/z6LzwLAKHH6OdfPBbm8+4Glpmxg2Kb2vqd4Jc+eUZUJtbv
      sYM+qt1PsrAVq7QTbDlAdjORkOzCXIRAFgk20F20Q3Umazuo2I472vFOvq+ypVJOBqqVleno
      QSQ4Z1hdXYPnNLHZ2LsdxIykdCdpBFRQX184PR6qNyrwoQxTPWJL92IFyMBuvC1Zy7TiM6W3
      tNhhv/bhWYFot8zdIOkMCBNRJHHtd/7uy6H9EHKsEt4bmlHrR/8Wlpm214A4fUWHyt4DdmgE
      z03fQtW3UN1Yg+tznDp5fE+oEFQLpXMZLldhfQDhphIjA104VOkG5wwFy5BJ7TIkra7nMlNo
      l/1SrzNOXYiO7faZAfFcjPPwWdkW41jQLrI3oDYoDSkBewm10cb9Pqv6FrHrw/I1yp1No+Ql
      U7iXB3uK4apACfD5V47jvSv3wHhEXVDsXkBkBNKMd1OyDTwtcxPitBQSfsMdCQChBhorC/D7
      B/fNfWQaBp47OYpZWTEAEOl104tVqZYI9eZ3vvISCrbYaujEoQFMjGjlOWj7Wped4sUnD4VV
      GxQUF+h+Da4kVPXlpNcjC8+eGMXZNoGtdnTovcBuWjVoxswcuqspPieDidEqI+qpEu2FGFQQ
      +0SR3+h4bNUj2fYRIQS//aUXUvQXUW5SXL+jcTw2MYmegRGRlcP2lgqh2qGG2GNWVVcARFT3
      7376SQz0lELdsb9PbvBsilr7UbUyIgMju+tTspqcbBwAOk542Q6WZSBwebgRx1Ztlgq0LS/n
      d77yUsgB2ksQghhFY6dQ8QH9elMOPtOgYlMUGtU+iqpvRAMURHxLk9JY9Tt985KB7hJ+9Y1z
      mf0czvBOCVe5oELsbAUgFN3dosHdFUJJY7uwu0oYz9qIOsUl2YPBmQW96O1eYStPSac4MrI7
      N2Z77N4GSIJSgtfPTWCtptHptUGtbDeDklj1if/8s0+F8YJKbwn/2YvHwt8Mg+KJHbwDy4gc
      Cg9FIOzY+AAGeyMatGUabT0bqgZPeK50kyko42o/cPpIJbOsx/3CMimY+6BKEN8f2juD7x/H
      xgfQcJbC76i+15GRPnzqWZFMYxgEPaVCGA9QXC5ChEZwbDwdgb8fPBQCMNhbCisJABEbMAuf
      feFYKoldn0XbWf57gbHB7szSJfePKBPucUXSBjDk98lyT3YlSItZtpHiT+0Gthn53R4KAchC
      u1n8088+Efu7p1wIYwAKu/WLb4W9dDmaBkGbUqOPBbL2HTBkbkXMjdlmQGdl2gF7QP2QzFHg
      IQqEKQz1ljA51t+xlJeLFn7+hWOxY/vlFweyE6zvF3tpS+wHjo/3ZxbN7RSdPl/WCkggYjxZ
      33K3Kq7+DR+6FeDwcC8Gekp45/L+bMT9MKHSVw6T/x9GfO7lE3vepnrWIyO9oeo61FdO5R6r
      gsNZ7s3dThyxvOFdtbRPMCjBeKV7+xPbYL+M4Kj9vfGBPXdiFC+dGd8VmethR6o8u/z71z73
      TGjLnZ0cwktnxlPfrWibsfKPwM74U+0wOtAV3mtHK4CzuY7b82sYG+xG3QUOj+0sy6pTFGwT
      v/13Xryva7PconuNvWpdFe59PIc+sFVFOF3gQ8dF4rt1lWz8+i88FzumiJC7gdqLGdihAKyv
      bYAQIrJ0ONuz/QHa4X4i8IyxWP36vYaqd7/X7Qd+sCUV4lGEQZDaJ8EyCCwj/X0Y5+AsOldt
      kCf2S4jOCwIGg+z++6o2dyQAXb09WLg9A6u/G44nrOm92B9gL2EYomhqstb9XkGkK+5t+4QQ
      GKbx0BvFO4WK8urv6uUnD4vaP2balU20cwuysEDyPNP0USyYe/b+d9RKd98gnj3feWWFxxG7
      5RgdJIgBnN6lMusdvnBqDLfm1qNrke0e7e0q4B998YU96+ND5wXaC+yGt78dfvXnz6HS21lt
      oYOO86fGttxYXEfBNlM5IFkLIiUkVa90N3jsBKBcsPBffPbc9ifeJ0YGOkv92wkysiIfC5QL
      VqzU5XbYz/hN23s+8DvuMyglOyqA9TDgV37+3GPrBu0UyRzgB6VqPnYrwKOI50+NbX/SYw4R
      GIsXtn0QyAUgx0OBJCHyQeGxU4FyPD7Yq4j7VsgFIMdDif305MXus6OzOce92Vl0l2zUHGBi
      fH+oEDlyPJQ2wObGChZW1hEM9IZVF/aTCpHj4EJRIfaL0qKwMzKc68Ft1OB1FeEx8lBSIXI8
      HlBJ/vtFaVHYUeuVkXFURtL113Pk2Guo4mf7DcJ3qb8EQZCvADn2HIxzNFvefVWd3glyAchx
      oJG7QXMcaOQCkONAIxeAHAcauQDkONDIBSDHgcaO4gD16ipuTy9gYKALDYfj1PHJ/epXjhwP
      BDsSgHK5DM9z4bIeFK2cCpHj0ceOBKBW20SxWELZomg8pFUhcuTYCfJAWI4DjdwIznGgkQtA
      jgONXAByHGjkApDjQCMXgBwHGrkA5DjQyAUgx4HGDqkQa5i6M4/ewTJaDnIqRI5HHjsSgEKh
      iJ7+XnDOcypEjscCO9shZn0VzWYT/b1lNL28KkSORx85FSLHgUZuBOc40MgFIMeBRi4AOQ40
      cgHIcaCRC0COA41cAHIcaOQCkONAY0eBsOZmFfcW12ByB5sucO7s6f3qV44cDwQ7EoBSdy+6
      a3U4LtBtsJwKkeORx47JcBvVGsbGRuEGeVWIHI8+cipEjgON3AjOcaCRC0COA41cAHIcaOQC
      kONA474EwGnUsLJe2+u+5MjxwHFfAjC3uIKNtaW97kuOHA8c97cLceCi4e5xT3Lk+BngvuIA
      nDNwTkApyeMAOR5p7CoQpmgQjDFQGtemOOcghGx7bKtzAXTUxk7u1Wlf96vdndxrv9rNavNh
      aHcv3gHQ2ZhRbd6fCiShqBCEkMwH3w3aPcxusR99fdTafZT6ul/tqjZ3TYXIkeNRhvG7v/u7
      v7vbRqqri5hfraHbZvjo8g3Umw68xibu3r0Lwy6jVLSxOHcHtRZBbWka8xsOKv09AADmO7h8
      5RZGhiu4culDBNRGdW0Va+trqDc99HR3gQUeLl25Bttv4NrsKoYqA6DbLAzL9+5gwyPoKRcx
      Pz8H07Tgew4WFxdhFsuwDIr5qdtoUgM3L30Eq9yHUtHe5kk5bly5iGLfKJZnpzA9PQ1il7C6
      vISpqSlUhodhcB+XPr6GLgu4dGMalaEKjO06y3xcvnQFgyPDuHXtMhoe0Kyuo7pZxer6Jvp6
      u0EIx+VLl2AbBDem7mGgMghjm9XRbdZxY2oGQ5UBuKvzWPAMWDxAc3MDG5sOusoltOpV3L47
      h/rGMtYbLvp7u7d5B9H37rEZfnr5OjabDrym+N7UKqNctLE0P41ag+Hu7eugdhfK275bYGl2
      BjXHh9FawUe3FlG2KeqNOm7dnEJP3wAsk2J9cQaLNRcrc3dwb7mGkaGBLdsMPAdXrt3C8HAF
      QXMT82sbsE0DzWYdq+u1vQmE9fYPwjYpmNfC4NgEAreKhsNR7u5Bf08XAGCwMgzKPcwtrmBz
      M4ohULOAyoAQBg7AqS3hxu0ZbNRduLUNuACoYaEy2A9il+DXVtD0tl+0BipDMCgB5xyu62F+
      bhYzUzfgMobVtVp0DgIUSiWsrKx28KQEQ0NDAAA3YHji0Aimbt/BwPAwBisDMCkBDAtDg/2A
      aYI4m6g1ve2bpSaGKvJDcoD6NVy5cQdLyzXAaaHuBwAohoYqaLWacJtrWN5wtm3WLnWht7sE
      gKPVcrG0MI+ZmbtYrW7CdRoAgGJXL3rKBTQadSwuLnTwDoDe/gpskyLwWhgcPQLuVlFvie89
      0Cu+t3i3DPVmEwsdtjswOARDjUhCcePGNSwuLqG3rxdzs3MAgP6BQVimid7eXhw/tn1pTsMq
      YKC/BwCH57lYXZjH7OxdzCxuwPOc3dkACqsry6jVHYyNPAGzOoOJydPYWJ5HV3cvZu7ewcDo
      BBqry2gGJp5/6VU4XjQoAreJjWoV5b5BHD/5JGzbAsg0evt6UXcCrM7PY3hoAJsbVZiVIVTG
      JtBlbW8XrKytoe4R9FgcXb0DCFo12IMVlEol1NZWUXd81DZW4cBGT08P+ofHOnhShvWNOkpY
      w8ThQ7g3v4Lnz53C/PIaipaJe3PzODRSQW2zBrNQRP/wGAa6tp/5EHjY2KzB3OjBkaMnULBt
      gFOUe/pR3WyivrqMrpFhbFZr6KmMYHiYYLS/sG2zrXoV1WoV/UPDqDEDZw71Y3G9gdGhAQAc
      8/OL6O2ysVGtYmLyBKr1VgfvAFhbWQq/t12dwZD2ve/dvYP+0Qk0VlfQDAycOHYUtNjbUbur
      a0uo+wYqY8N4pq8AZ7MPNYcjaNVRGejGWq2FoLGORjPA4dFhFO3tvY++a0wDugAAAF5JREFU
      20StWkV33wA2a02cOnUCC4urmBwfhkF4bgPkONjIuUA5DjRyAchxoLEnNkCOHI8C1ueu47tv
      X8XE5FH0FA0Mj43lNkCOg4P1uRu4u8oxffMyNtc2MPjEJP5/+Ch8ws5RlMIAAAAASUVORK5C
      YII=
    </thumbnail>
  </thumbnails>
</workbook>
