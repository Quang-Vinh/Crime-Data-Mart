<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20201.20.0219.0753                               -->
<workbook original-version='18.1' source-build='2020.1.0 (20201.20.0219.0753)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='CrimeDataMart' inline='true' name='federated.0xxzh3n1ngww291cy2y771tzroj8' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='web0.eecs.uottawa.ca' name='postgres.0z4v9lv0bmvflk12du7ry0m7ye2e'>
            <connection authentication='username-password' class='postgres' dbname='group_42' odbc-native-protocol='' one-time-sql='' port='15432' server='web0.eecs.uottawa.ca' sslmode='require' username='qdo086' />
          </named-connection>
        </named-connections>
        <relation join='inner' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[crime_fact].[location_dim_key]' />
              <expression op='[location_dimension].[location_dim_key]' />
            </expression>
          </clause>
          <relation join='inner' type='join'>
            <clause type='join'>
              <expression op='='>
                <expression op='[crime_fact].[date_dim_key]' />
                <expression op='[date_dimension].[date_dim_key]' />
              </expression>
            </clause>
            <relation join='inner' type='join'>
              <clause type='join'>
                <expression op='='>
                  <expression op='[crime_fact].[event_dim_key]' />
                  <expression op='[event_dimension].[event_dim_key]' />
                </expression>
              </clause>
              <relation join='inner' type='join'>
                <clause type='join'>
                  <expression op='='>
                    <expression op='[crime_fact].[crime_dim_key]' />
                    <expression op='[crime_dimension].[crime_dim_key]' />
                  </expression>
                </clause>
                <relation connection='postgres.0z4v9lv0bmvflk12du7ry0m7ye2e' name='crime_fact' table='[CrimeDataMart].[crime_fact]' type='table' />
                <relation connection='postgres.0z4v9lv0bmvflk12du7ry0m7ye2e' name='crime_dimension' table='[CrimeDataMart].[crime_dimension]' type='table' />
              </relation>
              <relation connection='postgres.0z4v9lv0bmvflk12du7ry0m7ye2e' name='event_dimension' table='[CrimeDataMart].[event_dimension]' type='table' />
            </relation>
            <relation connection='postgres.0z4v9lv0bmvflk12du7ry0m7ye2e' name='date_dimension' table='[CrimeDataMart].[date_dimension]' type='table' />
          </relation>
          <relation connection='postgres.0z4v9lv0bmvflk12du7ry0m7ye2e' name='location_dimension' table='[CrimeDataMart].[location_dimension]' type='table' />
        </relation>
        <cols>
          <map key='[can_holiday_name]' value='[date_dimension].[can_holiday_name]' />
          <map key='[city (location_dimension)]' value='[location_dimension].[city]' />
          <map key='[city]' value='[event_dimension].[city]' />
          <map key='[crime_dim_key (crime_dimension)]' value='[crime_dimension].[crime_dim_key]' />
          <map key='[crime_dim_key]' value='[crime_fact].[crime_dim_key]' />
          <map key='[crime_rate]' value='[location_dimension].[crime_rate]' />
          <map key='[date_dim_key (date_dimension)]' value='[date_dimension].[date_dim_key]' />
          <map key='[date_dim_key]' value='[crime_fact].[date_dim_key]' />
          <map key='[day]' value='[date_dimension].[day]' />
          <map key='[day_of_year]' value='[date_dimension].[day_of_year]' />
          <map key='[event_dim_key (event_dimension)]' value='[event_dimension].[event_dim_key]' />
          <map key='[event_dim_key]' value='[crime_fact].[event_dim_key]' />
          <map key='[first_occurrence_time]' value='[crime_dimension].[first_occurrence_time]' />
          <map key='[full_date]' value='[date_dimension].[full_date]' />
          <map key='[is_can_holiday]' value='[date_dimension].[is_can_holiday]' />
          <map key='[is_fatal]' value='[crime_fact].[is_fatal]' />
          <map key='[is_month_end]' value='[date_dimension].[is_month_end]' />
          <map key='[is_month_start]' value='[date_dimension].[is_month_start]' />
          <map key='[is_nighttime]' value='[crime_fact].[is_nighttime]' />
          <map key='[is_traffic]' value='[crime_fact].[is_traffic]' />
          <map key='[is_us_holiday]' value='[date_dimension].[is_us_holiday]' />
          <map key='[is_violent]' value='[crime_dimension].[is_violent]' />
          <map key='[is_weekend]' value='[date_dimension].[is_weekend]' />
          <map key='[is_year_end]' value='[date_dimension].[is_year_end]' />
          <map key='[is_year_start]' value='[date_dimension].[is_year_start]' />
          <map key='[last_occurrence_time]' value='[crime_dimension].[last_occurrence_time]' />
          <map key='[latitude]' value='[location_dimension].[latitude]' />
          <map key='[location (location_dimension)]' value='[location_dimension].[location]' />
          <map key='[location]' value='[event_dimension].[location]' />
          <map key='[location_dim_key (location_dimension)]' value='[location_dimension].[location_dim_key]' />
          <map key='[location_dim_key]' value='[crime_fact].[location_dim_key]' />
          <map key='[location_size]' value='[event_dimension].[location_size]' />
          <map key='[longitude]' value='[location_dimension].[longitude]' />
          <map key='[month]' value='[date_dimension].[month]' />
          <map key='[name]' value='[event_dimension].[name]' />
          <map key='[neighborhood]' value='[location_dimension].[neighborhood]' />
          <map key='[offense_category]' value='[crime_dimension].[offense_category]' />
          <map key='[offense_type]' value='[crime_dimension].[offense_type]' />
          <map key='[quarter]' value='[date_dimension].[quarter]' />
          <map key='[reported_time]' value='[crime_dimension].[reported_time]' />
          <map key='[type]' value='[event_dimension].[type]' />
          <map key='[us_holiday_name]' value='[date_dimension].[us_holiday_name]' />
          <map key='[week_of_year]' value='[date_dimension].[week_of_year]' />
          <map key='[weekday]' value='[date_dimension].[weekday]' />
          <map key='[year]' value='[date_dimension].[year]' />
        </cols>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>date_dim_key</remote-name>
            <remote-type>3</remote-type>
            <local-name>[date_dim_key]</local-name>
            <parent-name>[crime_fact]</parent-name>
            <remote-alias>date_dim_key</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location_dim_key</remote-name>
            <remote-type>3</remote-type>
            <local-name>[location_dim_key]</local-name>
            <parent-name>[crime_fact]</parent-name>
            <remote-alias>location_dim_key</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>crime_dim_key</remote-name>
            <remote-type>3</remote-type>
            <local-name>[crime_dim_key]</local-name>
            <parent-name>[crime_fact]</parent-name>
            <remote-alias>crime_dim_key</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>event_dim_key</remote-name>
            <remote-type>3</remote-type>
            <local-name>[event_dim_key]</local-name>
            <parent-name>[crime_fact]</parent-name>
            <remote-alias>event_dim_key</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>is_traffic</remote-name>
            <remote-type>11</remote-type>
            <local-name>[is_traffic]</local-name>
            <parent-name>[crime_fact]</parent-name>
            <remote-alias>is_traffic</remote-alias>
            <ordinal>5</ordinal>
            <local-type>boolean</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_BIT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_BIT&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>is_fatal</remote-name>
            <remote-type>11</remote-type>
            <local-name>[is_fatal]</local-name>
            <parent-name>[crime_fact]</parent-name>
            <remote-alias>is_fatal</remote-alias>
            <ordinal>6</ordinal>
            <local-type>boolean</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_BIT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_BIT&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>is_nighttime</remote-name>
            <remote-type>11</remote-type>
            <local-name>[is_nighttime]</local-name>
            <parent-name>[crime_fact]</parent-name>
            <remote-alias>is_nighttime</remote-alias>
            <ordinal>7</ordinal>
            <local-type>boolean</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_BIT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_BIT&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>crime_dim_key</remote-name>
            <remote-type>3</remote-type>
            <local-name>[crime_dim_key (crime_dimension)]</local-name>
            <parent-name>[crime_dimension]</parent-name>
            <remote-alias>crime_dim_key</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>first_occurrence_time</remote-name>
            <remote-type>134</remote-type>
            <local-name>[first_occurrence_time]</local-name>
            <parent-name>[crime_dimension]</parent-name>
            <remote-alias>first_occurrence_time</remote-alias>
            <ordinal>10</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Hour</aggregation>
            <precision>6</precision>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_TYPE_TIME&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_TYPE_TIME&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>last_occurrence_time</remote-name>
            <remote-type>134</remote-type>
            <local-name>[last_occurrence_time]</local-name>
            <parent-name>[crime_dimension]</parent-name>
            <remote-alias>last_occurrence_time</remote-alias>
            <ordinal>11</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Hour</aggregation>
            <precision>6</precision>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_TYPE_TIME&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_TYPE_TIME&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>reported_time</remote-name>
            <remote-type>134</remote-type>
            <local-name>[reported_time]</local-name>
            <parent-name>[crime_dimension]</parent-name>
            <remote-alias>reported_time</remote-alias>
            <ordinal>12</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Hour</aggregation>
            <precision>6</precision>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_TYPE_TIME&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_TYPE_TIME&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>offense_type</remote-name>
            <remote-type>130</remote-type>
            <local-name>[offense_type]</local-name>
            <parent-name>[crime_dimension]</parent-name>
            <remote-alias>offense_type</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>255</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>offense_category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[offense_category]</local-name>
            <parent-name>[crime_dimension]</parent-name>
            <remote-alias>offense_category</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>255</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>is_violent</remote-name>
            <remote-type>11</remote-type>
            <local-name>[is_violent]</local-name>
            <parent-name>[crime_dimension]</parent-name>
            <remote-alias>is_violent</remote-alias>
            <ordinal>15</ordinal>
            <local-type>boolean</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_BIT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_BIT&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>event_dim_key</remote-name>
            <remote-type>3</remote-type>
            <local-name>[event_dim_key (event_dimension)]</local-name>
            <parent-name>[event_dimension]</parent-name>
            <remote-alias>event_dim_key</remote-alias>
            <ordinal>17</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[location]</local-name>
            <parent-name>[event_dimension]</parent-name>
            <remote-alias>location</remote-alias>
            <ordinal>18</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>255</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>city</remote-name>
            <remote-type>130</remote-type>
            <local-name>[city]</local-name>
            <parent-name>[event_dimension]</parent-name>
            <remote-alias>city</remote-alias>
            <ordinal>19</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>255</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[name]</local-name>
            <parent-name>[event_dimension]</parent-name>
            <remote-alias>name</remote-alias>
            <ordinal>20</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>255</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>type</remote-name>
            <remote-type>130</remote-type>
            <local-name>[type]</local-name>
            <parent-name>[event_dimension]</parent-name>
            <remote-alias>type</remote-alias>
            <ordinal>21</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>255</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location_size</remote-name>
            <remote-type>3</remote-type>
            <local-name>[location_size]</local-name>
            <parent-name>[event_dimension]</parent-name>
            <remote-alias>location_size</remote-alias>
            <ordinal>22</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date_dim_key</remote-name>
            <remote-type>3</remote-type>
            <local-name>[date_dim_key (date_dimension)]</local-name>
            <parent-name>[date_dimension]</parent-name>
            <remote-alias>date_dim_key</remote-alias>
            <ordinal>24</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>full_date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[full_date]</local-name>
            <parent-name>[date_dimension]</parent-name>
            <remote-alias>full_date</remote-alias>
            <ordinal>25</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_TYPE_DATE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_TYPE_DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>day</remote-name>
            <remote-type>3</remote-type>
            <local-name>[day]</local-name>
            <parent-name>[date_dimension]</parent-name>
            <remote-alias>day</remote-alias>
            <ordinal>26</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>month</remote-name>
            <remote-type>3</remote-type>
            <local-name>[month]</local-name>
            <parent-name>[date_dimension]</parent-name>
            <remote-alias>month</remote-alias>
            <ordinal>27</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>year</remote-name>
            <remote-type>3</remote-type>
            <local-name>[year]</local-name>
            <parent-name>[date_dimension]</parent-name>
            <remote-alias>year</remote-alias>
            <ordinal>28</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>day_of_year</remote-name>
            <remote-type>3</remote-type>
            <local-name>[day_of_year]</local-name>
            <parent-name>[date_dimension]</parent-name>
            <remote-alias>day_of_year</remote-alias>
            <ordinal>29</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>week_of_year</remote-name>
            <remote-type>3</remote-type>
            <local-name>[week_of_year]</local-name>
            <parent-name>[date_dimension]</parent-name>
            <remote-alias>week_of_year</remote-alias>
            <ordinal>30</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>weekday</remote-name>
            <remote-type>3</remote-type>
            <local-name>[weekday]</local-name>
            <parent-name>[date_dimension]</parent-name>
            <remote-alias>weekday</remote-alias>
            <ordinal>31</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>is_weekend</remote-name>
            <remote-type>11</remote-type>
            <local-name>[is_weekend]</local-name>
            <parent-name>[date_dimension]</parent-name>
            <remote-alias>is_weekend</remote-alias>
            <ordinal>32</ordinal>
            <local-type>boolean</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_BIT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_BIT&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>quarter</remote-name>
            <remote-type>3</remote-type>
            <local-name>[quarter]</local-name>
            <parent-name>[date_dimension]</parent-name>
            <remote-alias>quarter</remote-alias>
            <ordinal>33</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>is_month_start</remote-name>
            <remote-type>11</remote-type>
            <local-name>[is_month_start]</local-name>
            <parent-name>[date_dimension]</parent-name>
            <remote-alias>is_month_start</remote-alias>
            <ordinal>34</ordinal>
            <local-type>boolean</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_BIT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_BIT&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>is_month_end</remote-name>
            <remote-type>11</remote-type>
            <local-name>[is_month_end]</local-name>
            <parent-name>[date_dimension]</parent-name>
            <remote-alias>is_month_end</remote-alias>
            <ordinal>35</ordinal>
            <local-type>boolean</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_BIT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_BIT&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>is_year_start</remote-name>
            <remote-type>11</remote-type>
            <local-name>[is_year_start]</local-name>
            <parent-name>[date_dimension]</parent-name>
            <remote-alias>is_year_start</remote-alias>
            <ordinal>36</ordinal>
            <local-type>boolean</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_BIT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_BIT&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>is_year_end</remote-name>
            <remote-type>11</remote-type>
            <local-name>[is_year_end]</local-name>
            <parent-name>[date_dimension]</parent-name>
            <remote-alias>is_year_end</remote-alias>
            <ordinal>37</ordinal>
            <local-type>boolean</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_BIT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_BIT&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>is_can_holiday</remote-name>
            <remote-type>11</remote-type>
            <local-name>[is_can_holiday]</local-name>
            <parent-name>[date_dimension]</parent-name>
            <remote-alias>is_can_holiday</remote-alias>
            <ordinal>38</ordinal>
            <local-type>boolean</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_BIT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_BIT&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>can_holiday_name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[can_holiday_name]</local-name>
            <parent-name>[date_dimension]</parent-name>
            <remote-alias>can_holiday_name</remote-alias>
            <ordinal>39</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>255</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>is_us_holiday</remote-name>
            <remote-type>11</remote-type>
            <local-name>[is_us_holiday]</local-name>
            <parent-name>[date_dimension]</parent-name>
            <remote-alias>is_us_holiday</remote-alias>
            <ordinal>40</ordinal>
            <local-type>boolean</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_BIT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_BIT&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>us_holiday_name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[us_holiday_name]</local-name>
            <parent-name>[date_dimension]</parent-name>
            <remote-alias>us_holiday_name</remote-alias>
            <ordinal>41</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>255</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location_dim_key</remote-name>
            <remote-type>3</remote-type>
            <local-name>[location_dim_key (location_dimension)]</local-name>
            <parent-name>[location_dimension]</parent-name>
            <remote-alias>location_dim_key</remote-alias>
            <ordinal>43</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[location (location_dimension)]</local-name>
            <parent-name>[location_dimension]</parent-name>
            <remote-alias>location</remote-alias>
            <ordinal>44</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>255</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>neighborhood</remote-name>
            <remote-type>130</remote-type>
            <local-name>[neighborhood]</local-name>
            <parent-name>[location_dimension]</parent-name>
            <remote-alias>neighborhood</remote-alias>
            <ordinal>45</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>255</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>latitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[latitude]</local-name>
            <parent-name>[location_dimension]</parent-name>
            <remote-alias>latitude</remote-alias>
            <ordinal>46</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_FLOAT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>longitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[longitude]</local-name>
            <parent-name>[location_dimension]</parent-name>
            <remote-alias>longitude</remote-alias>
            <ordinal>47</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_FLOAT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>city</remote-name>
            <remote-type>130</remote-type>
            <local-name>[city (location_dimension)]</local-name>
            <parent-name>[location_dimension]</parent-name>
            <remote-alias>city</remote-alias>
            <ordinal>48</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>255</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>crime_rate</remote-name>
            <remote-type>5</remote-type>
            <local-name>[crime_rate]</local-name>
            <parent-name>[location_dimension]</parent-name>
            <remote-alias>crime_rate</remote-alias>
            <ordinal>49</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_FLOAT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='string' name='[can_holiday_name]' role='dimension' type='nominal' />
      <column datatype='string' name='[city (location_dimension)]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column datatype='string' name='[city]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column aggregation='Sum' datatype='integer' name='[crime_dim_key (crime_dimension)]' role='dimension' type='ordinal' />
      <column aggregation='Sum' datatype='integer' name='[crime_dim_key]' role='dimension' type='ordinal' />
      <column aggregation='Sum' datatype='integer' name='[date_dim_key (date_dimension)]' role='dimension' type='ordinal' />
      <column aggregation='Sum' datatype='integer' name='[date_dim_key]' role='dimension' type='ordinal' />
      <column datatype='integer' name='[day]' role='dimension' type='quantitative' />
      <column datatype='integer' name='[day_of_year]' role='dimension' type='quantitative' />
      <column aggregation='Sum' datatype='integer' name='[event_dim_key (event_dimension)]' role='dimension' type='ordinal' />
      <column aggregation='Sum' datatype='integer' name='[event_dim_key]' role='dimension' type='ordinal' />
      <column aggregation='Hour' datatype='datetime' name='[first_occurrence_time]' role='dimension' type='ordinal' />
      <column datatype='date' name='[full_date]' role='dimension' type='ordinal' />
      <column datatype='boolean' name='[is_fatal]' role='dimension' type='nominal' />
      <column datatype='boolean' name='[is_nighttime]' role='dimension' type='nominal' />
      <column datatype='boolean' name='[is_traffic]' role='dimension' type='nominal' />
      <column aggregation='Hour' datatype='datetime' name='[last_occurrence_time]' role='dimension' type='ordinal' />
      <column aggregation='Avg' datatype='real' name='[latitude]' role='dimension' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column aggregation='Sum' datatype='integer' name='[location_dim_key (location_dimension)]' role='dimension' type='ordinal' />
      <column aggregation='Sum' datatype='integer' name='[location_dim_key]' role='dimension' type='ordinal' />
      <column aggregation='Avg' datatype='real' name='[longitude]' role='dimension' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column datatype='integer' name='[month]' role='dimension' type='quantitative' />
      <column datatype='string' name='[neighborhood]' role='dimension' type='nominal' />
      <column datatype='string' name='[offense_category]' role='dimension' type='nominal' />
      <column datatype='integer' name='[quarter]' role='dimension' type='quantitative' />
      <column aggregation='Hour' datatype='datetime' name='[reported_time]' role='dimension' type='ordinal' />
      <column datatype='integer' name='[week_of_year]' role='dimension' type='quantitative' />
      <column aggregation='Sum' datatype='integer' name='[weekday]' role='dimension' type='ordinal' />
      <column datatype='integer' name='[year]' role='dimension' type='quantitative' />
      <column-instance column='[Number of Records]' derivation='Avg' name='[avg:Number of Records:qk]' pivot='key' type='quantitative' />
      <column-instance column='[can_holiday_name]' derivation='None' name='[none:can_holiday_name:nk]' pivot='key' type='nominal' />
      <column-instance column='[city (location_dimension)]' derivation='None' name='[none:city (location_dimension):nk]' pivot='key' type='nominal' />
      <column-instance column='[day_of_year]' derivation='None' name='[none:day_of_year:qk]' pivot='key' type='quantitative' />
      <column-instance column='[is_fatal]' derivation='None' name='[none:is_fatal:nk]' pivot='key' type='nominal' />
      <column-instance column='[is_traffic]' derivation='None' name='[none:is_traffic:nk]' pivot='key' type='nominal' />
      <column-instance column='[latitude]' derivation='None' name='[none:latitude:ok]' pivot='key' type='ordinal' />
      <column-instance column='[longitude]' derivation='None' name='[none:longitude:ok]' pivot='key' type='ordinal' />
      <column-instance column='[neighborhood]' derivation='None' name='[none:neighborhood:nk]' pivot='key' type='nominal' />
      <column-instance column='[offense_category]' derivation='None' name='[none:offense_category:nk]' pivot='key' type='nominal' />
      <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
      <column-instance column='[full_date]' derivation='Week-Trunc' name='[twk:full_date:ok]' pivot='key' type='ordinal' />
      <group caption='Action (WEEK(full_date),offense_category)' hidden='true' name='[Action (WEEK(full_date),offense_category)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[twk:full_date:ok]' />
          <groupfilter function='level-members' level='[offense_category]' />
        </groupfilter>
      </group>
      <group caption='Action (city (location_dimension))' hidden='true' name='[Action (city (location_dimension))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[city (location_dimension)]' />
        </groupfilter>
      </group>
      <group caption='Action (is_fatal)' hidden='true' name='[Action (is_fatal)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[is_fatal]' />
        </groupfilter>
      </group>
      <group caption='Action (is_nighttime)' hidden='true' name='[Action (is_nighttime)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[is_nighttime]' />
        </groupfilter>
      </group>
      <group caption='Action (is_traffic)' hidden='true' name='[Action (is_traffic)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[is_traffic]' />
        </groupfilter>
      </group>
      <group caption='Action (latitude,longitude,offense_category)' hidden='true' name='[Action (latitude,longitude,offense_category)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:latitude:ok]' />
          <groupfilter function='level-members' level='[none:longitude:ok]' />
          <groupfilter function='level-members' level='[offense_category]' />
        </groupfilter>
      </group>
      <group caption='Action (offense_category)' hidden='true' name='[Action (offense_category)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[offense_category]' />
        </groupfilter>
      </group>
      <extract count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_US' class='hyper' dbname='D:/OneDrive/Projects/School/CSI 4142/CSI4142_project/3 - OLAP/CrimeDataMart.hyper' default-settings='yes' schema='Extract' sslmode='' tablename='Extract' update-time='03/27/2020 07:48:30 PM' username='tableau_internal_user'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <cols>
            <map key='[can_holiday_name]' value='[Extract].[can_holiday_name]' />
            <map key='[city (location_dimension)]' value='[Extract].[city]' />
            <map key='[city]' value='[Extract].[city1]' />
            <map key='[crime_dim_key (crime_dimension)]' value='[Extract].[crime_dim_key]' />
            <map key='[crime_dim_key]' value='[Extract].[crime_dim_key1]' />
            <map key='[crime_rate]' value='[Extract].[crime_rate]' />
            <map key='[date_dim_key (date_dimension)]' value='[Extract].[date_dim_key]' />
            <map key='[date_dim_key]' value='[Extract].[date_dim_key1]' />
            <map key='[day]' value='[Extract].[day]' />
            <map key='[day_of_year]' value='[Extract].[day_of_year]' />
            <map key='[event_dim_key (event_dimension)]' value='[Extract].[event_dim_key]' />
            <map key='[event_dim_key]' value='[Extract].[event_dim_key1]' />
            <map key='[first_occurrence_time]' value='[Extract].[first_occurrence_time]' />
            <map key='[full_date]' value='[Extract].[full_date]' />
            <map key='[is_can_holiday]' value='[Extract].[is_can_holiday]' />
            <map key='[is_fatal]' value='[Extract].[is_fatal]' />
            <map key='[is_month_end]' value='[Extract].[is_month_end]' />
            <map key='[is_month_start]' value='[Extract].[is_month_start]' />
            <map key='[is_nighttime]' value='[Extract].[is_nighttime]' />
            <map key='[is_traffic]' value='[Extract].[is_traffic]' />
            <map key='[is_us_holiday]' value='[Extract].[is_us_holiday]' />
            <map key='[is_violent]' value='[Extract].[is_violent]' />
            <map key='[is_weekend]' value='[Extract].[is_weekend]' />
            <map key='[is_year_end]' value='[Extract].[is_year_end]' />
            <map key='[is_year_start]' value='[Extract].[is_year_start]' />
            <map key='[last_occurrence_time]' value='[Extract].[last_occurrence_time]' />
            <map key='[latitude]' value='[Extract].[latitude]' />
            <map key='[location (location_dimension)]' value='[Extract].[location]' />
            <map key='[location]' value='[Extract].[location1]' />
            <map key='[location_dim_key (location_dimension)]' value='[Extract].[location_dim_key]' />
            <map key='[location_dim_key]' value='[Extract].[location_dim_key1]' />
            <map key='[location_size]' value='[Extract].[location_size]' />
            <map key='[longitude]' value='[Extract].[longitude]' />
            <map key='[month]' value='[Extract].[month]' />
            <map key='[name]' value='[Extract].[name]' />
            <map key='[neighborhood]' value='[Extract].[neighborhood]' />
            <map key='[offense_category]' value='[Extract].[offense_category]' />
            <map key='[offense_type]' value='[Extract].[offense_type]' />
            <map key='[quarter]' value='[Extract].[quarter]' />
            <map key='[reported_time]' value='[Extract].[reported_time]' />
            <map key='[type]' value='[Extract].[type]' />
            <map key='[us_holiday_name]' value='[Extract].[us_holiday_name]' />
            <map key='[week_of_year]' value='[Extract].[week_of_year]' />
            <map key='[weekday]' value='[Extract].[weekday]' />
            <map key='[year]' value='[Extract].[year]' />
          </cols>
          <refresh>
            <refresh-event add-from-file-path='CrimeDataMart' increment-value='%null%' refresh-type='create' rows-inserted='639056' timestamp-start='2020-03-27 19:48:30.942' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>date_dim_key1</remote-name>
              <remote-type>20</remote-type>
              <local-name>[date_dim_key]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>date_dim_key1</remote-alias>
              <ordinal>0</ordinal>
              <family>crime_fact</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>8492</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>location_dim_key1</remote-name>
              <remote-type>20</remote-type>
              <local-name>[location_dim_key]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>location_dim_key1</remote-alias>
              <ordinal>1</ordinal>
              <family>crime_fact</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>103967</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>crime_dim_key1</remote-name>
              <remote-type>20</remote-type>
              <local-name>[crime_dim_key]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>crime_dim_key1</remote-alias>
              <ordinal>2</ordinal>
              <family>crime_fact</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>131148</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>event_dim_key1</remote-name>
              <remote-type>20</remote-type>
              <local-name>[event_dim_key]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>event_dim_key1</remote-alias>
              <ordinal>3</ordinal>
              <family>crime_fact</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2708</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>is_traffic</remote-name>
              <remote-type>11</remote-type>
              <local-name>[is_traffic]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>is_traffic</remote-alias>
              <ordinal>4</ordinal>
              <family>crime_fact</family>
              <local-type>boolean</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>is_fatal</remote-name>
              <remote-type>11</remote-type>
              <local-name>[is_fatal]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>is_fatal</remote-alias>
              <ordinal>5</ordinal>
              <family>crime_fact</family>
              <local-type>boolean</local-type>
              <aggregation>Count</aggregation>
              <approx-count>7</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>is_nighttime</remote-name>
              <remote-type>11</remote-type>
              <local-name>[is_nighttime]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>is_nighttime</remote-alias>
              <ordinal>6</ordinal>
              <family>crime_fact</family>
              <local-type>boolean</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>crime_dim_key</remote-name>
              <remote-type>20</remote-type>
              <local-name>[crime_dim_key (crime_dimension)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>crime_dim_key</remote-alias>
              <ordinal>7</ordinal>
              <family>crime_dimension</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>131148</approx-count>
              <contains-null>false</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>first_occurrence_time</remote-name>
              <remote-type>135</remote-type>
              <local-name>[first_occurrence_time]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>first_occurrence_time</remote-alias>
              <ordinal>8</ordinal>
              <family>crime_dimension</family>
              <local-type>datetime</local-type>
              <aggregation>Year</aggregation>
              <approx-count>4916</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>last_occurrence_time</remote-name>
              <remote-type>135</remote-type>
              <local-name>[last_occurrence_time]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>last_occurrence_time</remote-alias>
              <ordinal>9</ordinal>
              <family>crime_dimension</family>
              <local-type>datetime</local-type>
              <aggregation>Year</aggregation>
              <approx-count>1724</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>reported_time</remote-name>
              <remote-type>135</remote-type>
              <local-name>[reported_time]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>reported_time</remote-alias>
              <ordinal>10</ordinal>
              <family>crime_dimension</family>
              <local-type>datetime</local-type>
              <aggregation>Year</aggregation>
              <approx-count>1797</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>offense_type</remote-name>
              <remote-type>129</remote-type>
              <local-name>[offense_type]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>offense_type</remote-alias>
              <ordinal>11</ordinal>
              <family>crime_dimension</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>332</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>offense_category</remote-name>
              <remote-type>129</remote-type>
              <local-name>[offense_category]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>offense_category</remote-alias>
              <ordinal>12</ordinal>
              <family>crime_dimension</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>27</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>is_violent</remote-name>
              <remote-type>11</remote-type>
              <local-name>[is_violent]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>is_violent</remote-alias>
              <ordinal>13</ordinal>
              <family>crime_dimension</family>
              <local-type>boolean</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>event_dim_key</remote-name>
              <remote-type>20</remote-type>
              <local-name>[event_dim_key (event_dimension)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>event_dim_key</remote-alias>
              <ordinal>14</ordinal>
              <family>event_dimension</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2708</approx-count>
              <contains-null>false</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>location1</remote-name>
              <remote-type>129</remote-type>
              <local-name>[location]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>location1</remote-alias>
              <ordinal>15</ordinal>
              <family>event_dimension</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>24</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>city1</remote-name>
              <remote-type>129</remote-type>
              <local-name>[city]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>city1</remote-alias>
              <ordinal>16</ordinal>
              <family>event_dimension</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>name</remote-name>
              <remote-type>129</remote-type>
              <local-name>[name]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>name</remote-alias>
              <ordinal>17</ordinal>
              <family>event_dimension</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>103</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>type</remote-name>
              <remote-type>129</remote-type>
              <local-name>[type]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>type</remote-alias>
              <ordinal>18</ordinal>
              <family>event_dimension</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>location_size</remote-name>
              <remote-type>20</remote-type>
              <local-name>[location_size]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>location_size</remote-alias>
              <ordinal>19</ordinal>
              <family>event_dimension</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>date_dim_key</remote-name>
              <remote-type>20</remote-type>
              <local-name>[date_dim_key (date_dimension)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>date_dim_key</remote-alias>
              <ordinal>20</ordinal>
              <family>date_dimension</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>8492</approx-count>
              <contains-null>false</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>full_date</remote-name>
              <remote-type>133</remote-type>
              <local-name>[full_date]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>full_date</remote-alias>
              <ordinal>21</ordinal>
              <family>date_dimension</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>8492</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>day</remote-name>
              <remote-type>20</remote-type>
              <local-name>[day]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>day</remote-alias>
              <ordinal>22</ordinal>
              <family>date_dimension</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>31</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>month</remote-name>
              <remote-type>20</remote-type>
              <local-name>[month]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>month</remote-alias>
              <ordinal>23</ordinal>
              <family>date_dimension</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>12</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>year</remote-name>
              <remote-type>20</remote-type>
              <local-name>[year]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>year</remote-alias>
              <ordinal>24</ordinal>
              <family>date_dimension</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>6</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>day_of_year</remote-name>
              <remote-type>20</remote-type>
              <local-name>[day_of_year]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>day_of_year</remote-alias>
              <ordinal>25</ordinal>
              <family>date_dimension</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>378</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>week_of_year</remote-name>
              <remote-type>20</remote-type>
              <local-name>[week_of_year]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>week_of_year</remote-alias>
              <ordinal>26</ordinal>
              <family>date_dimension</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>53</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>weekday</remote-name>
              <remote-type>20</remote-type>
              <local-name>[weekday]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>weekday</remote-alias>
              <ordinal>27</ordinal>
              <family>date_dimension</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>7</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>is_weekend</remote-name>
              <remote-type>11</remote-type>
              <local-name>[is_weekend]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>is_weekend</remote-alias>
              <ordinal>28</ordinal>
              <family>date_dimension</family>
              <local-type>boolean</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>quarter</remote-name>
              <remote-type>20</remote-type>
              <local-name>[quarter]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>quarter</remote-alias>
              <ordinal>29</ordinal>
              <family>date_dimension</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>4</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>is_month_start</remote-name>
              <remote-type>11</remote-type>
              <local-name>[is_month_start]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>is_month_start</remote-alias>
              <ordinal>30</ordinal>
              <family>date_dimension</family>
              <local-type>boolean</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>is_month_end</remote-name>
              <remote-type>11</remote-type>
              <local-name>[is_month_end]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>is_month_end</remote-alias>
              <ordinal>31</ordinal>
              <family>date_dimension</family>
              <local-type>boolean</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>is_year_start</remote-name>
              <remote-type>11</remote-type>
              <local-name>[is_year_start]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>is_year_start</remote-alias>
              <ordinal>32</ordinal>
              <family>date_dimension</family>
              <local-type>boolean</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>is_year_end</remote-name>
              <remote-type>11</remote-type>
              <local-name>[is_year_end]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>is_year_end</remote-alias>
              <ordinal>33</ordinal>
              <family>date_dimension</family>
              <local-type>boolean</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>is_can_holiday</remote-name>
              <remote-type>11</remote-type>
              <local-name>[is_can_holiday]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>is_can_holiday</remote-alias>
              <ordinal>34</ordinal>
              <family>date_dimension</family>
              <local-type>boolean</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>can_holiday_name</remote-name>
              <remote-type>129</remote-type>
              <local-name>[can_holiday_name]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>can_holiday_name</remote-alias>
              <ordinal>35</ordinal>
              <family>date_dimension</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>25</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>is_us_holiday</remote-name>
              <remote-type>11</remote-type>
              <local-name>[is_us_holiday]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>is_us_holiday</remote-alias>
              <ordinal>36</ordinal>
              <family>date_dimension</family>
              <local-type>boolean</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>us_holiday_name</remote-name>
              <remote-type>129</remote-type>
              <local-name>[us_holiday_name]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>us_holiday_name</remote-alias>
              <ordinal>37</ordinal>
              <family>date_dimension</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>21</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>location_dim_key</remote-name>
              <remote-type>20</remote-type>
              <local-name>[location_dim_key (location_dimension)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>location_dim_key</remote-alias>
              <ordinal>38</ordinal>
              <family>location_dimension</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>103967</approx-count>
              <contains-null>false</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>location</remote-name>
              <remote-type>129</remote-type>
              <local-name>[location (location_dimension)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>location</remote-alias>
              <ordinal>39</ordinal>
              <family>location_dimension</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>72524</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>neighborhood</remote-name>
              <remote-type>129</remote-type>
              <local-name>[neighborhood]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>neighborhood</remote-alias>
              <ordinal>40</ordinal>
              <family>location_dimension</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>126</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>latitude</remote-name>
              <remote-type>5</remote-type>
              <local-name>[latitude]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>latitude</remote-alias>
              <ordinal>41</ordinal>
              <family>location_dimension</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>82563</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>longitude</remote-name>
              <remote-type>5</remote-type>
              <local-name>[longitude]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>longitude</remote-alias>
              <ordinal>42</ordinal>
              <family>location_dimension</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>83239</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>city</remote-name>
              <remote-type>129</remote-type>
              <local-name>[city (location_dimension)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>city</remote-alias>
              <ordinal>43</ordinal>
              <family>location_dimension</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>crime_rate</remote-name>
              <remote-type>5</remote-type>
              <local-name>[crime_rate]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>crime_rate</remote-alias>
              <ordinal>44</ordinal>
              <family>location_dimension</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.789673' measure-ordering='alphabetic' measure-percentage='0.210327' show-structure='true' user-set-layout='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0xxzh3n1ngww291cy2y771tzroj8]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0xxzh3n1ngww291cy2y771tzroj8].[avg:Number of Records:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:Calculation_486670268635557890:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:day_of_year:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0xxzh3n1ngww291cy2y771tzroj8].[sum:Number of Records:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0xxzh3n1ngww291cy2y771tzroj8].[usr:Calculation_486670268635836419:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:city (location_dimension):nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Denver&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Vancouver&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:is_traffic:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>false</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>true</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:is_fatal:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>false</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>true</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:can_holiday_name:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Good Friday&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Boxing Day&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Christmas Day&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Thanksgiving&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Labour Day&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Christmas Day (Observed)&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Boxing Day (Observed)&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Civic Holiday&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Victoria Day&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;New Year&apos;s Day&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Family Day&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Canada Day&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;New Year&apos;s Day (Observed)&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Canada Day (Observed)&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:neighborhood:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Chaffee Park&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Civic Center&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;College View South Platte&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Kensington-Cedar Cottage&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Sloan Lake&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Barnum West&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Central Business District&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Five Points&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Jefferson Park&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;South Cambie&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Speer&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Mar Lee&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Montbello&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Musqueam&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Strathcona&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Washington Park West&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Whittier&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Cole&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Harvey Park&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Kennedy&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Marpole&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;West Colfax&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Hastings-Sunrise&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Lowry Field&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Southmoor Park&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Sunnyside&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Union Station&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;City Park&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Grandview-Woodland&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Lincoln Park&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Montclair&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Villa Park&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Hampden&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Overland&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Shaughnessy&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Valverde&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Arbutus Ridge&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Elyria Swansea&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Goldsmith&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Platt Park&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Stapleton&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;West End&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Auraria&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Dunbar-Southlands&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Northeast Park Hill&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;University Park&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Wellshire&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Athmar Park&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Baker&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Cory Merrill&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Renfrew-Collingwood&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;University&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Barnum&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;North Capitol Hill&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Skyland&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Victoria-Fraserview&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Windsor&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Highland&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Killarney&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;North Park Hill&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Rosedale&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Virginia Village&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Berkeley&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Clayton&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;DIA&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Indian Creek&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Kerrisdale&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Bear Valley&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Globeville&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;West Highland&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;West Point Grey&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Belcaro&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cherry Creek&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Marston&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Sunset&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Westwood&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;City Park West&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;East Colfax&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Harvey Park South&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Kitsilano&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Regis&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;CBD&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Cheesman Park&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Mount Pleasant&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Stanley Park&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Sun Valley&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Washington Park&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Congress Park&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Country Club&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Hale&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Hampden South&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Oakridge&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Fort Logan&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Gateway Green Valley Ranch&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Riley Park&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Ruby Hill&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;South Park Hill&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>%null%</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Capitol Hill&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Fairview&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Hilltop&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;University Hills&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Washington Virginia Vale&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:offense_category:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Other Crimes Against Persons&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Aggravated Assault&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Burglary&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Theft from Motor Vehicle&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Public Disorder&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Drug &amp; Alcohol&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;All Other Crimes&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Larceny&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Traffic Accident&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;White Collar Crime&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Robbery&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Murder&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Arson&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Sexual Assault&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Auto Theft&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Canada&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <shared-views>
    <shared-view name='federated.0xxzh3n1ngww291cy2y771tzroj8'>
      <datasources>
        <datasource caption='CrimeDataMart' name='federated.0xxzh3n1ngww291cy2y771tzroj8' />
      </datasources>
      <datasource-dependencies datasource='federated.0xxzh3n1ngww291cy2y771tzroj8'>
        <column datatype='string' name='[city (location_dimension)]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
        <column datatype='boolean' name='[is_fatal]' role='dimension' type='nominal' />
        <column datatype='boolean' name='[is_nighttime]' role='dimension' type='nominal' />
        <column datatype='boolean' name='[is_traffic]' role='dimension' type='nominal' />
        <column-instance column='[city (location_dimension)]' derivation='None' name='[none:city (location_dimension):nk]' pivot='key' type='nominal' />
        <column-instance column='[is_fatal]' derivation='None' name='[none:is_fatal:nk]' pivot='key' type='nominal' />
        <column-instance column='[is_nighttime]' derivation='None' name='[none:is_nighttime:nk]' pivot='key' type='nominal' />
        <column-instance column='[is_traffic]' derivation='None' name='[none:is_traffic:nk]' pivot='key' type='nominal' />
        <column-instance column='[offense_category]' derivation='None' name='[none:offense_category:nk]' pivot='key' type='nominal' />
        <column datatype='string' name='[offense_category]' role='dimension' type='nominal' />
      </datasource-dependencies>
      <filter class='categorical' column='[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:city (location_dimension):nk]'>
        <groupfilter function='level-members' level='[none:city (location_dimension):nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
        <target field='[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:city (location_dimension):nk]' />
      </filter>
      <filter class='categorical' column='[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:is_fatal:nk]'>
        <groupfilter function='level-members' level='[none:is_fatal:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
        <target field='[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:is_fatal:nk]' />
      </filter>
      <filter class='categorical' column='[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:is_nighttime:nk]'>
        <groupfilter function='level-members' level='[none:is_nighttime:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
        <target field='[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:is_nighttime:nk]' />
      </filter>
      <filter class='categorical' column='[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:is_traffic:nk]'>
        <groupfilter function='level-members' level='[none:is_traffic:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
        <target field='[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:is_traffic:nk]' />
      </filter>
      <filter class='categorical' column='[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:offense_category:nk]'>
        <groupfilter function='level-members' level='[none:offense_category:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
        <target field='[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:offense_category:nk]' />
      </filter>
    </shared-view>
  </shared-views>
  <actions>
    <action caption='Filter 1 (generated) 1' name='[Action7]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='CrimeDataMart Overview' type='sheet' worksheet='Map' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='CrimeDataMart Overview' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Average crimes per weekday'>
      <table>
        <view>
          <datasources>
            <datasource caption='CrimeDataMart' name='federated.0xxzh3n1ngww291cy2y771tzroj8' />
          </datasources>
          <datasource-dependencies datasource='federated.0xxzh3n1ngww291cy2y771tzroj8'>
            <column caption='SUM([Number of Records])/countd([date_dim_key])' datatype='real' name='[Calculation_486670268635836419]' role='measure' type='quantitative' user:unnamed='Sheet 13'>
              <calculation class='tableau' formula='SUM([Number of Records])/countd([date_dim_key])' />
            </column>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column datatype='string' name='[city (location_dimension)]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column aggregation='Sum' datatype='integer' name='[date_dim_key]' role='dimension' type='ordinal' />
            <column datatype='boolean' name='[is_fatal]' role='dimension' type='nominal' />
            <column datatype='boolean' name='[is_nighttime]' role='dimension' type='nominal' />
            <column datatype='boolean' name='[is_traffic]' role='dimension' type='nominal' />
            <column-instance column='[city (location_dimension)]' derivation='None' name='[none:city (location_dimension):nk]' pivot='key' type='nominal' />
            <column-instance column='[is_fatal]' derivation='None' name='[none:is_fatal:nk]' pivot='key' type='nominal' />
            <column-instance column='[is_nighttime]' derivation='None' name='[none:is_nighttime:nk]' pivot='key' type='nominal' />
            <column-instance column='[is_traffic]' derivation='None' name='[none:is_traffic:nk]' pivot='key' type='nominal' />
            <column-instance column='[offense_category]' derivation='None' name='[none:offense_category:nk]' pivot='key' type='nominal' />
            <column-instance column='[weekday]' derivation='None' name='[none:weekday:ok]' pivot='key' type='ordinal' />
            <column datatype='string' name='[offense_category]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_486670268635836419]' derivation='User' name='[usr:Calculation_486670268635836419:qk]' pivot='key' type='quantitative' />
            <column aggregation='Sum' datatype='integer' name='[weekday]' role='dimension' type='ordinal' />
          </datasource-dependencies>
          <slices>
            <column>[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:city (location_dimension):nk]</column>
            <column>[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:offense_category:nk]</column>
            <column>[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:is_traffic:nk]</column>
            <column>[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:is_nighttime:nk]</column>
            <column>[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:is_fatal:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0xxzh3n1ngww291cy2y771tzroj8].[usr:Calculation_486670268635836419:qk]' scope='cols' value='Average crimes' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:offense_category:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:weekday:ok]</rows>
        <cols>[federated.0xxzh3n1ngww291cy2y771tzroj8].[usr:Calculation_486670268635836419:qk]</cols>
      </table>
      <simple-id uuid='{3E1C7D71-A324-4EFC-BB02-579E9FB4EF4C}' />
    </worksheet>
    <worksheet name='Crime start times'>
      <table>
        <view>
          <datasources>
            <datasource caption='CrimeDataMart' name='federated.0xxzh3n1ngww291cy2y771tzroj8' />
          </datasources>
          <datasource-dependencies datasource='federated.0xxzh3n1ngww291cy2y771tzroj8'>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column datatype='string' name='[city (location_dimension)]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column aggregation='Hour' datatype='datetime' name='[first_occurrence_time]' role='dimension' type='ordinal' />
            <column-instance column='[first_occurrence_time]' derivation='Hour' name='[hr:first_occurrence_time:qk]' pivot='key' type='quantitative' />
            <column datatype='boolean' name='[is_fatal]' role='dimension' type='nominal' />
            <column datatype='boolean' name='[is_nighttime]' role='dimension' type='nominal' />
            <column datatype='boolean' name='[is_traffic]' role='dimension' type='nominal' />
            <column-instance column='[city (location_dimension)]' derivation='None' name='[none:city (location_dimension):nk]' pivot='key' type='nominal' />
            <column-instance column='[is_fatal]' derivation='None' name='[none:is_fatal:nk]' pivot='key' type='nominal' />
            <column-instance column='[is_nighttime]' derivation='None' name='[none:is_nighttime:nk]' pivot='key' type='nominal' />
            <column-instance column='[is_traffic]' derivation='None' name='[none:is_traffic:nk]' pivot='key' type='nominal' />
            <column-instance column='[offense_category]' derivation='None' name='[none:offense_category:nk]' pivot='key' type='nominal' />
            <column datatype='string' name='[offense_category]' role='dimension' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <slices>
            <column>[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:city (location_dimension):nk]</column>
            <column>[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:offense_category:nk]</column>
            <column>[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:is_traffic:nk]</column>
            <column>[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:is_nighttime:nk]</column>
            <column>[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:is_fatal:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:offense_category:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0xxzh3n1ngww291cy2y771tzroj8].[sum:Number of Records:qk]</rows>
        <cols>[federated.0xxzh3n1ngww291cy2y771tzroj8].[hr:first_occurrence_time:qk]</cols>
      </table>
      <simple-id uuid='{3934E266-CF26-4F40-A682-8C7B77A15ECA}' />
    </worksheet>
    <worksheet name='Crimes by category'>
      <table>
        <view>
          <datasources>
            <datasource caption='CrimeDataMart' name='federated.0xxzh3n1ngww291cy2y771tzroj8' />
          </datasources>
          <datasource-dependencies datasource='federated.0xxzh3n1ngww291cy2y771tzroj8'>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column datatype='string' name='[city (location_dimension)]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column datatype='boolean' name='[is_fatal]' role='dimension' type='nominal' />
            <column datatype='boolean' name='[is_nighttime]' role='dimension' type='nominal' />
            <column datatype='boolean' name='[is_traffic]' role='dimension' type='nominal' />
            <column aggregation='Avg' datatype='real' name='[latitude]' role='dimension' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' datatype='real' name='[longitude]' role='dimension' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column-instance column='[city (location_dimension)]' derivation='None' name='[none:city (location_dimension):nk]' pivot='key' type='nominal' />
            <column-instance column='[is_fatal]' derivation='None' name='[none:is_fatal:nk]' pivot='key' type='nominal' />
            <column-instance column='[is_nighttime]' derivation='None' name='[none:is_nighttime:nk]' pivot='key' type='nominal' />
            <column-instance column='[is_traffic]' derivation='None' name='[none:is_traffic:nk]' pivot='key' type='nominal' />
            <column-instance column='[latitude]' derivation='None' name='[none:latitude:ok]' pivot='key' type='ordinal' />
            <column-instance column='[longitude]' derivation='None' name='[none:longitude:ok]' pivot='key' type='ordinal' />
            <column-instance column='[offense_category]' derivation='None' name='[none:offense_category:nk]' pivot='key' type='nominal' />
            <column datatype='string' name='[offense_category]' role='dimension' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0xxzh3n1ngww291cy2y771tzroj8].[Action (city (location_dimension))]'>
            <groupfilter function='level-members' level='[city (location_dimension)]' user:ui-action-filter='[Action2]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0xxzh3n1ngww291cy2y771tzroj8].[Action (is_fatal)]'>
            <groupfilter function='level-members' level='[is_fatal]' user:ui-action-filter='[Action4]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0xxzh3n1ngww291cy2y771tzroj8].[Action (is_nighttime)]'>
            <groupfilter function='level-members' level='[is_nighttime]' user:ui-action-filter='[Action5]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0xxzh3n1ngww291cy2y771tzroj8].[Action (is_traffic)]'>
            <groupfilter function='level-members' level='[is_traffic]' user:ui-action-filter='[Action3]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0xxzh3n1ngww291cy2y771tzroj8].[Action (latitude,longitude,offense_category)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:latitude:ok]' />
              <groupfilter function='level-members' level='[none:longitude:ok]' />
              <groupfilter function='level-members' level='[offense_category]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0xxzh3n1ngww291cy2y771tzroj8].[Action (offense_category)]'>
            <groupfilter function='level-members' level='[offense_category]' user:ui-action-filter='[Action6]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <computed-sort column='[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:offense_category:nk]' direction='DESC' using='[federated.0xxzh3n1ngww291cy2y771tzroj8].[sum:Number of Records:qk]' />
          <slices>
            <column>[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:city (location_dimension):nk]</column>
            <column>[federated.0xxzh3n1ngww291cy2y771tzroj8].[Action (latitude,longitude,offense_category)]</column>
            <column>[federated.0xxzh3n1ngww291cy2y771tzroj8].[Action (city (location_dimension))]</column>
            <column>[federated.0xxzh3n1ngww291cy2y771tzroj8].[Action (is_traffic)]</column>
            <column>[federated.0xxzh3n1ngww291cy2y771tzroj8].[Action (is_fatal)]</column>
            <column>[federated.0xxzh3n1ngww291cy2y771tzroj8].[Action (is_nighttime)]</column>
            <column>[federated.0xxzh3n1ngww291cy2y771tzroj8].[Action (offense_category)]</column>
            <column>[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:offense_category:nk]</column>
            <column>[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:is_traffic:nk]</column>
            <column>[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:is_nighttime:nk]</column>
            <column>[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:is_fatal:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0xxzh3n1ngww291cy2y771tzroj8].[sum:Number of Records:qk]' field-type='quantitative' max='132398' min='-692' range-type='fixed' scope='cols' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:offense_category:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:offense_category:nk]</rows>
        <cols>[federated.0xxzh3n1ngww291cy2y771tzroj8].[sum:Number of Records:qk]</cols>
      </table>
      <simple-id uuid='{3E7628C7-DD30-4203-A075-D5659A2B2727}' />
    </worksheet>
    <worksheet name='Crimes on Holidays'>
      <table>
        <view>
          <datasources>
            <datasource caption='CrimeDataMart' name='federated.0xxzh3n1ngww291cy2y771tzroj8' />
          </datasources>
          <datasource-dependencies datasource='federated.0xxzh3n1ngww291cy2y771tzroj8'>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column datatype='string' name='[can_holiday_name]' role='dimension' type='nominal' />
            <column datatype='string' name='[city (location_dimension)]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column datatype='boolean' name='[is_can_holiday]' role='dimension' type='nominal' />
            <column datatype='boolean' name='[is_fatal]' role='dimension' type='nominal' />
            <column datatype='boolean' name='[is_nighttime]' role='dimension' type='nominal' />
            <column datatype='boolean' name='[is_traffic]' role='dimension' type='nominal' />
            <column-instance column='[can_holiday_name]' derivation='None' name='[none:can_holiday_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[city (location_dimension)]' derivation='None' name='[none:city (location_dimension):nk]' pivot='key' type='nominal' />
            <column-instance column='[is_can_holiday]' derivation='None' name='[none:is_can_holiday:nk]' pivot='key' type='nominal' />
            <column-instance column='[is_fatal]' derivation='None' name='[none:is_fatal:nk]' pivot='key' type='nominal' />
            <column-instance column='[is_nighttime]' derivation='None' name='[none:is_nighttime:nk]' pivot='key' type='nominal' />
            <column-instance column='[is_traffic]' derivation='None' name='[none:is_traffic:nk]' pivot='key' type='nominal' />
            <column-instance column='[offense_category]' derivation='None' name='[none:offense_category:nk]' pivot='key' type='nominal' />
            <column datatype='string' name='[offense_category]' role='dimension' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0xxzh3n1ngww291cy2y771tzroj8].[Action (city (location_dimension))]'>
            <groupfilter function='level-members' level='[city (location_dimension)]' user:ui-action-filter='[Action2]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0xxzh3n1ngww291cy2y771tzroj8].[Action (is_fatal)]'>
            <groupfilter function='level-members' level='[is_fatal]' user:ui-action-filter='[Action4]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0xxzh3n1ngww291cy2y771tzroj8].[Action (is_nighttime)]'>
            <groupfilter function='level-members' level='[is_nighttime]' user:ui-action-filter='[Action5]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0xxzh3n1ngww291cy2y771tzroj8].[Action (is_traffic)]'>
            <groupfilter function='level-members' level='[is_traffic]' user:ui-action-filter='[Action3]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0xxzh3n1ngww291cy2y771tzroj8].[Action (offense_category)]'>
            <groupfilter function='level-members' level='[offense_category]' user:ui-action-filter='[Action6]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:is_can_holiday:nk]'>
            <groupfilter function='member' level='[none:is_can_holiday:nk]' member='true' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:can_holiday_name:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0xxzh3n1ngww291cy2y771tzroj8].[sum:Number of Records:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:is_can_holiday:nk]</column>
            <column>[federated.0xxzh3n1ngww291cy2y771tzroj8].[Action (is_nighttime)]</column>
            <column>[federated.0xxzh3n1ngww291cy2y771tzroj8].[Action (offense_category)]</column>
            <column>[federated.0xxzh3n1ngww291cy2y771tzroj8].[Action (city (location_dimension))]</column>
            <column>[federated.0xxzh3n1ngww291cy2y771tzroj8].[Action (is_fatal)]</column>
            <column>[federated.0xxzh3n1ngww291cy2y771tzroj8].[Action (is_traffic)]</column>
            <column>[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:offense_category:nk]</column>
            <column>[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:is_traffic:nk]</column>
            <column>[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:city (location_dimension):nk]</column>
            <column>[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:is_nighttime:nk]</column>
            <column>[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:is_fatal:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0xxzh3n1ngww291cy2y771tzroj8].[sum:Number of Records:qk]' field-type='quantitative' max='2086' min='0' range-type='fixed' scope='cols' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:can_holiday_name:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:can_holiday_name:nk]</rows>
        <cols>[federated.0xxzh3n1ngww291cy2y771tzroj8].[sum:Number of Records:qk]</cols>
      </table>
      <simple-id uuid='{204DA446-2719-44D6-9369-9746AF8D2E58}' />
    </worksheet>
    <worksheet name='Crimes per neighborhood'>
      <table>
        <view>
          <datasources>
            <datasource caption='CrimeDataMart' name='federated.0xxzh3n1ngww291cy2y771tzroj8' />
          </datasources>
          <datasource-dependencies datasource='federated.0xxzh3n1ngww291cy2y771tzroj8'>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column datatype='string' name='[city (location_dimension)]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column datatype='boolean' name='[is_fatal]' role='dimension' type='nominal' />
            <column datatype='boolean' name='[is_nighttime]' role='dimension' type='nominal' />
            <column datatype='boolean' name='[is_traffic]' role='dimension' type='nominal' />
            <column aggregation='Avg' datatype='real' name='[latitude]' role='dimension' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' datatype='real' name='[longitude]' role='dimension' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column datatype='string' name='[neighborhood]' role='dimension' type='nominal' />
            <column-instance column='[city (location_dimension)]' derivation='None' name='[none:city (location_dimension):nk]' pivot='key' type='nominal' />
            <column-instance column='[is_fatal]' derivation='None' name='[none:is_fatal:nk]' pivot='key' type='nominal' />
            <column-instance column='[is_nighttime]' derivation='None' name='[none:is_nighttime:nk]' pivot='key' type='nominal' />
            <column-instance column='[is_traffic]' derivation='None' name='[none:is_traffic:nk]' pivot='key' type='nominal' />
            <column-instance column='[latitude]' derivation='None' name='[none:latitude:ok]' pivot='key' type='ordinal' />
            <column-instance column='[longitude]' derivation='None' name='[none:longitude:ok]' pivot='key' type='ordinal' />
            <column-instance column='[neighborhood]' derivation='None' name='[none:neighborhood:nk]' pivot='key' type='nominal' />
            <column-instance column='[offense_category]' derivation='None' name='[none:offense_category:nk]' pivot='key' type='nominal' />
            <column datatype='string' name='[offense_category]' role='dimension' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0xxzh3n1ngww291cy2y771tzroj8].[Action (city (location_dimension))]'>
            <groupfilter function='level-members' level='[city (location_dimension)]' user:ui-action-filter='[Action2]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0xxzh3n1ngww291cy2y771tzroj8].[Action (is_fatal)]'>
            <groupfilter function='level-members' level='[is_fatal]' user:ui-action-filter='[Action4]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0xxzh3n1ngww291cy2y771tzroj8].[Action (is_nighttime)]'>
            <groupfilter function='level-members' level='[is_nighttime]' user:ui-action-filter='[Action5]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0xxzh3n1ngww291cy2y771tzroj8].[Action (is_traffic)]'>
            <groupfilter function='level-members' level='[is_traffic]' user:ui-action-filter='[Action3]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0xxzh3n1ngww291cy2y771tzroj8].[Action (latitude,longitude,offense_category)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:latitude:ok]' />
              <groupfilter function='level-members' level='[none:longitude:ok]' />
              <groupfilter function='level-members' level='[offense_category]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0xxzh3n1ngww291cy2y771tzroj8].[Action (offense_category)]'>
            <groupfilter function='level-members' level='[offense_category]' user:ui-action-filter='[Action6]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <computed-sort column='[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:neighborhood:nk]' direction='DESC' using='[federated.0xxzh3n1ngww291cy2y771tzroj8].[sum:Number of Records:qk]' />
          <slices>
            <column>[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:city (location_dimension):nk]</column>
            <column>[federated.0xxzh3n1ngww291cy2y771tzroj8].[Action (latitude,longitude,offense_category)]</column>
            <column>[federated.0xxzh3n1ngww291cy2y771tzroj8].[Action (city (location_dimension))]</column>
            <column>[federated.0xxzh3n1ngww291cy2y771tzroj8].[Action (is_traffic)]</column>
            <column>[federated.0xxzh3n1ngww291cy2y771tzroj8].[Action (is_fatal)]</column>
            <column>[federated.0xxzh3n1ngww291cy2y771tzroj8].[Action (is_nighttime)]</column>
            <column>[federated.0xxzh3n1ngww291cy2y771tzroj8].[Action (offense_category)]</column>
            <column>[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:offense_category:nk]</column>
            <column>[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:is_traffic:nk]</column>
            <column>[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:is_nighttime:nk]</column>
            <column>[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:is_fatal:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:neighborhood:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:neighborhood:nk]</rows>
        <cols>[federated.0xxzh3n1ngww291cy2y771tzroj8].[sum:Number of Records:qk]</cols>
      </table>
      <simple-id uuid='{32D25B72-63F2-43FE-BEEE-BCAF5EEC9A71}' />
    </worksheet>
    <worksheet name='Map'>
      <table>
        <view>
          <datasources>
            <datasource caption='CrimeDataMart' name='federated.0xxzh3n1ngww291cy2y771tzroj8' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0xxzh3n1ngww291cy2y771tzroj8'>
            <column datatype='string' name='[city (location_dimension)]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column datatype='boolean' name='[is_fatal]' role='dimension' type='nominal' />
            <column datatype='boolean' name='[is_nighttime]' role='dimension' type='nominal' />
            <column datatype='boolean' name='[is_traffic]' role='dimension' type='nominal' />
            <column aggregation='Avg' datatype='real' name='[latitude]' role='dimension' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' datatype='real' name='[longitude]' role='dimension' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column-instance column='[city (location_dimension)]' derivation='None' name='[none:city (location_dimension):nk]' pivot='key' type='nominal' />
            <column-instance column='[is_fatal]' derivation='None' name='[none:is_fatal:nk]' pivot='key' type='nominal' />
            <column-instance column='[is_nighttime]' derivation='None' name='[none:is_nighttime:nk]' pivot='key' type='nominal' />
            <column-instance column='[is_traffic]' derivation='None' name='[none:is_traffic:nk]' pivot='key' type='nominal' />
            <column-instance column='[latitude]' derivation='None' name='[none:latitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[longitude]' derivation='None' name='[none:longitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[offense_category]' derivation='None' name='[none:offense_category:nk]' pivot='key' type='nominal' />
            <column datatype='string' name='[offense_category]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <manual-sort column='[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:offense_category:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Aggravated Assault&quot;</bucket>
              <bucket>&quot;All Other Crimes&quot;</bucket>
              <bucket>&quot;Arson&quot;</bucket>
              <bucket>&quot;Auto Theft&quot;</bucket>
              <bucket>&quot;Burglary&quot;</bucket>
              <bucket>&quot;Drug &amp; Alcohol&quot;</bucket>
              <bucket>&quot;Larceny&quot;</bucket>
              <bucket>&quot;Murder&quot;</bucket>
              <bucket>&quot;Other Crimes Against Persons&quot;</bucket>
              <bucket>&quot;Public Disorder&quot;</bucket>
              <bucket>&quot;Robbery&quot;</bucket>
              <bucket>&quot;Sexual Assault&quot;</bucket>
              <bucket>&quot;Theft from Motor Vehicle&quot;</bucket>
              <bucket>&quot;Traffic Accident&quot;</bucket>
              <bucket>&quot;White Collar Crime&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:city (location_dimension):nk]</column>
            <column>[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:offense_category:nk]</column>
            <column>[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:is_traffic:nk]</column>
            <column>[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:is_nighttime:nk]</column>
            <column>[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:is_fatal:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:latitude:qk]' field-type='quantitative' max='4851612.2951447489' min='4804478.6151468623' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
            <encoding attr='space' class='0' field='[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:longitude:qk]' field-type='quantitative' max='-11622356.213872802' min='-11737983.244127262' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='normal' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:offense_category:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.29585635662078857' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:latitude:qk]</rows>
        <cols>[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:longitude:qk]</cols>
      </table>
      <simple-id uuid='{A252DBE5-8657-48C1-B611-34C80CF751DE}' />
    </worksheet>
    <worksheet name='Offense categories time series'>
      <table>
        <view>
          <datasources>
            <datasource caption='CrimeDataMart' name='federated.0xxzh3n1ngww291cy2y771tzroj8' />
          </datasources>
          <datasource-dependencies datasource='federated.0xxzh3n1ngww291cy2y771tzroj8'>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column datatype='string' name='[city (location_dimension)]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column datatype='date' name='[full_date]' role='dimension' type='ordinal' />
            <column datatype='boolean' name='[is_fatal]' role='dimension' type='nominal' />
            <column datatype='boolean' name='[is_nighttime]' role='dimension' type='nominal' />
            <column datatype='boolean' name='[is_traffic]' role='dimension' type='nominal' />
            <column aggregation='Avg' datatype='real' name='[latitude]' role='dimension' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' datatype='real' name='[longitude]' role='dimension' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column-instance column='[city (location_dimension)]' derivation='None' name='[none:city (location_dimension):nk]' pivot='key' type='nominal' />
            <column-instance column='[is_fatal]' derivation='None' name='[none:is_fatal:nk]' pivot='key' type='nominal' />
            <column-instance column='[is_nighttime]' derivation='None' name='[none:is_nighttime:nk]' pivot='key' type='nominal' />
            <column-instance column='[is_traffic]' derivation='None' name='[none:is_traffic:nk]' pivot='key' type='nominal' />
            <column-instance column='[latitude]' derivation='None' name='[none:latitude:ok]' pivot='key' type='ordinal' />
            <column-instance column='[longitude]' derivation='None' name='[none:longitude:ok]' pivot='key' type='ordinal' />
            <column-instance column='[offense_category]' derivation='None' name='[none:offense_category:nk]' pivot='key' type='nominal' />
            <column datatype='string' name='[offense_category]' role='dimension' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
            <column-instance column='[full_date]' derivation='Week-Trunc' name='[twk:full_date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0xxzh3n1ngww291cy2y771tzroj8].[Action (city (location_dimension))]'>
            <groupfilter function='level-members' level='[city (location_dimension)]' user:ui-action-filter='[Action2]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0xxzh3n1ngww291cy2y771tzroj8].[Action (is_fatal)]'>
            <groupfilter function='level-members' level='[is_fatal]' user:ui-action-filter='[Action4]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0xxzh3n1ngww291cy2y771tzroj8].[Action (is_nighttime)]'>
            <groupfilter function='level-members' level='[is_nighttime]' user:ui-action-filter='[Action5]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0xxzh3n1ngww291cy2y771tzroj8].[Action (is_traffic)]'>
            <groupfilter function='level-members' level='[is_traffic]' user:ui-action-filter='[Action3]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0xxzh3n1ngww291cy2y771tzroj8].[Action (latitude,longitude,offense_category)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:latitude:ok]' />
              <groupfilter function='level-members' level='[none:longitude:ok]' />
              <groupfilter function='level-members' level='[offense_category]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0xxzh3n1ngww291cy2y771tzroj8].[Action (offense_category)]'>
            <groupfilter function='level-members' level='[offense_category]' user:ui-action-filter='[Action6]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.0xxzh3n1ngww291cy2y771tzroj8].[twk:full_date:qk]' included-values='in-range'>
            <min>#2016-12-14 00:00:00#</min>
            <max>#2019-02-23 23:59:59#</max>
          </filter>
          <slices>
            <column>[federated.0xxzh3n1ngww291cy2y771tzroj8].[twk:full_date:qk]</column>
            <column>[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:city (location_dimension):nk]</column>
            <column>[federated.0xxzh3n1ngww291cy2y771tzroj8].[Action (latitude,longitude,offense_category)]</column>
            <column>[federated.0xxzh3n1ngww291cy2y771tzroj8].[Action (city (location_dimension))]</column>
            <column>[federated.0xxzh3n1ngww291cy2y771tzroj8].[Action (is_traffic)]</column>
            <column>[federated.0xxzh3n1ngww291cy2y771tzroj8].[Action (is_fatal)]</column>
            <column>[federated.0xxzh3n1ngww291cy2y771tzroj8].[Action (is_nighttime)]</column>
            <column>[federated.0xxzh3n1ngww291cy2y771tzroj8].[Action (offense_category)]</column>
            <column>[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:offense_category:nk]</column>
            <column>[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:is_traffic:nk]</column>
            <column>[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:is_nighttime:nk]</column>
            <column>[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:is_fatal:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:offense_category:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0xxzh3n1ngww291cy2y771tzroj8].[sum:Number of Records:qk]</rows>
        <cols>[federated.0xxzh3n1ngww291cy2y771tzroj8].[twk:full_date:qk]</cols>
      </table>
      <simple-id uuid='{5074A906-D309-4C3A-B88D-53423878871F}' />
    </worksheet>
    <worksheet name='Overtime'>
      <table>
        <view>
          <datasources>
            <datasource caption='CrimeDataMart' name='federated.0xxzh3n1ngww291cy2y771tzroj8' />
          </datasources>
          <datasource-dependencies datasource='federated.0xxzh3n1ngww291cy2y771tzroj8'>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column datatype='string' name='[city (location_dimension)]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column datatype='date' name='[full_date]' role='dimension' type='ordinal' />
            <column datatype='boolean' name='[is_fatal]' role='dimension' type='nominal' />
            <column datatype='boolean' name='[is_nighttime]' role='dimension' type='nominal' />
            <column datatype='boolean' name='[is_traffic]' role='dimension' type='nominal' />
            <column aggregation='Avg' datatype='real' name='[latitude]' role='dimension' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' datatype='real' name='[longitude]' role='dimension' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column-instance column='[city (location_dimension)]' derivation='None' name='[none:city (location_dimension):nk]' pivot='key' type='nominal' />
            <column-instance column='[full_date]' derivation='None' name='[none:full_date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[is_fatal]' derivation='None' name='[none:is_fatal:nk]' pivot='key' type='nominal' />
            <column-instance column='[is_nighttime]' derivation='None' name='[none:is_nighttime:nk]' pivot='key' type='nominal' />
            <column-instance column='[is_traffic]' derivation='None' name='[none:is_traffic:nk]' pivot='key' type='nominal' />
            <column-instance column='[latitude]' derivation='None' name='[none:latitude:ok]' pivot='key' type='ordinal' />
            <column-instance column='[longitude]' derivation='None' name='[none:longitude:ok]' pivot='key' type='ordinal' />
            <column-instance column='[offense_category]' derivation='None' name='[none:offense_category:nk]' pivot='key' type='nominal' />
            <column datatype='string' name='[offense_category]' role='dimension' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
            <column-instance column='[full_date]' derivation='Day-Trunc' name='[tdy:full_date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0xxzh3n1ngww291cy2y771tzroj8].[Action (city (location_dimension))]'>
            <groupfilter function='level-members' level='[city (location_dimension)]' user:ui-action-filter='[Action2]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0xxzh3n1ngww291cy2y771tzroj8].[Action (is_fatal)]'>
            <groupfilter function='level-members' level='[is_fatal]' user:ui-action-filter='[Action4]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0xxzh3n1ngww291cy2y771tzroj8].[Action (is_nighttime)]'>
            <groupfilter function='member' level='[is_nighttime]' member='true' user:ui-action-filter='[Action5]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0xxzh3n1ngww291cy2y771tzroj8].[Action (is_traffic)]'>
            <groupfilter function='level-members' level='[is_traffic]' user:ui-action-filter='[Action3]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0xxzh3n1ngww291cy2y771tzroj8].[Action (latitude,longitude,offense_category)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:latitude:ok]' />
              <groupfilter function='level-members' level='[none:longitude:ok]' />
              <groupfilter function='level-members' level='[offense_category]' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:full_date:qk]' included-values='in-range'>
            <min>#2015-01-02#</min>
            <max>#2020-01-28#</max>
          </filter>
          <filter class='quantitative' column='[federated.0xxzh3n1ngww291cy2y771tzroj8].[tdy:full_date:qk]' included-values='in-range-or-null'>
            <min>#2015-01-02 00:00:00#</min>
            <max>#2020-02-28 00:00:00#</max>
          </filter>
          <slices>
            <column>[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:city (location_dimension):nk]</column>
            <column>[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:full_date:qk]</column>
            <column>[federated.0xxzh3n1ngww291cy2y771tzroj8].[tdy:full_date:qk]</column>
            <column>[federated.0xxzh3n1ngww291cy2y771tzroj8].[Action (latitude,longitude,offense_category)]</column>
            <column>[federated.0xxzh3n1ngww291cy2y771tzroj8].[Action (city (location_dimension))]</column>
            <column>[federated.0xxzh3n1ngww291cy2y771tzroj8].[Action (is_traffic)]</column>
            <column>[federated.0xxzh3n1ngww291cy2y771tzroj8].[Action (is_fatal)]</column>
            <column>[federated.0xxzh3n1ngww291cy2y771tzroj8].[Action (is_nighttime)]</column>
            <column>[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:offense_category:nk]</column>
            <column>[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:is_traffic:nk]</column>
            <column>[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:is_nighttime:nk]</column>
            <column>[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:is_fatal:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.0xxzh3n1ngww291cy2y771tzroj8].[sum:Number of Records:qk]</rows>
        <cols>[federated.0xxzh3n1ngww291cy2y771tzroj8].[tdy:full_date:qk]</cols>
      </table>
      <simple-id uuid='{8D83A1D8-6B04-4414-B4CC-7C0F49A2550E}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='CrimeDataMart Overview'>
      <layout-options>
        <title>
          <formatted-text>
            <run>CrimeDataMart Overview&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <style />
      <size maxheight='1080' maxwidth='1900' minheight='1080' minwidth='1900' preset-index='17' sizing-mode='fixed' />
      <datasources>
        <datasource caption='CrimeDataMart' name='federated.0xxzh3n1ngww291cy2y771tzroj8' />
      </datasources>
      <datasource-dependencies datasource='federated.0xxzh3n1ngww291cy2y771tzroj8'>
        <column datatype='string' name='[city (location_dimension)]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
        <column datatype='date' name='[full_date]' role='dimension' type='ordinal' />
        <column datatype='boolean' name='[is_fatal]' role='dimension' type='nominal' />
        <column datatype='boolean' name='[is_nighttime]' role='dimension' type='nominal' />
        <column datatype='boolean' name='[is_traffic]' role='dimension' type='nominal' />
        <column-instance column='[city (location_dimension)]' derivation='None' name='[none:city (location_dimension):nk]' pivot='key' type='nominal' />
        <column-instance column='[is_fatal]' derivation='None' name='[none:is_fatal:nk]' pivot='key' type='nominal' />
        <column-instance column='[is_nighttime]' derivation='None' name='[none:is_nighttime:nk]' pivot='key' type='nominal' />
        <column-instance column='[is_traffic]' derivation='None' name='[none:is_traffic:nk]' pivot='key' type='nominal' />
        <column-instance column='[offense_category]' derivation='None' name='[none:offense_category:nk]' pivot='key' type='nominal' />
        <column datatype='string' name='[offense_category]' role='dimension' type='nominal' />
        <column-instance column='[full_date]' derivation='Week-Trunc' name='[twk:full_date:qk]' pivot='key' type='quantitative' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98518' id='225' param='horz' type='layout-flow' w='99158' x='421' y='741'>
            <zone h='98518' id='205' param='horz' type='layout-flow' w='99158' x='421' y='741'>
              <zone h='98518' id='196' param='horz' type='layout-flow' w='99158' x='421' y='741'>
                <zone h='98518' id='177' param='horz' type='layout-flow' w='99158' x='421' y='741'>
                  <zone h='98518' id='164' param='horz' type='layout-flow' w='99158' x='421' y='741'>
                    <zone h='98518' id='154' param='horz' type='layout-flow' w='99158' x='421' y='741'>
                      <zone h='98518' id='152' param='horz' type='layout-flow' w='99158' x='421' y='741'>
                        <zone h='98518' id='149' param='horz' type='layout-flow' w='99158' x='421' y='741'>
                          <zone h='98518' id='109' param='horz' type='layout-flow' w='99158' x='421' y='741'>
                            <zone h='98518' id='85' param='horz' type='layout-flow' w='99158' x='421' y='741'>
                              <zone h='98518' id='51' param='horz' type='layout-flow' w='99158' x='421' y='741'>
                                <zone h='98518' id='49' param='vert' type='layout-flow' w='99158' x='421' y='741'>
                                  <zone fixed-size='29' h='3426' id='45' is-fixed='true' type='title' w='99158' x='421' y='741'>
                                    <zone-style>
                                      <format attr='border-color' value='#000000' />
                                      <format attr='border-style' value='none' />
                                      <format attr='border-width' value='0' />
                                      <format attr='margin' value='4' />
                                    </zone-style>
                                  </zone>
                                  <zone h='95092' id='15' param='vert' type='layout-flow' w='99158' x='421' y='4167'>
                                    <zone h='95092' id='13' param='vert' type='layout-flow' w='99158' x='421' y='4167'>
                                      <zone h='95092' id='7' param='horz' type='layout-flow' w='99158' x='421' y='4167'>
                                        <zone h='95092' id='5' param='horz' type='layout-flow' w='53684' x='421' y='4167'>
                                          <zone h='95092' id='3' type='layout-basic' w='53684' x='421' y='4167'>
                                            <zone h='35462' id='1' name='Map' w='43195' x='421' y='4167'>
                                              <zone-style>
                                                <format attr='border-color' value='#000000' />
                                                <format attr='border-style' value='none' />
                                                <format attr='border-width' value='0' />
                                                <format attr='margin' value='4' />
                                              </zone-style>
                                            </zone>
                                            <zone h='22685' id='155' name='Map' param='[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:is_fatal:nk]' type='filter' values='database' w='10489' x='43616' y='76574'>
                                              <zone-style>
                                                <format attr='border-color' value='#000000' />
                                                <format attr='border-style' value='none' />
                                                <format attr='border-width' value='0' />
                                                <format attr='margin' value='4' />
                                              </zone-style>
                                            </zone>
                                            <zone h='13614' id='156' name='Map' param='[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:is_nighttime:nk]' type='filter' values='database' w='10489' x='43616' y='49997'>
                                              <zone-style>
                                                <format attr='border-color' value='#000000' />
                                                <format attr='border-style' value='none' />
                                                <format attr='border-width' value='0' />
                                                <format attr='margin' value='4' />
                                              </zone-style>
                                            </zone>
                                            <zone h='34259' id='150' name='Map' param='[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:offense_category:nk]' type='filter' values='database' w='10489' x='43616' y='15738'>
                                              <zone-style>
                                                <format attr='border-color' value='#000000' />
                                                <format attr='border-style' value='none' />
                                                <format attr='border-width' value='0' />
                                                <format attr='margin' value='4' />
                                              </zone-style>
                                            </zone>
                                            <zone h='7777' id='52' name='Offense categories time series' param='[federated.0xxzh3n1ngww291cy2y771tzroj8].[twk:full_date:qk]' type='filter' values='database' w='43195' x='421' y='39629'>
                                              <zone-style>
                                                <format attr='border-color' value='#000000' />
                                                <format attr='border-style' value='none' />
                                                <format attr='border-width' value='0' />
                                                <format attr='margin' value='4' />
                                              </zone-style>
                                            </zone>
                                            <zone h='26761' id='30' name='Offense categories time series' w='43195' x='421' y='47406'>
                                              <layout-cache minheight='198' minwidth='159' type-h='scalable' type-w='scalable' />
                                              <zone-style>
                                                <format attr='border-color' value='#000000' />
                                                <format attr='border-style' value='none' />
                                                <format attr='border-width' value='0' />
                                                <format attr='margin' value='4' />
                                              </zone-style>
                                            </zone>
                                            <zone h='12963' id='157' name='Map' param='[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:is_traffic:nk]' type='filter' values='database' w='10489' x='43616' y='63611'>
                                              <zone-style>
                                                <format attr='border-color' value='#000000' />
                                                <format attr='border-style' value='none' />
                                                <format attr='border-width' value='0' />
                                                <format attr='margin' value='4' />
                                              </zone-style>
                                            </zone>
                                            <zone h='11571' id='158' name='Map' param='[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:city (location_dimension):nk]' type='filter' values='database' w='10489' x='43616' y='4167'>
                                              <zone-style>
                                                <format attr='border-color' value='#000000' />
                                                <format attr='border-style' value='none' />
                                                <format attr='border-width' value='0' />
                                                <format attr='margin' value='4' />
                                              </zone-style>
                                            </zone>
                                            <zone h='25092' id='203' name='Crime start times' w='43195' x='421' y='74167'>
                                              <zone-style>
                                                <format attr='border-color' value='#000000' />
                                                <format attr='border-style' value='none' />
                                                <format attr='border-width' value='0' />
                                                <format attr='margin' value='4' />
                                              </zone-style>
                                            </zone>
                                          </zone>
                                        </zone>
                                        <zone fixed-size='864' h='95092' id='46' is-fixed='true' type='layout-basic' w='45474' x='54105' y='4167'>
                                          <zone h='95092' id='89' type='layout-basic' w='45474' x='54105' y='4167'>
                                            <zone h='95092' id='93' type='layout-basic' w='45474' x='54105' y='4167'>
                                              <zone h='25926' id='90' param='vert' type='layout-flow' w='45474' x='54105' y='4167'>
                                                <zone fixed-size='268' h='25556' id='91' is-fixed='true' name='Crimes by category' w='45474' x='54105' y='4167'>
                                                  <layout-cache type-h='fixed' type-w='fixed' />
                                                  <zone-style>
                                                    <format attr='border-color' value='#000000' />
                                                    <format attr='border-style' value='none' />
                                                    <format attr='border-width' value='0' />
                                                    <format attr='margin' value='4' />
                                                  </zone-style>
                                                </zone>
                                              </zone>
                                              <zone h='69166' id='211' type='layout-basic' w='45474' x='54105' y='30093'>
                                                <zone h='22222' id='94' layout-strategy-id='distribute-evenly' param='vert' type='layout-flow' w='45474' x='54105' y='30093'>
                                                  <zone fixed-size='221' h='22222' id='39' is-fixed='true' name='Crimes per neighborhood' w='45474' x='54105' y='30093'>
                                                    <layout-cache minwidth='260' type-h='fixed' type-w='scalable' />
                                                    <zone-style>
                                                      <format attr='border-color' value='#000000' />
                                                      <format attr='border-style' value='none' />
                                                      <format attr='border-width' value='0' />
                                                      <format attr='margin' value='4' />
                                                    </zone-style>
                                                  </zone>
                                                </zone>
                                                <zone h='26666' id='213' type='layout-basic' w='45474' x='54105' y='72593'>
                                                  <zone h='26666' id='214' param='vert' type='layout-flow' w='45474' x='54105' y='72593'>
                                                    <zone fixed-size='292' h='26666' id='194' is-fixed='true' name='Average crimes per weekday' w='45474' x='54105' y='72593'>
                                                      <layout-cache type-h='fixed' type-w='fixed' />
                                                      <zone-style>
                                                        <format attr='border-color' value='#000000' />
                                                        <format attr='border-style' value='none' />
                                                        <format attr='border-width' value='0' />
                                                        <format attr='margin' value='4' />
                                                      </zone-style>
                                                    </zone>
                                                  </zone>
                                                </zone>
                                                <zone h='20278' id='223' name='Crimes on Holidays' w='45474' x='54105' y='52315'>
                                                  <zone-style>
                                                    <format attr='border-color' value='#000000' />
                                                    <format attr='border-style' value='none' />
                                                    <format attr='border-width' value='0' />
                                                    <format attr='margin' value='4' />
                                                  </zone-style>
                                                </zone>
                                              </zone>
                                            </zone>
                                          </zone>
                                        </zone>
                                      </zone>
                                    </zone>
                                  </zone>
                                </zone>
                              </zone>
                            </zone>
                          </zone>
                        </zone>
                      </zone>
                    </zone>
                  </zone>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout name='Desktop'>
          <layout-options>
            <title>
              <formatted-text>
                <run>Denver Crime Overview&#10;</run>
              </formatted-text>
            </title>
          </layout-options>
          <size sizing-mode='automatic' />
          <zones>
            <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
              <zone h='98518' id='44' param='vert' type='layout-flow' w='99166' x='417' y='741'>
                <zone h='3889' id='45' type='title' w='99166' x='417' y='741'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='94629' id='15' param='vert' type='layout-flow' w='99166' x='417' y='4630'>
                  <zone h='94629' id='13' param='vert' type='layout-flow' w='99166' x='417' y='4630'>
                    <zone h='94629' id='7' param='horz' type='layout-flow' w='99166' x='417' y='4630'>
                      <zone h='94629' id='5' param='horz' type='layout-flow' w='53437' x='417' y='4630'>
                        <zone h='94629' id='3' type='layout-basic' w='53437' x='417' y='4630'>
                          <zone h='94629' id='1' name='Map' show-title='false' w='53437' x='417' y='4630'>
                            <zone-style>
                              <format attr='border-color' value='#000000' />
                              <format attr='border-style' value='none' />
                              <format attr='border-width' value='0' />
                              <format attr='margin' value='4' />
                            </zone-style>
                          </zone>
                        </zone>
                      </zone>
                      <zone fixed-size='878' h='94629' id='33' is-fixed='true' type='layout-basic' w='45729' x='53854' y='4630'>
                        <zone h='53983' id='6' param='vert' type='layout-flow' w='45729' x='53854' y='4630'>
                          <zone h='27131' id='39' name='Crimes per neighborhood' show-title='false' w='45729' x='53854' y='31482'>
                            <layout-cache fixed-size-h='1635' type-h='fixed' type-w='fixed' />
                            <zone-style>
                              <format attr='border-color' value='#000000' />
                              <format attr='border-style' value='none' />
                              <format attr='border-width' value='0' />
                              <format attr='margin' value='4' />
                            </zone-style>
                          </zone>
                        </zone>
                        <zone h='40646' id='34' param='vert' type='layout-flow' w='45729' x='53854' y='58613'>
                          <zone h='40646' id='30' name='Offense categories time series' show-title='false' w='45729' x='53854' y='58613'>
                            <layout-cache minheight='155' minwidth='159' type-h='scalable' type-w='scalable' />
                            <zone-style>
                              <format attr='border-color' value='#000000' />
                              <format attr='border-style' value='none' />
                              <format attr='border-width' value='0' />
                              <format attr='margin' value='4' />
                            </zone-style>
                          </zone>
                        </zone>
                      </zone>
                    </zone>
                  </zone>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
        <devicelayout auto-generated='true' name='Phone'>
          <layout-options>
            <title>
              <formatted-text>
                <run>CrimeDataMart Overview&#10;</run>
              </formatted-text>
            </title>
          </layout-options>
          <size maxheight='2300' minheight='2300' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='239' type='layout-basic' w='100000' x='0' y='0'>
              <zone h='98518' id='238' param='vert' type='layout-flow' w='99158' x='421' y='741'>
                <zone fixed-size='29' h='3426' id='45' type='title' w='99158' x='421' y='741'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='22685' id='155' mode='checkdropdown' name='Map' param='[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:is_fatal:nk]' type='filter' values='database' w='10489' x='43616' y='76574'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='13614' id='156' mode='checkdropdown' name='Map' param='[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:is_nighttime:nk]' type='filter' values='database' w='10489' x='43616' y='49997'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='34259' id='150' mode='checkdropdown' name='Map' param='[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:offense_category:nk]' type='filter' values='database' w='10489' x='43616' y='15738'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='12963' id='157' mode='checkdropdown' name='Map' param='[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:is_traffic:nk]' type='filter' values='database' w='10489' x='43616' y='63611'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='11571' id='158' mode='checkdropdown' name='Map' param='[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:city (location_dimension):nk]' type='filter' values='database' w='10489' x='43616' y='4167'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='35462' id='1' is-fixed='true' name='Map' w='43195' x='421' y='4167'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='268' h='25556' id='91' is-fixed='true' name='Crimes by category' w='45474' x='54105' y='4167'>
                  <layout-cache type-h='fixed' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='232' h='22222' id='39' is-fixed='true' name='Crimes per neighborhood' w='45474' x='54105' y='30093'>
                  <layout-cache minwidth='260' type-h='fixed' type-w='scalable' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='7777' id='52' name='Offense categories time series' param='[federated.0xxzh3n1ngww291cy2y771tzroj8].[twk:full_date:qk]' type='filter' values='database' w='43195' x='421' y='39629'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='26761' id='30' is-fixed='true' name='Offense categories time series' w='43195' x='421' y='47406'>
                  <layout-cache minheight='198' minwidth='159' type-h='scalable' type-w='scalable' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='211' h='20278' id='223' is-fixed='true' name='Crimes on Holidays' w='45474' x='54105' y='52315'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='26666' id='194' is-fixed='true' name='Average crimes per weekday' w='45474' x='54105' y='72593'>
                  <layout-cache type-h='fixed' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='263' h='25092' id='203' is-fixed='true' name='Crime start times' w='43195' x='421' y='74167'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{19349718-721A-46EA-8372-F779EF090464}' />
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='worksheet' name='Map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:city (location_dimension):nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:offense_category:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:city (event_dimension):nk]</field>
            <field>[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:city (location_dimension):nk]</field>
            <field>[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:is_fatal:nk]</field>
            <field>[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:is_nighttime:nk]</field>
            <field>[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:is_traffic:nk]</field>
            <field>[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:latitude:qk]</field>
            <field>[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:longitude:qk]</field>
            <field>[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:offense_category:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{05ECBAB6-2950-44A6-9163-19A7C980168E}' />
    </window>
    <window class='worksheet' name='Crimes by category'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:city (location_dimension):nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:offense_category:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:city (location_dimension):nk]</field>
            <field>[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:offense_category:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{9690DF88-A0D4-4343-A648-8F184080491F}' />
    </window>
    <window class='worksheet' name='Overtime'>
      <cards>
        <edge name='left'>
          <strip size='159'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:Calculation_1005991600499748864:qk]</field>
            <field>[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:city (location_dimension):nk]</field>
            <field>[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:day:qk]</field>
            <field>[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:day_of_year:qk]</field>
            <field>[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:full_date:qk]</field>
            <field>[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:month:qk]</field>
            <field>[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:year:qk]</field>
            <field>[federated.0xxzh3n1ngww291cy2y771tzroj8].[tdy:full_date:qk]</field>
            <field>[federated.0xxzh3n1ngww291cy2y771tzroj8].[yr:full_date:ok]</field>
          </color-one-way>
        </highlight>
        <floating-toolbar-visibility value='1' />
      </viewpoint>
      <simple-id uuid='{623231FB-7818-4FE2-B55F-A5B8824ED7DD}' />
    </window>
    <window class='worksheet' name='Offense categories time series'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:offense_category:nk]' type='filter' />
            <card param='[federated.0xxzh3n1ngww291cy2y771tzroj8].[twk:full_date:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card pane-specification-id='1' param='[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:offense_category:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:city (location_dimension):nk]</field>
            <field>[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:day_of_year:qk]</field>
            <field>[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:full_date:qk]</field>
            <field>[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:month:qk]</field>
            <field>[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:offense_category:nk]</field>
            <field>[federated.0xxzh3n1ngww291cy2y771tzroj8].[yr:full_date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{B63C2FA1-64F1-483E-8347-9B88858645C5}' />
    </window>
    <window class='worksheet' name='Crimes per neighborhood'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:neighborhood:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:city (location_dimension):nk]</field>
            <field>[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:neighborhood:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{A3177803-A571-43B2-8D4B-A7AF0844B6DE}' />
    </window>
    <window class='worksheet' name='Crimes on Holidays'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:can_holiday_name:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0xxzh3n1ngww291cy2y771tzroj8].[:Measure Names]</field>
            <field>[federated.0xxzh3n1ngww291cy2y771tzroj8].[dy:full_date:ok]</field>
            <field>[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:Calculation_162411095359971329:qk]</field>
            <field>[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:Calculation_162411095361007620:qk]</field>
            <field>[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:Calculation_162411095361286150:qk]</field>
            <field>[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:can_holiday_name:nk]</field>
            <field>[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:is_can_holiday:nk]</field>
            <field>[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:is_fatal:nk]</field>
            <field>[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:offense_category:nk]</field>
            <field>[federated.0xxzh3n1ngww291cy2y771tzroj8].[yr:full_date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{8A211152-C9E2-4F18-93E8-800E7CE60864}' />
    </window>
    <window class='dashboard' maximized='true' name='CrimeDataMart Overview'>
      <viewpoints>
        <viewpoint name='Average crimes per weekday'>
          <highlight>
            <color-one-way>
              <field>[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:offense_category:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Crime start times'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:offense_category:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Crimes by category' />
        <viewpoint name='Crimes on Holidays' />
        <viewpoint name='Crimes per neighborhood' />
        <viewpoint name='Map'>
          <zoom type='entire-view' />
          <highlight field='[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:offense_category:nk]'>
            <bucket-selection />
          </highlight>
          <default-map-tool-selection tool='1' />
        </viewpoint>
        <viewpoint name='Offense categories time series'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='156' />
      <simple-id uuid='{91E47373-2B3A-4A51-9156-41A984116C5E}' />
    </window>
    <window class='worksheet' name='Crime start times'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:is_traffic:nk]' type='filter' />
            <card param='[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:is_nighttime:nk]' type='filter' />
            <card param='[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:is_fatal:nk]' type='filter' />
            <card param='[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:offense_category:nk]' type='filter' />
            <card param='[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:city (location_dimension):nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:offense_category:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0xxzh3n1ngww291cy2y771tzroj8].[hr:first_occurrence_time:ok]</field>
            <field>[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:city (location_dimension):nk]</field>
            <field>[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:name:nk]</field>
            <field>[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:offense_category:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{E6FC6946-5FA7-45C6-A192-3CFE0D4D3666}' />
    </window>
    <window class='worksheet' name='Average crimes per weekday'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:city (location_dimension):nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:offense_category:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:Calculation_486670268635303937:qk]</field>
            <field>[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:Calculation_486670268635557890:qk]</field>
            <field>[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:city (location_dimension):nk]</field>
            <field>[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:event_dim_key (event_dimension):ok]</field>
            <field>[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:name:nk]</field>
            <field>[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:offense_category:nk]</field>
            <field>[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:type:nk]</field>
            <field>[federated.0xxzh3n1ngww291cy2y771tzroj8].[none:weekday:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{679B5BF2-A395-4F68-9F71-2A706C96FDCD}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Average crimes per weekday' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Crime start times' width='192'>
      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
      /i/u/+An/D+AfMJA5g9gUgAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='CrimeDataMart Overview' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Crimes by category' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Crimes on Holidays' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Crimes per neighborhood' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nO2dSWwkWXrffy/2iNw3ksl9qa5eZ9MsGo0kaPEuCJYNyQIswQfr4IMAwycb
      hg8++GJYMODdPlgCrIt1GVuQJYxGsgRLntHMeHp6eqnq7trIIotrkrnvGdvzgdU9XVNVzWA1
      k2Sy4nfpKc6X772IjH/G+7/le0JKKYmJeU5RLroBMTEXSSyAmOeaWAAxzzWxAGKea2IBxDzX
      TIQApJREHaw6zaDWRZZ52vqv2vVfhmuSUqJFLvkCkVLy/lYVPzz54sIgQFHVSOVGjR1HmaeJ
      lWEIQiCEuJD6x3L9Dx9AoZz8GzyWawpDFCGeLAApJZvrd8jPLJJJ2h/8ldHIxTTND+OazQbp
      ZJK7d29TmFmimEt9+P/1+30cx3lqAzbX76AlcuTTCRzHwXNHKLqJKn7wWXc0Qn9Y37/6739B
      qzeKcg9iYiLzRAGEwxpGZoGgW+Vr37zHS9fncf2QVr3F1FQRVYF37+7w8vVFkrZNr99Dax4S
      DIc06wd4eopSSmVz4x6GYXB7/QFLc9MkswX2dnf4wpd+FNNJ4Y76tNsuN956i0zawUwXGQyG
      ZFMWW5tbDPo95teuU8wkz/u+xDwnPPH9o5hZOkf36Qx91taWSWULlApFivk0TipLwjYpl/IY
      loVQFAzDRFM1DvZ3MBJp/NEAEEzPLWDpBssrKxQLeQbDESnbYOT6dFs1fFRAIZt2sJJZVASz
      83MoikBRoFQqcfJLPybm2RGTsBQiDEN+/1t3GLnBybEyRBHRvH3U2HGUeZpYyfFXJCL8HEzK
      9UskSKL5mjFdkxDKZJhggLXZXEQTHKKoEW9WxNhxlHmaWBlKEBEflgm5fikfCkB59msqpB0W
      ptKP/M33fTTt5Mc6CAIU5ZwEsL+zRajZ5DJpHNv68O+jYYf1e9ssrF0jZRsfMc6S0cjDNI0P
      Y3/jd74Vm+CYR/hrX1rj1//WFz9RGecigF63SyJrcniwj2GaNKoVqn3J519ZwBuOuL+xjiog
      k82yu30fqWg0m30MxWN+7VXyafvkSmJinoFzEUB+qkw+m6RSbdNsNsjlsiRyFqpu8cIrr9Hv
      HHJY7yIUhUKpDISIUGDqgl6/FwsgZmxMjAn+g2/dYeRFMcESJUJf+TSx4yjzNLFSyuOJsAuq
      fyzXBCBlRBP85DJXZ3N8/sXZR/52Wg8wMQKodD2itDQIQ9QIs4uniR1HmaeJDaVEEM0EX5br
      LyV19I8xw2EYIqVEjTBrG/WhPk3suZpggNB3WV/foFSeJ5lIoKk/+DIbjSa5XJYnmd8P+PP1
      FqPg0ms15iE//0qegnP5l5qdnwDCAM8PqB5scahlqW69R352iaHnY5k2u/dv0Q11lFChkE8Q
      Kgpup09uZoGZUua8mhnznHFuAhBCoKsKdirNaOCTLU7hj4ZI1cBxbEIlTz6Zo9dqHPf3FIXy
      wtJ5NS/mOeVCPYDvuQjNQD2haxuGIbcOB0TpAYVhiBKxvxo1dhxlnib2g68okmG8JNd/rWhh
      60/v3z93HuBJaPrjff2n8YJ7ExF6J8ZdlgfgLGPPQwDq9GsIO/vEuHE8gJeFS9NSKUO2NtYx
      k0ma1QaF6RK1SpWFtTUcQ2P4tX8Mg/pFN/PKYv/ib6Itfvmim3HuXBqbHgw6GJkSCVPBHQ5p
      9QYsLq9Qq1QuumkxV5hLIwDVStCt7dPpe2iGgaEINjfWSeUKF920mCvMxEyEeW//DvjDE2Nl
      GEbaZnea2HGUear6H06EEWWG9Rnr11/86yjpuSfGjcMDxCb4lBhLX0bIk5dCXJaZ0LOMHdtM
      sJFFTU1Fir2qnIsAmrVD6j2P1cUf/MK4wz6eVEnYx3t+240GTi7DoN3HDzxM02Q06ICWJJOy
      4b2vgtc7sa5oW6dPFzuOMk8Te5p+6qnqX/xJSP2VU3zi6nEuAmj3RqwuzPO9b/0ZidIifq+N
      k0zT6rYp5bM0mj1MXWcll2Lj7m18VWd2poTbqyNN9VgAMTFj4FwEYOuCjQcPSGaLqDJgGEp0
      Q2N6qoQMAxRFYDsOAsHCyjV8f4hEYDtJ5CnmCmJiTsu5m+AwCAgBLWKeFzg2TGL3uwjpR4q9
      ahNhp/EAp6o/OYuSXz0xLjbBZ4iiqs809npTtfDDCALgFA9AxNhxlHma2FPNBEcoM2EkuD71
      MqHvX55x8Avi3ASwv71FfqbM7m6F1eWFD//ujYZIKfAFOA+TYDUadSSCfC73Ydx/+sa/oT1q
      nVdzrzTXitf5Fz/3GxfdjEvBuQnA90c82Nik5we8/9676KZJr9VFCA87VaLXq2EbNpu7h1xb
      W0bF52Bvj0xhivJUPBkWMx7O7Q2YzBQRqkq5mEVVFDTNYGl5manpKXRdQ1d1TNthZWWJhGNj
      285xgqxTeIWYmNMyMTPBf3Ln67iBe2JsPBN8cpk5O8ePr/5UZMMYm+BLwKszP0sYJTNaGKAo
      ETMJR4wdR5mniZUyBCJmh35KmXMZI/LG9ueJcxVAo9Fg0O2SyqQxk2mMh1nBRsMhhmVRPdil
      M5SsLM8/fNRD2u0+yaTDN+634z3Bn4Bf+VwJ5aSdR88h5yqAXrdDv9ui3nOh/z790MQdDckm
      bUoLKwx6PVAdNu7cIlRUfHeElSiSTD49zXpMzCfhXAWQc3SEOYvodDBzBbJmksZRhVy+gAAs
      y6LvQa44jQhdKtUalmWeWG5MzLMyMSb4TnVAEEaLvWozwceJsSJmh35KmS9PHY+qfZTYBE+Q
      CV7rvRlpT/BVXw6tLn0FoT39rThpe3IvmjO7U9XKLmaqxOH+Dmtrj68vGQ6HWJbF4cEOjfaI
      YjFHIZ//2DI/MMcAwz/6Z/GeYCDxD/4PQitddDOuDGcmANcP6exvUmsO4M77+FIjm0kw6LWp
      dT0Cz2N17Rq9Xg936NFoKdy98X2S04vsbm6wtLgAZpL6g9tk51YY9gcI32Nu7YX4iKSYsXFm
      ArCcJN7IZX5+BrfbQig61cMKiUyWleUyvVYHCWTyJVbW8hwdVpDTs9hJi3B2jmQqQ7vbITtV
      xtANZpanGLXb8RFJMWNlYkywd+OriODkPcFX1gTzMLvep34JoT99WHgchjE2wZeA3ZXPEj7n
      e4JnnDmMj3n4Y07PWAXgeX18X0dK74lnBjfqdXIPjfDB7hbtoeSFteUPuz3tdpt0+vgMqK9v
      /y6D4OQ9wVeZn1v4JV42Pn3RzbhSjFUAvj9iNFIY9Ftsb95D6Ba+D4YmCYSBxZAH2w+Ymlul
      3+szGsHb3/sWqpVF0Q28fpPla6+QTlgnVxYT8wyMVQCKUNnbfUCukGOqvIDv9qk3+2iqilA0
      HDNBujQLqFilGdZyWe7dvoWi6hRm5xm1LDzPA2IBxIyHiTHBN+pvEPB87gn+4JjUlfR18mbx
      Y2NjE3xFTXC5NyB8zrNDZ3KpSOXGROfCBdCuVdg+arK2eg3LUGm122TS6cfi3vnzf443fL5n
      gn/mV/8EVXu+M7mdNRcugGGvj+uN2N9eZ323QTmj0y2WeOetmyy/cI18vkgpHx+RFDMeLjwr
      hmFZGKqOVFSmS3mmZsrIULK0skI2m2O6mDu5kJiYZ+TC3wDZqTLZqfKJcde/+A8Jg9GJcVfV
      AwhAM+I1UWfNhQsgKjPla4goo0BBiPIx59M+S+w4yowSKxQTLf0aYXi8ESKqsGKicw4CCLj7
      /h3y5QUK2R/8gg0HAyzLYuv+PRL5GYrZFK1aHV96CCNJPp14pJThg/8GQWf8zb1ECKNE6tV/
      edHNuNKcgwBCev0hGbfPH3/9GywsLuIJjWG7zWc//RKKU8AWQ95+ewtLN+j7PdKWxRvfb/DS
      yjROdppcKl7/EjMezkEACpZlEAQ+5bl5kskM3aFLspBBGA5e5x7NwEFVVRKpJPlkCYY9ylMK
      hmmDjLAPMibmGZmYmWCv/hcI+ZxNhKk2Rv7HTuUB4pngKzoT/GZ3Di/CrvirJABb1/nCx+8a
      jfmEjFkAkt0Hm6hWkkw6jW2Z9Pv9D5dG14/2aQ0lKwuzH37CHQ5QTfux0+P/3Z//Ga3hYLzN
      vWSU02l+a/HvXXQzrjTjFYD0CYRFOeuwtbeLqhp4oYTRFrnpBboDn5WFMt/40z8mXZ5HDjxU
      NcBMZ1h/7w7LL6yRL5TimeCYsTFeAQgN/B6VmiSdydNsNEinkgzl8YSWbSjc3z5gem6BRDZH
      0rQZjbr0RgFLqytkcwWmi7kP+8AxMWfNmLtAgsWVax/+q5DLHv+P0sO0Hpkkjyf4ePKv/d//
      0S/jBidvibxKHsAx4vPRxs3EmODlfJ4gwoDVVRHAteIUenw2wtgZiwBq9Rppx8TDxrHUR4zv
      BxzsPsDFoJTPYNvHx6AOBgOklE/cP/yHt27S904eBr0q/PqP/zQZNT4edtyMRQDdTgdHD9na
      O8QbDckX0uxs3kfRDfq9NlOL15EyxPddbtx4h3zaYb8xwlQDSuU55O4DPKHgdvrkZhaYnY5X
      hMaMh7EIIO2YbGxXKU7PYCuCge+iGxqqYVGaKhIqKq6iIoGpYuH4v6UkhhJg6Doy1BFCZWp5
      Jk6MFTNWJmYm+ObBHn6E0aCr4gFem5nFeDijGc8ExzPBrO3sg3+1l0II08T5/OcjfTbmbDgX
      ATTrdcLAReoWum6SThybu8BzCVAw9Kc1I6DV6pNKJaj/5m8h2+3zaO6FoRaLsQDOmXMRgCY8
      NmttVO8QRdf5zl6NQlKQSBcIhYajw3DkgyLwPR9VFWiahue62MkiqVTi5EpiYp6BcxGAk8ri
      tF3QVbIpB9VIoIship7ED0JE6GLbJrZtUW92MXWB0AzCMMB24iOSYsbHuQhA0UxWlxY+/Hf+
      YzJ7TE0//rcwDMn96q8gI8wDTPI5wYoVZ8A7bybGBCcWFxDhFcwOvbwCuh4pPubseUQAwajP
      3fvbzC4uk3ZMBoPBh7O0T0OGARvr90gXZp66ajPwhnSGAaE3Ip/P02vVaA9herrwSF6W3Qf3
      6fsK11aXHh////Y3YXjy+QCnWTwQNXYcZX4YOz0Nerza9aJ4RACVSpWpqTyd2j7/90/fo7xY
      Ju/YvHd3i1c+/SkG7Sa5TIp3b7zNwtprOI5FKWdimGn6nRY397bptapoiRyHOzssrF4j9H1e
      /dTLNA/X0UyHN1//Q+aXlwhEgur+PbqewcJMASuZY9Dv0fc17tx8g3aY4Iuffumi7kvMc8Ij
      AiiV8tzd3CZp2ywtzZMtlcBzWV1bxdEFejKFMAxmFo7fEI3egPlykeHgACuRYWFpmcahge4k
      sXWDTD5PytJBKOi6SjqbpTw7j207qHqC0CyRMxI0jw64PruAxixp16PXVcmrFv1uBzQTy5iY
      nlrMhPHMM8HucIDQTfSIOXCeigzpD0Y4ztO7WmEYItbvIa7iTPDaNThh2XM8E3wJZ4IN64xW
      KgrlYx/+D8l4EJ6cGEuGIZxiFCZK7DjKJD1PaGRQ4jN9L5Rzv/u9xhHbtS4vrK2gipB+38Vx
      jof/As/Flwrmk7o8d/4AvJOPSJoYE/zi34Spz56i5JhxcO4C8IZ9fKlw58b36AmLopmgL0ek
      Ew7ByGfo9rm/W+XVl1bpdPrk80WmSnFqhJjxcO4CMBMZXpjKcrDlYqo6lmpRLMzQqR2Syufp
      9DRWVxKoCDIJGzsVHwoRMz4mZjm0OLyBiOABJsYEZxbxzVxkwwixCT7L+iduOfSNg5DAjzoK
      FK3MqLFnWebC4hLFqYdrQfyTBR0zXsZ7TOpoQKc/pNMbkErY5HI/2No4GAywLZPNjXWShePs
      0M1qDV96KGbqsezQv/8/vkqv2x1nc8+FX/g7v/wDAcRcOGMVgKpr7G9vIawEoTfgO3/xbeaX
      5gmEjtvr8tlPv4SaKGAx4O23NzF1g4HfJ2nU+d4bDV5cniaZmyaXjpdDx4yHsQpAKDpWMk3S
      MdCtJMurK+TzWZrdERlbQxgOfnedduigaRrpTIZiYhpGPVypYyeSCC69RYmZYCbGBL/z5vfx
      I/SZL7sJXlpeoTR9vOb7NIYRYhN8lvVPnAke5Id4kc4JDlCUaNNRUWPPssxELj7n6zIxdgHI
      0OfevXvkCmWSKRvrI+teBoM+ruuSyWRPLOe3v/tfaY9a42zqufCvf+E/4hixp7ksjP8NICWB
      79M8OmC7EmIEPpoScNBysVRJNpNiZ7+C4o/QDIveYIhp6AjNoLV/n9zia1xbjEdNYsbD+AUg
      FGzbJlucxmy1KOTzDLpNkgUNJRiRSOfQVEGnUUU1HbTegKlSAYGkZigks3GXIWZ8TIwJrver
      yAgjQkEQRDJWp4k9yzJzTgFNOf7diU1wbIIj83bzdTwZ4aBsKVFEtISKUWPPqswZZ55S8gm7
      /mMujMgC2NlaZxDqrMzPMBq5eKHENlS8ABQCavUm5dlZep0ulm0QhAJdV5HhscorlQpuv4Xh
      ZLASaQxdRZE+qmEzah2y3+wzNT2LisRQIRAq0u/T7obMTOe53brJIDh5OfRlxg99Plv40kU3
      I+YjRBaAFwpG/S7bW5uomsr7d7dZW50HBDIIEATcuXUbDBuvVUFaGSxcRr4knStgKgGDUKN2
      cEQ61cUNfNRQ4AculqHhBoKjgz22dysszU+hSB8XHduKV4PGjI/IAijlswR0mZkuQejihRoz
      M1MoSBq1I4xkFgIPy7LwcjaDQMPUBALI5QuE/gir5xLmRxgqdEYSNRhgJGZp14+YnSqiyADd
      sJkq5VEIOTqskM7EAogZHxNjgrt+tLygl9kEa4qOo/1gDiA2wbEJjsz2d/8zfoQtkVJKRETD
      GjX2LMp88Uv/CCtx8oRfzPkSWQAP7t+l0fF46cUV/EAQ+iOQIbfWt3j1xWsgBAgVXVWQQqCq
      GpXdLYZSZzqfQkGyV61hGwky2Qy+72HpKm4gsUwDKSVIycD1MFWQqkEw6tLuHZvg/Y0/xhvW
      x3kvxsraZ38NEvGE3mUjsgCCIMD1PW6/e4NAc0hYOkKqFLJJNrf36DUqmKn8cf5ORSFfLDB0
      JStLRe7dvY+QHhgGvX6NRneAJgJ0EeL6AdJ3cf0QNANLBVcKDDyk7uDEJjhmjEQWwMzcEtMz
      Pv1Bn5EvyGdThIFE1UCi0sslCVQbTUhAUigUGHRb7B7UyaYdjEQGVRGIMERqJoYKm3du0BNp
      VufnEIBp6Bw2uhQMkJrDsFsnlY0FEDM+JsYEj/pHMMEzwaZTRFEe/b2JTXBsgiOzub4XaT+A
      lCFCRExiFTH2WcvM5HIsrl474RMxF8knFsDG7ZvYmRyqnsHQQhK2Sa2yj7BTDPp95mbnONrb
      YohBMe1gOkn63Q6GrlJttCkUi/juiFGnS26hTPOwiecOSKXTdBoHSKPI7HSWyt4OnuuexTWf
      G2EQxAK45HxiAdipHM2jPXpek4wD21InZ0gUK4076HBYb+GFgsX5Eu98/3UwMqQshf7QR7Md
      jNo+rV6AO/LILcywv72Jr+p4QYDwPaR6ciaImJhn5RMLIJvLk0pY+Gg0mh3WpgoYSshhvcfi
      0goSFRyFvYMqUzNz6IbJUa3J6toKMvQZeiGG12ZudgYVheuvvEoY+kgEIswg49PSY8bIxJhg
      d3TySlC4XCZYVVX0j8n8HJvg2ARHJjz6KoQnnxCDlIQRZ20jxz5jmcJZgam/HO1zMRfCuQvg
      sHLAYOSRSTk0Gm1KpQIg6PXaqHoSVRNYuoIfKsjAxU6kURXwm9+HoHPezf1kSB+IBXCZOXcB
      dOpH4BRotpp4XsDezhYIA6ErSLfLzv4hC0tlNOkx8DVMs83K0vx5NzPmOeHcBTC7fI3A90FJ
      02k2EUoCzXAwDY3AczGcBKWpAgqS+tEh6WK8gypmfEyMCZZ+myjd8MtkgoXQEdrTU6DEJjg2
      wZE5+L23CEcRDsq+JDPB9sIUxZ/6TKTPxFwc52+CDyuMXI9MKo0iJGEQUOv0SZkCYWVRCDFV
      CISG9Lp0+lCeKdC+uUHQjTAKdEmQfgCxAC495y6Ao4NdOq4g9F1cNyR0eyimSaUn0fUhO7sV
      luanUaSLi4FtxnmBYsbHuQtg9YWXH/ZpJe+99Qap6SUW5qcZuR4y8DEMm6lS7jgx1mElXg4d
      M1YmxgQHvWGU1dCXxgQruopqmx8bG5vg2ARHRuzWITh5YZx6iv27UWNPXaamor4Uz11MAmcm
      gMNKBVt16Wt5TEWiSg/XD7GdBP1el0wmw/b6fUpLcxAKQneImUhR2d7AVRzmShmkomPoGu1G
      jREhg5bL/PI8uqoQ1toIL4jUltO80qLGnqpM7TQnC8dcJGcmgG67zl6zjpYaUavVWCwX8DwP
      VaggQ+5v7ZJPOtx67yaGncTRTKyeR6FY4v52hW23SzjskcgVabQHTE3nCEOfo8M6s+XiWTUz
      JuYRzkwA5fllFhYWaXcHpNNJSrkMIPGGfR7sHvHy9WUOqy3WVlYYepBLpwHwBh2y+QK26iOM
      Mt1mjeXFebq9LvOLC2fVvJiYJzIxJhgviNQPvywmWBhnZy5jExybYN7+2uv4wygzwRefGEs3
      DT73i1+JFB9zsTyTAHy3x433tigWU6QTCaxEkuFgwNHhIYZhkM7lUUIfw3botLukEiYD16NW
      bbCyPMuNG7dI5fKkEwkymRTNZhXTyJBKmxwd/dCeYLPE3HSWg/e3cXvRNsVcNLpt8DliAUwC
      z/gGECQthaNak36vR+Dex0gf99eDIKBRrbC7vUOhVKJSOaA4s4CmqWgcJ8sNJWh43Lj5DoVS
      maligtt31vnCF1/hYGcLX9XxwxAR+MgIQ58xMc/KMwlA0QwWV1bodLq4gy7J2TksK0Gj6mGn
      8hgqWIaO4SSx7QTJZIJAaISjHqHQefmVV9CVgFCqFIolbEsn5WQJAsH1V14jDB+mP5FZUK2z
      vN6YmEeYGBPsDaKlRLkMJlhTVYzEycKNTXBsgiPzX17/Fv0IeYEu6oikX/vyV5hJp0/1ZcVc
      PI98U+Gozr3tHqVSljAIsHTw0fFHfYRqYJsqAzfEVEM8P+Cw2mZ2Jg+qiTvo4qSyyGGL9Z0q
      S4tzBCFo0qPa7JCwLdKZLJ7v4fZaHLUGzM1MEcjjfcKKAsXSNK4XkHYMeqMADR8zkUZXFf7f
      1iat4eCi7tOJ/PKPfP6imxDzDDz6UyVD9g+OwGtz1B4xU8qgqiqNo32EXSSf0AjkccazMHBR
      NIe9vQOQAYquU6s3UcOA2eVlHty9yQCdrJNACJ97WxtoiSxr16/TH3osLS/y4P4GUvLha3DY
      afLenU3KC3OI0KW6X2F29UWW5uJtkTHj4REBCD3Fl77wGsNeG9UeMDtTBAmKlKTyJWxdAyS3
      b34fLTtHztQx0hZoFgnbAgSWobH94AGzi8t0+h6m8FGtPJpmks7myaQcMtYM27t7FPM5fGEQ
      uj0Mw8ALJCurK7i9Go2Rztq1VcxU+mLuTMxzwcSY4K57uRNjJQwTVVHGZhghNsFnWf/EmeD2
      W3uEEVaDXtRMsPW5RdRkPGQ7aVwqAfTbde7e36GUT6OmSlQ2b/Hia59DV6C71yQYnZwe/aIo
      vTp30U2IeQaipTo4NxQWl5ZwBz1G3QatVpf9o+ZFNyrmCnOp3gCGZbH3YJfF5WsMRx7ln/hJ
      vNHkZIKImTwmxgSHXvBwJdHHc1EmWNFVhCJiExyb4PHwrd/7bbwIE2EXYYKL8yt85md/PlKd
      MZeLcxVA5eAAU3HxjDyKDFGlixtIEokk3U6bfC7L/Xv3mVmaA6ngDXo46TymrrBz6x2GvcuZ
      HfqDX+iYyeNcBdBt1dltN3GyPpWjI5bKRXzfp1Wro2uCt/YOKaYS3H7/XZxUGkuxGbjEe4Jj
      xsa5CmBuaZUFQnr9AYlEklI+DUiGvQ57Ry1eeWGJo1qbayurDEOFXCpOihUzXibGBEcdDboI
      E6yoKrpxnAQrNsGxCR4LtdtvE/qXb0/w1MufQ7edSPXFXD7OTQCjfou79/eYLuTxVRVVStxR
      DzuZw1RCQtXANg26nQ7Nbg8NSCdtzGQWQ1PoHu0TepdvT3Dhhdcuugkxn4BzE4A37JFIpajV
      GgThAMNJ0xv6OINDGrV9MvlpAs/HMmxCU0WRPu/e2KC8ej1eDh0zNs5NAIncDM3OFrmFOQxN
      4eioRqmcoe8JCtkEUk+iiRDLMPA5XqNhGQZmKnNeTYx5DpkYEywDHyLNBPuoajRdR439uDhF
      0x7xB7EJjk3wWPj3v/sGvUuWGMvQVf7J3/3xSHXFXE4uXACH2/ep9HyWZqfwAoGOh2Yn6bZb
      ZDIZXM8n4di8efeA1iVLjGVFSH8Yc7m58G8wUyxx1FynUm0gA5d6ZR8r4dDpeGQKOa6trV10
      E2OuMBcuABmGJDJFlHCAmS6RSyVQzASdZoP81DSOZcRrbWLGxsSY4FHEwzHOeybYNvVH/h2b
      4NgEj4XXd3p44claPU8T/MWFFHakmmIuK2cqgPv3biHMNEroMjM7R+C5jFwXKQWDwYCZ8gw3
      33yD4uwShWySQCoEbh9XqqjBCMVw6Hc7ZDJJBp4kGHZJ5UoYmsJe22UUXK6X1WdmL1d7Yk7P
      mQpAhhIBSEK27t1GESp2aZpu7ZCjSgXVzlCeLVNv16ke7BCgkEzYHNbbzE3lkWGdeqvP7o6H
      nkjCoMtRy+Ola/GBczHj4UwFkMvnaQ0CSqVpdnf3WVycR+gGGdPANC2yCYNGP2C6vIAIj8f0
      ReiRSOfJZ5LI0EfR6uQySTpDH+EnSWbjvQAx42NiTPBx7+dyzQRrCo95g9gExyZ4LHh/9E9h
      dPKWSCkl4SlMcJTYH47TX/vb6C/81Uh1xFxuzlQAm+u3Uc0E/W6f+aVFOq0W2XSCnhsSDnvY
      yRSdbhdNM9CEj2Ym6XdbZPIl9rbu0en7lGeLOE4Gzx0xGPXJZ4sYhkbw4DswqJ9lc58Zbf6L
      F92EmDPibE2wolOeyrPt+2y+9zY1T8EgxEmlUP0Rot5GM3UM3cPrNej0h2SLUxOBqQIAAAei
      SURBVPiNDlJKEuk0tYN9dobbZMrzNHc3MBM5jHjJQcyYONMna6aU57DRo1wuI6dKOJVD8rkM
      3YEP/oBUroSuqQgBnYZKYcbGcRxAQWRXME2Typ6KYSdIpJLMFbMEl2zoM+ZqMTEmmMCNYIHP
      aSZY1RDKk387YhMcm+CxIG7/L0Rw8mpQ9RQzwVFjH4t74W+AEw/PXgUeE4CUITs7Oxwd1Zme
      LqEKSTZfpN5oM+o3yBZnIfQZ9vvkikWqh1WGww6F0iyDwYBc2qHdd8k6Cs2BZNBtk83mkULi
      D3volgOhoD8cYtsGIvARZpJRu4ZumQzc4ywLbr9LKmFhpY4TY9G8D17vxAuK9uifLvaxOP9n
      TlFLzGXmsXeqEIJh6xAzkcGXksreNu+//z771RqKatJt16jVjxiNAm69+y5ur09oOQybR7hu
      l9tbFYbDPoaToba7iW07HO5u0R96dHs9dvb2ONg5wPcHHNRbVKsV7q5vkMul2diqgN/nzu07
      hNLj1vu3qBxVL+K+xDwnPKELJJhaeIGEpTMMNTQZkkynaHaGzJTyICVBGKAqOumE4PV3NvjK
      j32GkStxuz1eWi0hBAihMLe0SjKZIJlwMC2T77z3Jkuv/Aj5hI1uqLh+yLBrkjMS6HaKtZUF
      TE2yumqRz6VxTBMjGR+RFDM+JsYECxlE6q+fiwkUKjylLbEJjk3wWPgP3/y39L3+iXHjXg79
      09f+El9e/olI5cdcfi5EAI29DY6CJLXNu7z46nWEZqMELnbKpl4dkMsYtAcBajjESuWxdJX3
      Dm7SHrUuormP8MrMpy66CTFnyIUIQNFt3FYVM5mlVqvS7IzIJlNcyyaQEtbv3sFTTfr1GuWV
      6yzOTl1EM2OeAy5EAIlMnmU7iVA0hr0WuaJNyrERQmPUrzM9t0TfDSjnM7EJjhkrE2OCAxlE
      Grf3gwAt4kxw1NiPxilC/VgzGpvg2ASPha9v/09G4ckp0sdtgn9m9ucoWKVI5cdcfs5VANvb
      21iawNccvH4XRIiuqOSnZ9ndvEOnFzBdzpNIZPHcIcPRkHyugGHobPc2GQQnzwSPGzeCCGMm
      h3MVQMbWeVDvkzJ9kAJCl8OjBi1PR5eQyKRpVg/Ze7BDdnaJxs4GZjKHYZxnK2OeJ85VAKl8
      kUVziK590O+T6LpFupBDV3KYpkFlX2VmLomTTDJXzBAEcVKsmPExOSY4jJYdOgzDSGbxNLEf
      jVPEx8ePo/4PvqIofmXc139WsZflmibCBAsh0FT9wm9WFIQQZx57modlHPVf1WsSQkzGGyAm
      ZlxMxBsAYHtznUbHpZhPMvJgeXnh0Q5R4HH33h1CV0dLa5SmFkjb+hPLkoHLN7/9BtfWlhkM
      BqysrDzxl0hKya1336E0u0zraIdUaZGp/JOPbh11jnjr/QcUUllEQmWuvIilP/5LNOp32dw7
      wlYDGn2fYsbGCzWWF+cei20ebdMOUiijGr3hEEWxyRaKD4+X/eilj7i1vsnLa0t8+/V3WFmd
      Z9Qfsbyy/Nh19TpNDmptFK+PkS4S9ptgpll4wmx7dfc2rrVIZeNt0tkkbpikPDdDNmk9ep9C
      n/U7txl5klHo4aSK2MJnbnkZ7Yfqrx8dsLVfYzrn0OoNMTUDJ1tgppj94bvP9uYGg0DD6xzi
      5KYJvYDywgKO+ehj67tD7t1+n1BPomgaqYSFOxiytLKM8kP1d5o17tzfxkpnMMPe4/sBLitS
      aGSTFq1GHTT9cTcgwLAyzM5kqNY7WMbTJ1j2th8QBC7tVotR8PDDT66VXr/P4WGFo2oN23r6
      cFQYSHRDx/f6NDtDdO3Jt9Z0kqQTFig6aceiWa+h6uYTY7O5PLoqUFWdxYV5qtUapvV4rKqb
      5DNpdne28dwRzUYdH+2JK1YTqSyOqdPv9zk8qFCtHmFY1mNxAIViEUGIohpIGVKtNTDNJ90D
      gWGnmMpnKJdL9Fttem6I+oT6hVBYXlpCUXWWFuepVqtPvCYAVdOZztnUO33arRaNdu8jAygf
      rV3i5GZIG9Bq1KnXq3ioT+1eLS4tY+sP53cmpQvkDro0eh7ZlEMQBNi288j3K32Xexub5AtT
      pLMOngfOxzyww+EAIRRkEGDY9mO/FMeFShq1QxQrjW0o+H6I4zw5Ha4MAx482GZ6egZVEwRS
      feIBGoNuiwd7h5RnSgw9yCRtgiB4mBzgUaqVPdqDAE266E6afC5L4HuPxfrugPubD5ieW8JQ
      QCiCMAwwrcevq9OosldtMTdToDeCbOpp9UsOdh4wEiaGdEnni2iaQRD4OPajgglDj427G+Sn
      y/R7XUrFAooMQLfR1Ufrr1b2aA0CTOEhzCTFfO6J1wQhWxsbmKk8xWwSLwjRFEGAgmU8+mb3
      Rn3ub24zMzdPq9mkVCpCGGA84fpb9SMO6l3SjkEyk50cAcTEjIOJ6QLFxIyDWAAxzzUTMwoU
      E/PDbL77XW5WQ/LC5dM/8jmGoxG1oxqqYbF1+yYvf/7HGLWPyBVm6HsupbTD5l6V++98m+uv
      vsq3X1+PBRAzwQgTS2lSrezy3rsqO7UeGVNBUy2EneHW9/4329WQcibN4he/zMFbb9J1Q/Ts
      PHPzM7S+9g3+P8bHRfOg//sbAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Map' width='192'>
      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
      ODn1BSB7AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Offense categories time series' width='192'>
      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
      YII=
    </thumbnail>
    <thumbnail height='192' name='Overtime' width='192'>
      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
      YII=
    </thumbnail>
  </thumbnails>
</workbook>
